/**
 * 主にキャラクタステータスに作用する関数がまとめられたファイル
 * ただし
 * roro が避難所安定版で運用されていたファイル群
 * ro4 が避難所次世代版でリファクタリングされたファイル群
 * なので厳密には様々な処理が入り混じっている
 */

function RefreshSuperNoviceFullWeapon(bFull) {

	var idx = 0;
	var idxSlot = 0;

	var itemId = 0;
	var itemIdArray = new Array();
	var cardIdArrayArray = new Array();

	var strObjId = "";
	var objSelect = null;

	var funcClearCard = function (regionIdF) {
		var idxSlotF = 0;

		var cardIdF = 0;

		for (idxSlotF = 0; idxSlotF < cardIdArrayArray[regionIdF].length; idxSlotF++) {
			cardIdF = cardIdArrayArray[regionIdF][idxSlotF];
			if (CardObjNew[cardIdF][CARD_DATA_INDEX_KIND] == CARD_KIND_ENCHANT) {
				cardIdArrayArray[regionIdF][idxSlotF] = CARD_ID_NONE;
			}
		}
	};



	// 変化がない場合は処理しない
	if (g_bSuperNoviceFullWeapon === bFull) {
		return;
	}


	g_bSuperNoviceFullWeapon = bFull;



	// 現在の装備状況をもとに、設定変更後の装備可否を判定し、ItemID を特定しておく
	for (idx = EQUIP_REGION_ID_ARMS; idx <= EQUIP_REGION_ID_ACCESSARY_2; idx++) {

		// 現在装備している ItemID を取得
		itemId = n_A_Equip[idx];

		// 現在設定しているカード情報を取得
		switch (idx) {
		case EQUIP_REGION_ID_ARMS:
			cardIdArrayArray[idx] = [
				n_A_card[CARD_REGION_ID_ARMS_RIGHT_1],
				n_A_card[CARD_REGION_ID_ARMS_RIGHT_2],
				n_A_card[CARD_REGION_ID_ARMS_RIGHT_3],
				n_A_card[CARD_REGION_ID_ARMS_RIGHT_4],
			];
			break;
		case EQUIP_REGION_ID_ARMS_LEFT:
			cardIdArrayArray[idx] = [
				n_A_card[CARD_REGION_ID_ARMS_LEFT_1],
				n_A_card[CARD_REGION_ID_ARMS_LEFT_2],
				n_A_card[CARD_REGION_ID_ARMS_LEFT_3],
				n_A_card[CARD_REGION_ID_ARMS_LEFT_4],
			];
			break;
		case EQUIP_REGION_ID_HEAD_TOP:
			cardIdArrayArray[idx] = [
				n_A_card[CARD_REGION_ID_HEAD_TOP],
				n_A_card[CARD_REGION_ID_ENCHANT_HEAD_TOP_1],
				n_A_card[CARD_REGION_ID_ENCHANT_HEAD_TOP_2],
				n_A_card[CARD_REGION_ID_ENCHANT_HEAD_TOP_3],
			];
			break;
		case EQUIP_REGION_ID_HEAD_MID:
			cardIdArrayArray[idx] = [
				n_A_card[CARD_REGION_ID_HEAD_MID],
				n_A_card[CARD_REGION_ID_ENCHANT_HEAD_MID_1],
				n_A_card[CARD_REGION_ID_ENCHANT_HEAD_MID_2],
				n_A_card[CARD_REGION_ID_ENCHANT_HEAD_MID_3],
			];
			break;
		case EQUIP_REGION_ID_HEAD_UNDER:
			cardIdArrayArray[idx] = [
				CARD_ID_NONE,
				n_A_card[CARD_REGION_ID_ENCHANT_HEAD_UNDER_1],
				n_A_card[CARD_REGION_ID_ENCHANT_HEAD_UNDER_2],
				n_A_card[CARD_REGION_ID_ENCHANT_HEAD_UNDER_3],
			];
			break;
		case EQUIP_REGION_ID_SHIELD:
			cardIdArrayArray[idx] = [
				n_A_card[CARD_REGION_ID_SHIELD],
				n_A_card[CARD_REGION_ID_ENCHANT_SHIELD_1],
				n_A_card[CARD_REGION_ID_ENCHANT_SHIELD_2],
				n_A_card[CARD_REGION_ID_ENCHANT_SHIELD_3],
			];
			break;
		case EQUIP_REGION_ID_BODY:
			cardIdArrayArray[idx] = [
				n_A_card[CARD_REGION_ID_BODY],
				n_A_card[CARD_REGION_ID_ENCHANT_BODY_1],
				n_A_card[CARD_REGION_ID_ENCHANT_BODY_2],
				n_A_card[CARD_REGION_ID_ENCHANT_BODY_3],
			];
			break;
		case EQUIP_REGION_ID_SHOULDER:
			cardIdArrayArray[idx] = [
				n_A_card[CARD_REGION_ID_SHOULDER],
				n_A_card[CARD_REGION_ID_ENCHANT_SHOULDER_1],
				n_A_card[CARD_REGION_ID_ENCHANT_SHOULDER_2],
				n_A_card[CARD_REGION_ID_ENCHANT_SHOULDER_3],
			];
			break;
		case EQUIP_REGION_ID_SHOES:
			cardIdArrayArray[idx] = [
				n_A_card[CARD_REGION_ID_SHOES],
				n_A_card[CARD_REGION_ID_ENCHANT_SHOES_1],
				n_A_card[CARD_REGION_ID_ENCHANT_SHOES_2],
				n_A_card[CARD_REGION_ID_ENCHANT_SHOES_3],
			];
			break;
		case EQUIP_REGION_ID_ACCESSARY_1:
			cardIdArrayArray[idx] = [
				n_A_card[CARD_REGION_ID_ACCESSARY_1],
				n_A_card[CARD_REGION_ID_ENCHANT_ACCESSARY_1_1],
				n_A_card[CARD_REGION_ID_ENCHANT_ACCESSARY_1_2],
				n_A_card[CARD_REGION_ID_ENCHANT_ACCESSARY_1_3],
			];
			break;
		case EQUIP_REGION_ID_ACCESSARY_2:
			cardIdArrayArray[idx] = [
				n_A_card[CARD_REGION_ID_ACCESSARY_2],
				n_A_card[CARD_REGION_ID_ENCHANT_ACCESSARY_2_1],
				n_A_card[CARD_REGION_ID_ENCHANT_ACCESSARY_2_2],
				n_A_card[CARD_REGION_ID_ENCHANT_ACCESSARY_2_3],
			];
			break;
		default:
			// これ以外の部位はカード装着不可
			cardIdArrayArray[idx] = null;
		}

		// 装備制限状態へ移行する場合は、装備可否を判定する
		if (!bFull) {

			// 現在の装備が両手斧の場合は、設定を解除する
			if (ItemObjNew[itemId][ITEM_DATA_INDEX_KIND] == ITEM_KIND_AXE_2HAND) {
				itemId = ITEM_ID_SUDE;
				funcClearCard(idx);
			}

			// そうでない場合で、装備制限に適合しない場合は、設定を解除する
			else if (!IsMatchJobRestrict(itemId, n_A_JOB)) {
				switch (idx) {
				case EQUIP_REGION_ID_ARMS:
					itemId = ITEM_ID_SUDE;
					funcClearCard(idx);
					break;
				case EQUIP_REGION_ID_HEAD_TOP:
					itemId = ITEM_ID_NOEQUIP_HEAD_TOP;
					funcClearCard(idx);
					break;
				case EQUIP_REGION_ID_HEAD_MID:
					itemId = ITEM_ID_NOEQUIP_HEAD_MID;
					funcClearCard(idx);
					break;
				case EQUIP_REGION_ID_HEAD_UNDER:
					itemId = ITEM_ID_NOEQUIP_HEAD_UNDER;
					funcClearCard(idx);
					break;
				default:
					// これ以外の部位は変化しないので処理なし
				}
			}
		}

		// 装備の ItemID を保持
		itemIdArray[idx] = itemId;
		n_A_Equip[idx] = itemId;
	}



	// 武器種別をクリア
	objSelect = document.getElementById("OBJID_ARMS_TYPE_RIGHT");
	HtmlRemoveOptionAll(objSelect);

	// 武器種別セレクトボックスを再構築
	var jobData = g_constDataManager.GetDataObject(CONST_DATA_KIND_JOB, n_A_JOB);

	for (idx = 0; idx < ITEM_KIND_STUFF2HAND; idx++) {
		if (jobData.GetWeaponAspd(idx) !== undefined) {

			// 両手斧は装備制限解除状態の時のみ可
			if (idx == ITEM_KIND_AXE_2HAND) {
				if (!bFull) {
					continue;
				}
			}

			HtmlCreateElementOption(idx, GetItemKindNameText(idx), objSelect);
		}
	}

	// 武器種別セレクトボックス変化イベントを呼び出して、再構築させる
	OnChangeArmsTypeRight(ItemObjNew[itemIdArray[EQUIP_REGION_ID_ARMS]][ITEM_DATA_INDEX_KIND]);

	// 防具セレクトボックスを再構築
	RebuildArmorsSelect();



	// 装備状況を復元する
	for (idx = EQUIP_REGION_ID_ARMS; idx <= EQUIP_REGION_ID_ACCESSARY_2; idx++) {

		switch (idx) {

		case EQUIP_REGION_ID_ARMS:
			strObjId = "OBJID_ARMS_RIGHT";
			break;

		case EQUIP_REGION_ID_ARMS_LEFT:
			strObjId = "OBJID_ARMS_LEFT";
			break;

		case EQUIP_REGION_ID_HEAD_TOP:
			strObjId = "OBJID_HEAD_TOP";
			break;

		case EQUIP_REGION_ID_HEAD_MID:
			strObjId = "OBJID_HEAD_MID";
			break;

		case EQUIP_REGION_ID_HEAD_UNDER:
			strObjId = "OBJID_HEAD_UNDER";
			break;

		case EQUIP_REGION_ID_SHIELD:
			strObjId = "OBJID_SHIELD";
			break;

		case EQUIP_REGION_ID_BODY:
			strObjId = "OBJID_BODY";
			break;

		case EQUIP_REGION_ID_SHOULDER:
			strObjId = "OBJID_SHOULDER";
			break;

		case EQUIP_REGION_ID_SHOES:
			strObjId = "OBJID_SHOES";
			break;

		case EQUIP_REGION_ID_ACCESSARY_1:
			strObjId = "OBJID_ACCESSARY_1";
			break;

		case EQUIP_REGION_ID_ACCESSARY_2:
			strObjId = "OBJID_ACCESSARY_2";
			break;
		}

		HtmlSetObjectValueById(strObjId, itemIdArray[idx]);

		OnChangeEquip(idx, itemIdArray[idx]);

		for (idxSlot = 0; idxSlot < cardIdArrayArray[idx].length; idxSlot++) {
			HtmlSetObjectValueById(strObjId + "_CARD_" + (idxSlot + 1), cardIdArrayArray[idx][idxSlot]);
		}

		OnChangeCard(-1);
	}

}

/**
 * HTMLから装備アイテムの状態を読み取ってグローバル変数を更新する
 */
function UpdateEquipItemDataByHtml() {

	var charaDataManager = null;

	// ＨＴＭＬの入力値を元に、変数を更新する
	var calcForm = document.calcForm;

	n_A_WeaponType = eval(calcForm.A_WeaponType.value);
	n_A_WeaponZokusei = eval(calcForm.A_Weapon_zokusei.value);
	n_A_Arrow = parseInt(HtmlGetObjectValueById("OBJID_SELECT_ARROW", ARROW_ID_NONE));

	// 装備部位配列初期化
	for (var idx = 0; idx < EQUIP_REGION_ID_COUNT; idx++) {
		n_A_Equip[idx] = 0;
	}

	n_A_Equip[EQUIP_REGION_ID_ARMS] = HtmlGetObjectValueByIdAsInteger("OBJID_ARMS_RIGHT", 0);
	if (n_Nitou) {
		n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] = HtmlGetObjectValueByIdAsInteger("OBJID_ARMS_LEFT", 0);
	}

	n_A_Equip[EQUIP_REGION_ID_HEAD_TOP]		 = HtmlGetObjectValueByIdAsInteger("OBJID_HEAD_TOP", 0);
	n_A_Equip[EQUIP_REGION_ID_HEAD_MID]		 = HtmlGetObjectValueByIdAsInteger("OBJID_HEAD_MID", 0);
	n_A_Equip[EQUIP_REGION_ID_HEAD_UNDER]	 = HtmlGetObjectValueByIdAsInteger("OBJID_HEAD_UNDER", 0);
	n_A_Equip[EQUIP_REGION_ID_SHIELD]		 = HtmlGetObjectValueByIdAsInteger("OBJID_SHIELD", 0);
	n_A_Equip[EQUIP_REGION_ID_BODY]			 = HtmlGetObjectValueByIdAsInteger("OBJID_BODY", 0);
	n_A_Equip[EQUIP_REGION_ID_SHOULDER]		 = HtmlGetObjectValueByIdAsInteger("OBJID_SHOULDER", 0);
	n_A_Equip[EQUIP_REGION_ID_SHOES]		 = HtmlGetObjectValueByIdAsInteger("OBJID_SHOES", 0);
	n_A_Equip[EQUIP_REGION_ID_ACCESSARY_1]	 = HtmlGetObjectValueByIdAsInteger("OBJID_ACCESSARY_1", 0);
	n_A_Equip[EQUIP_REGION_ID_ACCESSARY_2]	 = HtmlGetObjectValueByIdAsInteger("OBJID_ACCESSARY_2", 0);
	n_A_Equip[EQUIP_REGION_ID_COSTUME_HEAD_UNDER] = HtmlGetObjectValueByIdAsInteger("A_isyou3", 0);

	// 各種精錬値
	n_A_HEAD_DEF_PLUS = eval(calcForm.A_HEAD_DEF_PLUS.value);
	n_A_BODY_DEF_PLUS = eval(calcForm.A_BODY_DEF_PLUS.value);
	n_A_SHIELD_DEF_PLUS = eval(calcForm.A_SHIELD_DEF_PLUS.value);
	n_A_SHOULDER_DEF_PLUS = eval(calcForm.A_SHOULDER_DEF_PLUS.value);
	n_A_SHOES_DEF_PLUS = eval(calcForm.A_SHOES_DEF_PLUS.value);


	// シャドウ装備データ
	g_itemIdArray = [];
	g_refinedArray = [];
	// ルート要素の取得
	if ((typeof g_shadowEquipController) !== "undefined") {
		g_itemIdArray[EQUIP_REGION_ID_SHADOW_ARMS_RIGHT] = g_shadowEquipController.getEquippedID(CShadowEquipController.EQPRGN_NAME_ARMS_RIGHT);
		g_itemIdArray[EQUIP_REGION_ID_SHADOW_ARMS_LEFT] = g_shadowEquipController.getEquippedID(CShadowEquipController.EQPRGN_NAME_ARMS_LEFT);
		g_itemIdArray[EQUIP_REGION_ID_SHADOW_BODY] = g_shadowEquipController.getEquippedID(CShadowEquipController.EQPRGN_NAME_BODY);
		g_itemIdArray[EQUIP_REGION_ID_SHADOW_FOOT] = g_shadowEquipController.getEquippedID(CShadowEquipController.EQPRGN_NAME_FOOT);
		g_itemIdArray[EQUIP_REGION_ID_SHADOW_ACCESSARY_1] = g_shadowEquipController.getEquippedID(CShadowEquipController.EQPRGN_NAME_ACCESSORY_1);
		g_itemIdArray[EQUIP_REGION_ID_SHADOW_ACCESSARY_2] = g_shadowEquipController.getEquippedID(CShadowEquipController.EQPRGN_NAME_ACCESSORY_2);

		g_refinedArray[EQUIP_REGION_ID_SHADOW_ARMS_RIGHT] = g_shadowEquipController.getRefined(CShadowEquipController.EQPRGN_NAME_ARMS_RIGHT);
		g_refinedArray[EQUIP_REGION_ID_SHADOW_ARMS_LEFT] = g_shadowEquipController.getRefined(CShadowEquipController.EQPRGN_NAME_ARMS_LEFT);
		g_refinedArray[EQUIP_REGION_ID_SHADOW_BODY] = g_shadowEquipController.getRefined(CShadowEquipController.EQPRGN_NAME_BODY);
		g_refinedArray[EQUIP_REGION_ID_SHADOW_FOOT] = g_shadowEquipController.getRefined(CShadowEquipController.EQPRGN_NAME_FOOT);
		g_refinedArray[EQUIP_REGION_ID_SHADOW_ACCESSARY_1] = g_shadowEquipController.getRefined(CShadowEquipController.EQPRGN_NAME_ACCESSORY_1);
		g_refinedArray[EQUIP_REGION_ID_SHADOW_ACCESSARY_2] = g_shadowEquipController.getRefined(CShadowEquipController.EQPRGN_NAME_ACCESSORY_2);

		const funcSetRndOptTable = (eqpRgnIdF, eqpRgnNameF) => {
			const rndOptInfoArrayF = g_shadowEquipController.getRndOptInfoArray(eqpRgnNameF);
			for (let idxF = 0; idxF < rndOptInfoArrayF.length; idxF++) {
				SetEquipRndOptTable(eqpRgnIdF, idxF, rndOptInfoArrayF[idxF][0], rndOptInfoArrayF[idxF][1]);
			}
		};
		funcSetRndOptTable(EQUIP_REGION_ID_SHADOW_ARMS_RIGHT, CShadowEquipController.EQPRGN_NAME_ARMS_RIGHT);
		funcSetRndOptTable(EQUIP_REGION_ID_SHADOW_ARMS_LEFT, CShadowEquipController.EQPRGN_NAME_ARMS_LEFT);
		funcSetRndOptTable(EQUIP_REGION_ID_SHADOW_BODY, CShadowEquipController.EQPRGN_NAME_BODY);
		funcSetRndOptTable(EQUIP_REGION_ID_SHADOW_FOOT, CShadowEquipController.EQPRGN_NAME_FOOT);
		funcSetRndOptTable(EQUIP_REGION_ID_SHADOW_ACCESSARY_1, CShadowEquipController.EQPRGN_NAME_ACCESSORY_1);
		funcSetRndOptTable(EQUIP_REGION_ID_SHADOW_ACCESSARY_2, CShadowEquipController.EQPRGN_NAME_ACCESSORY_2);
	}

	// TODO: データ移行過渡処理
	// 移行後の通常処理（追加で行う）
	if (IsEnableMigrationBlockNewProcess()) {

		charaData = g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN);

		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ARMS_RIGHT, CONST_DATA_KIND_ITEM, 0, HtmlGetObjectValueByIdAsInteger("OBJID_ARMS_RIGHT", 0), 0);
		charaData.SetRefined(MIG_EQUIP_REGION_ID_ARMS_RIGHT, HtmlGetObjectValueByIdAsInteger("OBJID_ARMS_RIGHT_REFINE", 0));

		if (n_Nitou) {
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ARMS_LEFT, CONST_DATA_KIND_ITEM, 0, HtmlGetObjectValueByIdAsInteger("OBJID_ARMS_LEFT", 0), 0);
			charaData.SetRefined(MIG_EQUIP_REGION_ID_ARMS_LEFT, HtmlGetObjectValueByIdAsInteger("OBJID_ARMS_LEFT_REFINE", 0));

			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_SHIELD, CONST_DATA_KIND_ITEM, 0, 0, 0);
			charaData.SetRefined(MIG_EQUIP_REGION_ID_SHIELD, 0);
		}
		else {
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ARMS_LEFT, CONST_DATA_KIND_ITEM, 0, 0, 0);
			charaData.SetRefined(MIG_EQUIP_REGION_ID_ARMS_LEFT, 0);

			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_SHIELD, CONST_DATA_KIND_ITEM, 0, HtmlGetObjectValueByIdAsInteger("OBJID_SHIELD", 0), 0);
			charaData.SetRefined(MIG_EQUIP_REGION_ID_SHIELD, HtmlGetObjectValueByIdAsInteger("OBJID_SHIELD_REFINE", 0));
		}

		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_HEAD_TOP, CONST_DATA_KIND_ITEM, 0, HtmlGetObjectValueByIdAsInteger("OBJID_HEAD_TOP", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_HEAD_MID, CONST_DATA_KIND_ITEM, 0, HtmlGetObjectValueByIdAsInteger("OBJID_HEAD_MID", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_HEAD_UNDER, CONST_DATA_KIND_ITEM, 0, HtmlGetObjectValueByIdAsInteger("OBJID_HEAD_UNDER", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_BODY, CONST_DATA_KIND_ITEM, 0, HtmlGetObjectValueByIdAsInteger("OBJID_BODY", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_SHOULDER, CONST_DATA_KIND_ITEM, 0, HtmlGetObjectValueByIdAsInteger("OBJID_SHOULDER", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_FOOT, CONST_DATA_KIND_ITEM, 0, HtmlGetObjectValueByIdAsInteger("OBJID_SHOES", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ACCESSORY_1, CONST_DATA_KIND_ITEM, 0, HtmlGetObjectValueByIdAsInteger("OBJID_ACCESSARY_1", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ACCESSORY_2, CONST_DATA_KIND_ITEM, 0, HtmlGetObjectValueByIdAsInteger("OBJID_ACCESSARY_2", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_COSTUME_HEAD_TOP, CONST_DATA_KIND_ITEM, 0, 0, 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_COSTUME_HEAD_MID, CONST_DATA_KIND_ITEM, 0, 0, 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_COSTUME_HEAD_UNDER, CONST_DATA_KIND_ITEM, 0, HtmlGetObjectValueByIdAsInteger("A_isyou3", 0), 0);

		charaData.SetRefined(MIG_EQUIP_REGION_ID_HEAD_TOP, HtmlGetObjectValueByIdAsInteger("OBJID_HEAD_TOP_REFINE", 0));
		charaData.SetRefined(MIG_EQUIP_REGION_ID_BODY, HtmlGetObjectValueByIdAsInteger("OBJID_BODY_REFINE", 0));
		charaData.SetRefined(MIG_EQUIP_REGION_ID_SHOULDER, HtmlGetObjectValueByIdAsInteger("OBJID_SHOULDER_REFINE", 0));
		charaData.SetRefined(MIG_EQUIP_REGION_ID_FOOT, HtmlGetObjectValueByIdAsInteger("OBJID_SHOES_REFINE", 0));
	}

}

function UpdateEquipCardDataByHtml() {

	var idxSlot = 0;

	var itemId = 0;
	var wpnLv = 0;


	// 装着カード配列の初期化
	for (var cardIdx = 0; cardIdx < CARD_REGION_ID_COUNT; cardIdx++) {
		n_A_card[cardIdx] = 0;
	}

	// 右手武器
	n_A_card[CARD_REGION_ID_ARMS_RIGHT_1] = GetStatefullData("DATA_OBJID_ARMS_RIGHT_CARD_1", 0);
	n_A_card[CARD_REGION_ID_ARMS_RIGHT_2] = GetStatefullData("DATA_OBJID_ARMS_RIGHT_CARD_2", 0);
	n_A_card[CARD_REGION_ID_ARMS_RIGHT_3] = GetStatefullData("DATA_OBJID_ARMS_RIGHT_CARD_3", 0);
	n_A_card[CARD_REGION_ID_ARMS_RIGHT_4] = GetStatefullData("DATA_OBJID_ARMS_RIGHT_CARD_4", 0);

	// 左手武器
	if (n_Nitou) {
		n_A_card[CARD_REGION_ID_ARMS_LEFT_1] = GetStatefullData("DATA_OBJID_ARMS_LEFT_CARD_1", 0);
		n_A_card[CARD_REGION_ID_ARMS_LEFT_2] = GetStatefullData("DATA_OBJID_ARMS_LEFT_CARD_2", 0);
		n_A_card[CARD_REGION_ID_ARMS_LEFT_3] = GetStatefullData("DATA_OBJID_ARMS_LEFT_CARD_3", 0);
		n_A_card[CARD_REGION_ID_ARMS_LEFT_4] = GetStatefullData("DATA_OBJID_ARMS_LEFT_CARD_4", 0);
	}

	// 各装着部位
	n_A_card[CARD_REGION_ID_HEAD_TOP]	 = GetStatefullData("DATA_OBJID_HEAD_TOP_CARD_1", 0);
	n_A_card[CARD_REGION_ID_HEAD_MID]	 = GetStatefullData("DATA_OBJID_HEAD_MID_CARD_1", 0);
	n_A_card[CARD_REGION_ID_HEAD_UNDER]	 = GetStatefullData("DATA_OBJID_HEAD_UNDER_CARD_1", 0);
	n_A_card[CARD_REGION_ID_SHIELD]		 = GetStatefullData("DATA_OBJID_SHIELD_CARD_1", 0);
	n_A_card[CARD_REGION_ID_BODY]		 = GetStatefullData("DATA_OBJID_BODY_CARD_1", 0);
	n_A_card[CARD_REGION_ID_SHOULDER]	 = GetStatefullData("DATA_OBJID_SHOULDER_CARD_1", 0);
	n_A_card[CARD_REGION_ID_SHOES]		 = GetStatefullData("DATA_OBJID_SHOES_CARD_1", 0);
	n_A_card[CARD_REGION_ID_ACCESSARY_1] = GetStatefullData("DATA_OBJID_ACCESSARY_1_CARD_1", 0);
	n_A_card[CARD_REGION_ID_ACCESSARY_2] = GetStatefullData("DATA_OBJID_ACCESSARY_2_CARD_1", 0);

	// 頭上段エンチャント
	n_A_card[CARD_REGION_ID_ENCHANT_HEAD_TOP_1] = GetStatefullData("DATA_OBJID_HEAD_TOP_CARD_2", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_HEAD_TOP_2] = GetStatefullData("DATA_OBJID_HEAD_TOP_CARD_3", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_HEAD_TOP_3] = GetStatefullData("DATA_OBJID_HEAD_TOP_CARD_4", 0);

	// 頭中段エンチャント
	n_A_card[CARD_REGION_ID_ENCHANT_HEAD_MID_1] = GetStatefullData("DATA_OBJID_HEAD_MID_CARD_2", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_HEAD_MID_2] = GetStatefullData("DATA_OBJID_HEAD_MID_CARD_3", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_HEAD_MID_3] = GetStatefullData("DATA_OBJID_HEAD_MID_CARD_4", 0);

	// 頭下段エンチャント
	n_A_card[CARD_REGION_ID_ENCHANT_HEAD_UNDER_1] = GetStatefullData("DATA_OBJID_HEAD_UNDER_CARD_2", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_HEAD_UNDER_2] = GetStatefullData("DATA_OBJID_HEAD_UNDER_CARD_3", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_HEAD_UNDER_3] = GetStatefullData("DATA_OBJID_HEAD_UNDER_CARD_4", 0);

	// 盾エンチャント
	n_A_card[CARD_REGION_ID_ENCHANT_SHIELD_1] = GetStatefullData("DATA_OBJID_SHIELD_CARD_2", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_SHIELD_2] = GetStatefullData("DATA_OBJID_SHIELD_CARD_3", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_SHIELD_3] = GetStatefullData("DATA_OBJID_SHIELD_CARD_4", 0);

	// 鎧エンチャント
	n_A_card[CARD_REGION_ID_ENCHANT_BODY_1] = GetStatefullData("DATA_OBJID_BODY_CARD_2", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_BODY_2] = GetStatefullData("DATA_OBJID_BODY_CARD_3", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_BODY_3] = GetStatefullData("DATA_OBJID_BODY_CARD_4", 0);

	// 肩エンチャント
	n_A_card[CARD_REGION_ID_ENCHANT_SHOULDER_1] = GetStatefullData("DATA_OBJID_SHOULDER_CARD_2", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_SHOULDER_2] = GetStatefullData("DATA_OBJID_SHOULDER_CARD_3", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_SHOULDER_3] = GetStatefullData("DATA_OBJID_SHOULDER_CARD_4", 0);

	// 靴エンチャント
	n_A_card[CARD_REGION_ID_ENCHANT_SHOES_1] = GetStatefullData("DATA_OBJID_SHOES_CARD_2", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_SHOES_2] = GetStatefullData("DATA_OBJID_SHOES_CARD_3", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_SHOES_3] = GetStatefullData("DATA_OBJID_SHOES_CARD_4", 0);

	// アクセ１エンチャント
	n_A_card[CARD_REGION_ID_ENCHANT_ACCESSARY_1_1] = GetStatefullData("DATA_OBJID_ACCESSARY_1_CARD_2", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_ACCESSARY_1_2] = GetStatefullData("DATA_OBJID_ACCESSARY_1_CARD_3", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_ACCESSARY_1_3] = GetStatefullData("DATA_OBJID_ACCESSARY_1_CARD_4", 0);

	// アクセ２エンチャント
	n_A_card[CARD_REGION_ID_ENCHANT_ACCESSARY_2_1] = GetStatefullData("DATA_OBJID_ACCESSARY_2_CARD_2", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_ACCESSARY_2_2] = GetStatefullData("DATA_OBJID_ACCESSARY_2_CARD_3", 0);
	n_A_card[CARD_REGION_ID_ENCHANT_ACCESSARY_2_3] = GetStatefullData("DATA_OBJID_ACCESSARY_2_CARD_4", 0);


	// TODO: データ移行過渡処理
	// 移行後の通常処理（追加で行う）
	if (IsEnableMigrationBlockNewProcess()) {

		charaData = g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN);

		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ARMS_RIGHT, CONST_DATA_KIND_CARD, 0, GetStatefullData("DATA_OBJID_ARMS_RIGHT_CARD_1", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ARMS_RIGHT, CONST_DATA_KIND_CARD, 1, GetStatefullData("DATA_OBJID_ARMS_RIGHT_CARD_2", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ARMS_RIGHT, CONST_DATA_KIND_CARD, 2, GetStatefullData("DATA_OBJID_ARMS_RIGHT_CARD_3", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ARMS_RIGHT, CONST_DATA_KIND_CARD, 3, GetStatefullData("DATA_OBJID_ARMS_RIGHT_CARD_4", 0), 0);

		if (n_Nitou) {
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ARMS_LEFT, CONST_DATA_KIND_CARD, 0, GetStatefullData("DATA_OBJID_ARMS_LEFT_CARD_1", 0), 0);
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ARMS_LEFT, CONST_DATA_KIND_CARD, 1, GetStatefullData("DATA_OBJID_ARMS_LEFT_CARD_2", 0), 0);
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ARMS_LEFT, CONST_DATA_KIND_CARD, 2, GetStatefullData("DATA_OBJID_ARMS_LEFT_CARD_3", 0), 0);
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ARMS_LEFT, CONST_DATA_KIND_CARD, 3, GetStatefullData("DATA_OBJID_ARMS_LEFT_CARD_4", 0), 0);

			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_SHIELD, CONST_DATA_KIND_CARD, 0, 0, 0);
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_SHIELD, CONST_DATA_KIND_CARD, 1, 0, 0);
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_SHIELD, CONST_DATA_KIND_CARD, 2, 0, 0);
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_SHIELD, CONST_DATA_KIND_CARD, 3, 0, 0);
		}
		else {
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ARMS_LEFT, CONST_DATA_KIND_CARD, 0, 0, 0);
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ARMS_LEFT, CONST_DATA_KIND_CARD, 1, 0, 0);
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ARMS_LEFT, CONST_DATA_KIND_CARD, 2, 0, 0);
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ARMS_LEFT, CONST_DATA_KIND_CARD, 3, 0, 0);

			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_SHIELD, CONST_DATA_KIND_CARD, 0, GetStatefullData("DATA_OBJID_SHIELD_CARD_1", 0), 0);
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_SHIELD, CONST_DATA_KIND_CARD, 1, GetStatefullData("DATA_OBJID_SHIELD_CARD_1", 0), 0);
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_SHIELD, CONST_DATA_KIND_CARD, 2, GetStatefullData("DATA_OBJID_SHIELD_CARD_1", 0), 0);
			charaData.ChangeEquip(MIG_EQUIP_REGION_ID_SHIELD, CONST_DATA_KIND_CARD, 3, GetStatefullData("DATA_OBJID_SHIELD_CARD_1", 0), 0);
		}

		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_HEAD_TOP, CONST_DATA_KIND_CARD, 0, GetStatefullData("DATA_OBJID_HEAD_TOP_CARD_1", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_HEAD_TOP, CONST_DATA_KIND_CARD, 1, GetStatefullData("DATA_OBJID_HEAD_TOP_CARD_2", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_HEAD_TOP, CONST_DATA_KIND_CARD, 2, GetStatefullData("DATA_OBJID_HEAD_TOP_CARD_3", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_HEAD_TOP, CONST_DATA_KIND_CARD, 3, GetStatefullData("DATA_OBJID_HEAD_TOP_CARD_4", 0), 0);

		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_HEAD_MID, CONST_DATA_KIND_CARD, 0, GetStatefullData("DATA_OBJID_HEAD_MID_CARD_1", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_HEAD_MID, CONST_DATA_KIND_CARD, 1, GetStatefullData("DATA_OBJID_HEAD_MID_CARD_2", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_HEAD_MID, CONST_DATA_KIND_CARD, 2, GetStatefullData("DATA_OBJID_HEAD_MID_CARD_3", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_HEAD_MID, CONST_DATA_KIND_CARD, 3, GetStatefullData("DATA_OBJID_HEAD_MID_CARD_4", 0), 0);

		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_HEAD_UNDER, CONST_DATA_KIND_CARD, 0, GetStatefullData("DATA_OBJID_HEAD_UNDER_CARD_1", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_HEAD_UNDER, CONST_DATA_KIND_CARD, 1, GetStatefullData("DATA_OBJID_HEAD_UNDER_CARD_2", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_HEAD_UNDER, CONST_DATA_KIND_CARD, 2, GetStatefullData("DATA_OBJID_HEAD_UNDER_CARD_3", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_HEAD_UNDER, CONST_DATA_KIND_CARD, 3, GetStatefullData("DATA_OBJID_HEAD_UNDER_CARD_4", 0), 0);

		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_BODY, CONST_DATA_KIND_CARD, 0, GetStatefullData("DATA_OBJID_BODY_CARD_1", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_BODY, CONST_DATA_KIND_CARD, 1, GetStatefullData("DATA_OBJID_BODY_CARD_2", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_BODY, CONST_DATA_KIND_CARD, 2, GetStatefullData("DATA_OBJID_BODY_CARD_3", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_BODY, CONST_DATA_KIND_CARD, 3, GetStatefullData("DATA_OBJID_BODY_CARD_4", 0), 0);

		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_SHOULDER, CONST_DATA_KIND_CARD, 0, GetStatefullData("DATA_OBJID_SHOULDER_CARD_1", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_SHOULDER, CONST_DATA_KIND_CARD, 1, GetStatefullData("DATA_OBJID_SHOULDER_CARD_2", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_SHOULDER, CONST_DATA_KIND_CARD, 2, GetStatefullData("DATA_OBJID_SHOULDER_CARD_3", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_SHOULDER, CONST_DATA_KIND_CARD, 3, GetStatefullData("DATA_OBJID_SHOULDER_CARD_4", 0), 0);

		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_FOOT, CONST_DATA_KIND_CARD, 0, GetStatefullData("DATA_OBJID_SHOES_CARD_1", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_FOOT, CONST_DATA_KIND_CARD, 1, GetStatefullData("DATA_OBJID_SHOES_CARD_2", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_FOOT, CONST_DATA_KIND_CARD, 2, GetStatefullData("DATA_OBJID_SHOES_CARD_3", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_FOOT, CONST_DATA_KIND_CARD, 3, GetStatefullData("DATA_OBJID_SHOES_CARD_4", 0), 0);

		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ACCESSORY_1, CONST_DATA_KIND_CARD, 0, GetStatefullData("DATA_OBJID_ACCESSARY_1_CARD_1", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ACCESSORY_1, CONST_DATA_KIND_CARD, 1, GetStatefullData("DATA_OBJID_ACCESSARY_1_CARD_2", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ACCESSORY_1, CONST_DATA_KIND_CARD, 2, GetStatefullData("DATA_OBJID_ACCESSARY_1_CARD_3", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ACCESSORY_1, CONST_DATA_KIND_CARD, 3, GetStatefullData("DATA_OBJID_ACCESSARY_1_CARD_4", 0), 0);

		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ACCESSORY_2, CONST_DATA_KIND_CARD, 0, GetStatefullData("DATA_OBJID_ACCESSARY_2_CARD_1", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ACCESSORY_2, CONST_DATA_KIND_CARD, 1, GetStatefullData("DATA_OBJID_ACCESSARY_2_CARD_2", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ACCESSORY_2, CONST_DATA_KIND_CARD, 2, GetStatefullData("DATA_OBJID_ACCESSARY_2_CARD_3", 0), 0);
		charaData.ChangeEquip(MIG_EQUIP_REGION_ID_ACCESSORY_2, CONST_DATA_KIND_CARD, 3, GetStatefullData("DATA_OBJID_ACCESSARY_2_CARD_4", 0), 0);
	}
}

function UpdateEquipCostumeDataByHtml() {

	var itemId = 0;
	var wpnLv = 0;


	// 装着カード配列の初期化
	for (var costumeIdx = 0; costumeIdx < COSTUME_REGION_ID_COUNT; costumeIdx++) {
		n_A_costume[costumeIdx] = 0;
	}

	// 各装着部位
	n_A_costume[COSTUME_REGION_ID_HEAD_UNDER]	 = GetStatefullData("DATA_OBJID_HEAD_UNDER_COSTUME", 0);
}

function StAllCalc(){

	var vartmp = 0;
	var valary = new Array();
	var confval = 0;
	var sklLv = 0;
	var bufLv = 0;

	var objSelect = null;

	var monsterId = 0;

	var charaData = new Array();
	var specData = new Array();
	var mobData = new Array();
	var attackMethodConf = null;
	var attackMethodConfArray = null;

	var itemCount = 0;
	var itemCountRight = 0;
	var itemCountLeft = 0;
	var itemCountAccessary1 = 0;
	var itemCountAccessary2 = 0;

	var cardCount = 0;
	var cardCountRight = 0;
	var cardCountLeft = 0;
	var cardCountHeadTop = 0;
	var cardCountHeadMid = 0;
	var cardCountShield = 0;
	var cardCountBody = 0;
	var cardCountShoulder = 0;
	var cardCountShoes = 0;
	var cardCountAccessary1 = 0;
	var cardCountAccessary2 = 0;

	if (_TEST_SETTINGS_APPLYING) {
		return [null, null, null, null];
	}

	with(document.calcForm){

		InitJobInfo();

		//----------------------------------------------------------------
		// 基本パラメタを取得する
		//----------------------------------------------------------------

		n_A_BaseLV = eval(A_BaseLV.value);
		n_A_JobLV = eval(A_JobLV.value);

		n_A_STR = eval(A_STR.value);
		n_A_AGI = eval(A_AGI.value);
		n_A_VIT = eval(A_VIT.value);
		n_A_DEX = eval(A_DEX.value);
		n_A_INT = eval(A_INT.value);
		n_A_LUK = eval(A_LUK.value);

		SU_STR = n_A_STR;
		SU_AGI = n_A_AGI;
		SU_VIT = n_A_VIT;
		SU_DEX = n_A_DEX;
		SU_INT = n_A_INT;
		SU_LUK = n_A_LUK;

		// TODO: データ移行過渡処理
		// 移行後の通常処理（追加で行う）
		if (IsEnableMigrationBlockNewProcess()) {
			g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).SetParam(MIG_PARAM_ID_BASE_LV, n_A_BaseLV);
			g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).SetParam(MIG_PARAM_ID_JOB_LV, n_A_JobLV);
			g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).SetParam(MIG_PARAM_ID_STR, n_A_STR);
			g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).SetParam(MIG_PARAM_ID_AGI, n_A_AGI);
			g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).SetParam(MIG_PARAM_ID_VIT, n_A_VIT);
			g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).SetParam(MIG_PARAM_ID_INT, n_A_INT);
			g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).SetParam(MIG_PARAM_ID_DEX, n_A_DEX);
			g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).SetParam(MIG_PARAM_ID_LUK, n_A_LUK);
		}

		n_A_SpeedPOT = eval(A_SpeedPOT.value);



		//----------------------------------------------------------------
		// 特性パラメタを取得する
		//----------------------------------------------------------------

		// 純粋な値
		SU_POW = eval(A_POW.value);
		SU_STA = eval(A_STA.value);
		SU_WIS = eval(A_WIS.value);
		SU_SPL = eval(A_SPL.value);
		SU_CON = eval(A_CON.value);
		SU_CRT = eval(A_CRT.value);
		
		// 合計値
		n_A_POW = GetTotalSpecStatus(MIG_PARAM_ID_POW);
		n_A_STA = GetTotalSpecStatus(MIG_PARAM_ID_STA);
		n_A_WIS = GetTotalSpecStatus(MIG_PARAM_ID_WIS);
		n_A_SPL = GetTotalSpecStatus(MIG_PARAM_ID_SPL);
		n_A_CON = GetTotalSpecStatus(MIG_PARAM_ID_CON);
		n_A_CRT = GetTotalSpecStatus(MIG_PARAM_ID_CRT);

		//----------------------------------------------------------------
		// 装備を取得する
		//----------------------------------------------------------------

		UpdateEquipItemDataByHtml();

		// 超越段階
		n_A_Weapon_Transcendence = eval(A_Weapon_Transcendence.value);
		n_A_Weapon2_Transcendence = eval(A_Weapon2_Transcendence.value);
		n_A_HEAD_DEF_Transcendence = eval(A_HEAD_DEF_Transcendence.value);
		n_A_SHIELD_DEF_Transcendence = eval(A_SHIELD_DEF_Transcendence.value);
		n_A_BODY_DEF_Transcendence = eval(A_BODY_DEF_Transcendence.value);
		n_A_SHOULDER_DEF_Transcendence = eval(A_SHOULDER_DEF_Transcendence.value);
		n_A_SHOES_DEF_Transcendence = eval(A_SHOES_DEF_Transcendence.value);

		//----------------------------------------------------------------
		// 攻撃手段を取得する
		//----------------------------------------------------------------
		attackMethodConf = CAttackMethodAreaComponentManager.GetAttackMethodConf();

		n_A_ActiveSkill = attackMethodConf.GetSkillId();
		n_A_ActiveSkillLV = attackMethodConf.GetSkillLv();

		attackMethodConfArray = [attackMethodConf];


		n_A_WeaponLV = Math.floor(ItemObjNew[n_A_Equip[EQUIP_REGION_ID_ARMS]][ITEM_DATA_INDEX_WPNLV] % 10);

		// TODO: データ移行過渡処理
		// 計算したSP効果を、移行前のデータ形式に変換して、置き換える
		if (IsEnableMigrationBlockTransit()) {
			if (g_constDataManager.itemDataManager.GetRegisteredIdArray().indexOf(n_A_Equip[EQUIP_REGION_ID_ARMS])) {
				n_A_Weapon_ATK = g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetEquipAtkRight();
			}
		}

		// 従来の処理
		else {
			n_A_Weapon_ATK = ItemObjNew[n_A_Equip[EQUIP_REGION_ID_ARMS]][ITEM_DATA_INDEX_POWER];
		}


		n_A_Weapon_ATKplus = eval(A_Weapon_ATKplus.value);
		n_A_WeaponLV_seirenATK = 0;
		n_A_WeaponLV_Minplus = 0;
		n_A_WeaponLV_Maxplus = 0;
		if(n_A_WeaponLV == 1){
			n_A_WeaponLV_seirenATK = n_A_Weapon_ATKplus * 2;
			if(n_A_Weapon_ATKplus >= 8){
				n_A_WeaponLV_Minplus = 1;
				n_A_WeaponLV_Maxplus = 3 * (n_A_Weapon_ATKplus - 7);
			}
		}else if(n_A_WeaponLV == 2){
			n_A_WeaponLV_seirenATK = n_A_Weapon_ATKplus * 3;
			if(n_A_Weapon_ATKplus >= 7){
				n_A_WeaponLV_Minplus = 1;
				n_A_WeaponLV_Maxplus = 5 * (n_A_Weapon_ATKplus - 6);
			}
		}else if(n_A_WeaponLV == 3){
			n_A_WeaponLV_seirenATK = n_A_Weapon_ATKplus * 5;
			if(n_A_Weapon_ATKplus >= 6){
				n_A_WeaponLV_Minplus = 1;
				n_A_WeaponLV_Maxplus = 8 * (n_A_Weapon_ATKplus - 5);
			}
		}else if(n_A_WeaponLV == 4){
			n_A_WeaponLV_seirenATK = n_A_Weapon_ATKplus * 7;
			if(n_A_Weapon_ATKplus >= 5){
				n_A_WeaponLV_Minplus = 1;
				n_A_WeaponLV_Maxplus = 14 * (n_A_Weapon_ATKplus - 4);
			}
		}

		n_A_Weapon2_ATKplus = 0;
		if (n_Nitou) {
			n_A_Weapon2LV = Math.floor(ItemObjNew[n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT]][ITEM_DATA_INDEX_WPNLV] % 10);

			// TODO: データ移行過渡処理
			// 計算したSP効果を、移行前のデータ形式に変換して、置き換える
			if (IsEnableMigrationBlockTransit()) {
				if (g_constDataManager.itemDataManager.GetRegisteredIdArray().indexOf(n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT])) {
					n_A_Weapon2_ATK = g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetEquipAtkLeft();
				}
			}

			// 従来の処理
			else {
				n_A_Weapon2_ATK = ItemObjNew[n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT]][ITEM_DATA_INDEX_POWER];
			}

			n_A_Weapon2_ATKplus = eval(document.calcForm.A_Weapon2_ATKplus.value);
			n_A_Weapon2LV_seirenATK = 0;
			n_A_Weapon2LV_Minplus = 0;
			n_A_Weapon2LV_Maxplus = 0;
			if(n_A_Weapon2LV == 1){
				n_A_Weapon2LV_seirenATK = n_A_Weapon2_ATKplus * 2;
				if(n_A_Weapon2_ATKplus >= 8){
					n_A_Weapon2LV_Minplus = 1;
					n_A_Weapon2LV_Maxplus = 3 * (n_A_Weapon2_ATKplus - 7);
				}
			}else if(n_A_Weapon2LV == 2){
				n_A_Weapon2LV_seirenATK = n_A_Weapon2_ATKplus * 3;
				if(n_A_Weapon2_ATKplus >= 7){
					n_A_Weapon2LV_Minplus = 1;
					n_A_Weapon2LV_Maxplus = 5 * (n_A_Weapon2_ATKplus - 6);
				}
			}else if(n_A_Weapon2LV == 3){
				n_A_Weapon2LV_seirenATK = n_A_Weapon2_ATKplus * 5;
				if(n_A_Weapon2_ATKplus >= 6){
					n_A_Weapon2LV_Minplus = 1;
					n_A_Weapon2LV_Maxplus = 8 * (n_A_Weapon2_ATKplus - 5);
				}
			}else if(n_A_Weapon2LV == 4){
				n_A_Weapon2LV_seirenATK = n_A_Weapon2_ATKplus * 7;
				if(n_A_Weapon2_ATKplus >= 5){
					n_A_Weapon2LV_Minplus = 1;
					n_A_Weapon2LV_Maxplus = 14 * (n_A_Weapon2_ATKplus - 4);
				}
			}
		}


		//----------------------------------------------------------------
		// 装着カードを取得する
		//----------------------------------------------------------------

		UpdateEquipCardDataByHtml();



		//----------------------------------------------------------------
		// 装着衣装を取得する
		//----------------------------------------------------------------

		UpdateEquipCostumeDataByHtml();



		var passiveSkillIdArray = g_constDataManager.GetDataObject(CONST_DATA_KIND_JOB, n_A_JOB).GetPassiveSkillIdArray();

		if(n_Skill1SW){
			for(let i = 0; i < passiveSkillIdArray.length; i++){
				let wOBJ = document.getElementById("A_skill"+i);
				if (wOBJ !== null) {
					n_A_PassSkill[i] = eval(wOBJ.value);
				}
			}
		}

		if(n_Skill3SW){
			n_A_PassSkill3[0] = eval(A3_Skill0_1.value);
			n_A_PassSkill3[1] = eval(A3_Skill1_1.value);
			n_A_PassSkill3[2] = eval(A3_Skill2_1.value);
			n_A_PassSkill3[3] = eval(A3_Skill3_1.value);
			n_A_PassSkill3[4] = eval(A3_Skill4_1.value);
			n_A_PassSkill3[5] = eval(A3_Skill5_1.value);
			n_A_PassSkill3[6] = eval(A3_Skill6_1.value);
			n_A_PassSkill3[7] = eval(A3_Skill7.value);
			n_A_PassSkill3[8] = eval(A3_Skill8.value);
			n_A_PassSkill3[9] = eval(A3_Skill9.value);
			n_A_PassSkill3[10] = eval(A3_Skill10.value);
			n_A_PassSkill3[11] = 0;	// 廃止：旧メランコリー
			n_A_PassSkill3[42] = 0; // 廃止：旧メランコリー
			n_A_PassSkill3[12] = eval(A3_Skill11_STR.value);
			n_A_PassSkill3[13] = eval(A3_Skill11_AGI.value);
			n_A_PassSkill3[14] = eval(A3_Skill11_VIT.value);
			n_A_PassSkill3[15] = eval(A3_Skill11_INT.value);
			n_A_PassSkill3[16] = eval(A3_Skill11_DEX.value);
			n_A_PassSkill3[17] = eval(A3_Skill11_LUK.value);
			n_A_PassSkill3[18] = eval(A3_Skill11a.checked);
			n_A_PassSkill3[19] = eval(A3_Skill12_0.value);
			if(n_A_PassSkill3[0]){
				n_A_PassSkill3[20] = eval(A3_Skill0_2.value);
				n_A_PassSkill3[28] = eval(A3_Skill0_4.value);
				n_A_PassSkill3[30] = eval(A3_Skill0_3.value);
			}
			if(n_A_PassSkill3[1]){
				n_A_PassSkill3[21] = eval(A3_Skill1_2.value);
				n_A_PassSkill3[31] = eval(A3_Skill1_3.value);
			}
			if(n_A_PassSkill3[2]){
				n_A_PassSkill3[22] = eval(A3_Skill2_2.value);
				n_A_PassSkill3[29] = eval(A3_Skill2_3.value);
				n_A_PassSkill3[32] = eval(A3_Skill2_4.value);
			}
			if(n_A_PassSkill3[3]){
				n_A_PassSkill3[23] = eval(A3_Skill3_2.value);
				n_A_PassSkill3[33] = eval(A3_Skill3_3.value);
			}
			if(n_A_PassSkill3[4]){
				n_A_PassSkill3[24] = eval(A3_Skill4_2.value);
				n_A_PassSkill3[34] = eval(A3_Skill4_3.value);
			}
			if(n_A_PassSkill3[5]){
				n_A_PassSkill3[25] = eval(A3_Skill5_2.value);
				n_A_PassSkill3[35] = eval(A3_Skill5_3.value);
			}
			if(n_A_PassSkill3[6]){
				n_A_PassSkill3[26] = eval(A3_Skill6_2.value);
				n_A_PassSkill3[36] = eval(A3_Skill6_3.value);
			}
			if(n_A_PassSkill3[19]){
				n_A_PassSkill3[37] = eval(A3_Skill12_1.value);
				n_A_PassSkill3[46] = eval(A3_Skill12_2.value);
				n_A_PassSkill3[38] = eval(A3_Skill12_3.value);
			}
			if(n_A_PassSkill3[39]){
				n_A_PassSkill3[40] = eval(A3_Skill13_1.value);
				n_A_PassSkill3[41] = eval(A3_Skill13_2.value);
			}
		}
		if(n_Skill4SW){
			n_A_PassSkill4[0] = eval(A4_Skill0.checked);
			n_A_PassSkill4[1] = eval(A4_Skill1.value);
			n_A_PassSkill4[2] = eval(A4_Skill2.value);
			n_A_PassSkill4[3] = eval(A4_Skill3.value);
			n_A_PassSkill4[4] = eval(A4_Skill4.value);
			n_A_PassSkill4[5] = eval(A4_Skill5.checked);
			n_A_PassSkill4[6] = eval(A4_Skill6.checked);
			n_A_PassSkill4[7] = eval(A4_Skill7.checked);
			n_A_PassSkill4[8] = eval(A4_Skill8.checked);
			n_A_PassSkill4[9] = eval(A4_Skill9.checked);
			n_A_PassSkill4[10] = eval(A4_Skill10.checked);
			n_A_PassSkill4[11] = eval(A4_Skill11.value);
			n_A_PassSkill4[30] = eval(A4_Skill30.value);
			n_A_PassSkill4[31] = eval(A4_Skill31.value);
			n_A_PassSkill4[32] = eval(A4_Skill32.value);
			n_A_PassSkill4[33] = eval(A4_Skill33.value);
			n_A_PassSkill4[34] = eval(A4_Skill34.value);
			n_A_PassSkill4[35] = eval(A4_Skill35.value);
		}

		// オートスペル設定の取得
		var objSelect = null;
		for (var idx = 0; idx < AUTO_SPELL_SETTING_COUNT; idx++) {
			objSelect = document.getElementById("OBJID_AS_SKILL_ID_" + (OBJID_OFFSET_AS_SKILL_ID + idx));
			if (objSelect) {
				n_A_PassSkill5[OBJID_OFFSET_AS_SKILL_ID + idx] = eval(objSelect.value);
			}

			objSelect = document.getElementById("OBJID_AS_SKILL_LV_" + (OBJID_OFFSET_AS_SKILL_LV + idx));
			if (objSelect) {
				n_A_PassSkill5[OBJID_OFFSET_AS_SKILL_LV + idx] = eval(objSelect.value);
			}

			objSelect = document.getElementById("OBJID_AS_SKILL_PROB_" + (OBJID_OFFSET_AS_SKILL_PROB + idx));
			if (objSelect) {
				n_A_PassSkill5[OBJID_OFFSET_AS_SKILL_PROB + idx] = eval(objSelect.value);
			}
		}


		if(n_Skill7SW){
			n_A_PassSkill7[0] = eval(A7_Skill0.checked);
			n_A_PassSkill7[1] = eval(A7_Skill1.checked);
			n_A_PassSkill7[2] = eval(A7_Skill2.checked);
			n_A_PassSkill7[3] = eval(A7_Skill3.value);
			n_A_PassSkill7[4] = eval(A7_Skill4.value);
			n_A_PassSkill7[5] = eval(A7_Skill5.value);
			n_A_PassSkill7[6] = eval(A7_Skill6.value);
			n_A_PassSkill7[7] = eval(A7_Skill7.value);
			n_A_PassSkill7[8] = eval(A7_Skill8.value);
			n_A_PassSkill7[9] = eval(A7_Skill9.checked);
			n_A_PassSkill7[10] = eval(A7_Skill10.checked);
			n_A_PassSkill7[11] = eval(A7_Skill11.checked);
			n_A_PassSkill7[12] = eval(A7_Skill12.checked);
			n_A_PassSkill7[13] = eval(A7_Skill13.checked);
			n_A_PassSkill7[14] = eval(A7_Skill14.checked);
			n_A_PassSkill7[15] = eval(A7_Skill15.checked);
			n_A_PassSkill7[16] = eval(A7_Skill16.checked);
			n_A_PassSkill7[17] = eval(A7_Skill17.checked);
			n_A_PassSkill7[18] = eval(A7_Skill18.checked);
			n_A_PassSkill7[19] = eval(A7_Skill19.checked);
			n_A_PassSkill7[20] = eval(A7_Skill20.checked);
			n_A_PassSkill7[21] = eval(A7_Skill21.checked);
			n_A_PassSkill7[22] = eval(A7_Skill22.checked);
			n_A_PassSkill7[23] = eval(A7_Skill23.checked);
			n_A_PassSkill7[24] = eval(A7_Skill24.checked);
			n_A_PassSkill7[25] = eval(A7_Skill25.checked);
			n_A_PassSkill7[26] = eval(A7_Skill26.checked);
			n_A_PassSkill7[27] = eval(A7_Skill27.checked);
			n_A_PassSkill7[28] = eval(A7_Skill28.checked);
			n_A_PassSkill7[29] = eval(A7_Skill29.checked);
			n_A_PassSkill7[30] = eval(A7_Skill30.checked);
			n_A_PassSkill7[31] = eval(A7_Skill31.checked);
			n_A_PassSkill7[32] = eval(A7_Skill32.checked);
			n_A_PassSkill7[33] = eval(A7_Skill33.checked);
			n_A_PassSkill7[34] = eval(A7_Skill34.checked);
			n_A_PassSkill7[35] = eval(A7_Skill35.checked);
			n_A_PassSkill7[36] = eval(A7_Skill36.checked);
			n_A_PassSkill7[37] = eval(A7_Skill37.checked);
			n_A_PassSkill7[38] = eval(A7_Skill38.value);
			n_A_PassSkill7[39] = eval(A7_Skill39.value);
			n_A_PassSkill7[40] = eval(A7_Skill40.checked);
			n_A_PassSkill7[41] = eval(A7_Skill41.value);
			n_A_PassSkill7[42] = eval(A7_Skill42.value);
			n_A_PassSkill7[43] = eval(A7_Skill43.value);
			n_A_PassSkill7[44] = eval(A7_Skill44.value);
			n_A_PassSkill7[45] = eval(A7_Skill45.value);
			n_A_PassSkill7[46] = eval(A7_Skill46.value);
			n_A_PassSkill7[47] = eval(A7_Skill47.value);
			n_A_PassSkill7[48] = eval(A7_Skill48.checked);
			n_A_PassSkill7[49] = eval(A7_Skill49.checked);
			n_A_PassSkill7[50] = eval(A7_Skill50.value);
			n_A_PassSkill7[51] = eval(A7_Skill51.checked);
		}
		n_A_PassSkill8[14] = 0;
		if(n_Skill8SW){
			n_A_PassSkill8[0] = eval(A8_Skill0.value);
			n_A_PassSkill8[1] = eval(A8_Skill1.value);
			n_A_PassSkill8[2] = eval(A8_Skill2.value);
			n_A_PassSkill8[3] = eval(A8_Skill3.value);
			n_A_PassSkill8[4] = eval(A8_Skill4.checked);
			n_A_PassSkill8[5] = eval(A8_Skill5.value);
			n_A_PassSkill8[6] = eval(A8_Skill6.value);
			n_A_PassSkill8[7] = eval(A8_Skill7.value);
			n_A_PassSkill8[12] = eval(A8_Skill12.value);
			n_A_PassSkill8[13] = eval(A8_Skill13.checked);
			n_A_PassSkill8[15] = eval(A8_Skill15.value);
			n_A_PassSkill8[16] = eval(A8_Skill16.checked);
			n_A_PassSkill8[17] = eval(A8_Skill17.value);
			n_A_PassSkill8[19] = eval(A8_Skill19.checked);
			n_A_PassSkill8[21] = eval(A8_Skill21.value);
			n_A_PassSkill8[22] = eval(A8_Skill22.value);
			if(41 <= n_A_JOB && n_A_JOB <= 43){
				if(n_A_PassSkill8[19] == 0) myInnerHtml("ID_A_HUYO_NAME","暖かい風",0);
				else myInnerHtml("ID_A_HUYO_NAME","武器属性付与",0);
			}
		}

		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_WEAPON_ATK);
		if (confval != 0) {
			n_A_Weapon_ATK = confval * 5;
		}

		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_WEAPON_LEVEL);
		if (confval != 0) {
			n_A_WeaponLV = confval;
			n_A_WeaponLV_seirenATK = 0;
			n_A_WeaponLV_Minplus = 0;
			n_A_WeaponLV_Maxplus = 0;
			if(n_A_WeaponLV == 1){
				n_A_WeaponLV_seirenATK = n_A_Weapon_ATKplus * 2;
				if(n_A_Weapon_ATKplus >= 8){
					n_A_WeaponLV_Minplus = 1;
					n_A_WeaponLV_Maxplus = 3 * (n_A_Weapon_ATKplus - 7);
				}
			}else if(n_A_WeaponLV == 2){
				n_A_WeaponLV_seirenATK = n_A_Weapon_ATKplus * 3;
				if(n_A_Weapon_ATKplus >= 7){
					n_A_WeaponLV_Minplus = 1;
					n_A_WeaponLV_Maxplus = 5 * (n_A_Weapon_ATKplus - 6);
				}
			}else if(n_A_WeaponLV == 3){
				n_A_WeaponLV_seirenATK = n_A_Weapon_ATKplus * 5;
				if(n_A_Weapon_ATKplus >= 6){
					n_A_WeaponLV_Minplus = 1;
					n_A_WeaponLV_Maxplus = 8 * (n_A_Weapon_ATKplus - 5);
				}
			}else if(n_A_WeaponLV == 4){
				n_A_WeaponLV_seirenATK = n_A_Weapon_ATKplus * 7;
				if(n_A_Weapon_ATKplus >= 5){
					n_A_WeaponLV_Minplus = 1;
					n_A_WeaponLV_Maxplus = 14 * (n_A_Weapon_ATKplus - 4);
				}
			}
		}



		//----------------------------------------------------------------
		// アイテムセットの装備状況を確認し、適用する
		//----------------------------------------------------------------

		// これまでの通常処理
		CheckAndApplyItemSetEquipping();



		switch (n_B_TAISEI[MOB_CONF_PLAYER_ID_SENTO_AREA]) {
		case MOB_CONF_PLAYER_ID_SENTO_AREA_GVG:
		case MOB_CONF_PLAYER_ID_SENTO_AREA_GVG_TE:
		case MOB_CONF_PLAYER_ID_SENTO_AREA_YE:
		case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_GVG_TE:
		case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_COLOSSEUM:
		case MOB_CONF_PLAYER_ID_SENTO_AREA_MH:
		case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_SHINKIRO:
			n_SiegeMode = true;
			break;

		default:
			n_SiegeMode = false;
		}

	}

	//----------------------------------------------------------------
	// モンスターＩＤの取得
	//----------------------------------------------------------------
	if (g_SPMODE_FLAG == 0) {
		monsterId = CMonsterMapAreaComponentManager.GetMonsterId();
	}
	else {
		monsterId = g_SPMODE_MONSTER_INDEX;
	}

	//----------------------------------------------------------------
	// モンスターデータの更新
	//----------------------------------------------------------------
/*
	if (g_SPMODE_FLAG == 0) {
		mobData = UpdateMobData(monsterId, mobData);
	}
*/

	//----------------------------------------------------------------
	// モンスター基本特性取得
	//----------------------------------------------------------------
	GetMobDataBasicAttribute(monsterId, mobData);

	SET_ZOKUSEI(mobData, attackMethodConfArray);

/*
	if(g_SPMODE_FLAG == 0){
		for(i=0;i<=22;i++) mobData[i] = MonsterObjNew[B_Enemy.value][i];
	}
	if(g_SPMODE_FLAG == 1){
		for(i=0;i<=22;i++) mobData[i] = MonsterObjNew[g_SPMODE_MONSTER_INDEX][i];
	}
*/

//================================================================================================
// 装備特性値の取得
//================================================================================================

	// TODO: データ移行過渡処理
	// 移行後の通常処理（追加で行う）
	// すべての装備のSP効果を計算する
	if (IsEnableMigrationBlockNewProcess()) {
		g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).CalcEffectiveSpData();
	}

	// 特性値を初期化
	// TODO: 配列長　直打ち
	for (idx = 0; idx <= 7; idx++) n_Delay[idx] = 0;

	// 移行処理の関係で、初期化のみ別ループ
	for (idx = 1; idx <= 400; idx++){
		n_tok[idx] = 0;
		n_tok_no_limit[idx] = 0;
	}

	for (idx = 1; idx <= 400; idx++){
		n_tok[idx] += GetEquippedTotalSPEquip(idx);
		n_tok[idx] += GetEquippedTotalSPCardAndElse(idx);
		n_tok[idx] += GetEquippedTotalSPCostume(idx);


		// TODO: データ移行過渡処理
		// 計算したSP効果を、移行前のデータ形式に変換して、加算する
		if (IsEnableMigrationBlockTransit()) {

			var idxArray = 0;
			var spTag = null;
			var spTagArray = MigGetItemSpTagArrayByOldSpID(idx);
			var ignoreAttrArray = null;
			var n_tokWork = 0;
			var itemDataWork = null;

			// 固有の処理
			switch (idx) {

			// TODO: 攻撃属性は、処理変更で一時的に旧方式のまま対応させる
/*
			// 攻撃属性は中途半端な対応になっているので、状況を判別して細かく制御する
			case ITEM_SP_ELEMENTAL:
			case ITEM_SP_ARMS_ELEMENT:

				// 移行済みデータでの定義を最初に選定
				n_tok[idx] = g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetEquipAttackElement();
				if (n_tok[idx] === undefined) {
					n_tok[idx] = ELM_ID_VANITY;
				}
				continue;
*/

			// 防御属性は個別対応になっているが、計算データ出力用に、こちらでも取得しておく
			case ITEM_SP_BODY_ELEMENT:

				// 移行済みデータでの定義を最初に選定
				n_tok[idx] = g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetEquipDefenseElement();
				if (n_tok[idx] === undefined) {
					n_tok[idx] = ELM_ID_VANITY;
				}
				continue;

			// 両手杖属性
			case ITEM_SP_STUFF2HAND:
				if (n_A_Equip[EQUIP_REGION_ID_ARMS]) {

					// 移行済みデータで、両手杖として定義されている場合は、フラグを立てる
					itemDataWork = g_constDataManager.GetDataObject(CONST_DATA_KIND_ITEM, n_A_Equip[EQUIP_REGION_ID_ARMS]);

					if (itemDataWork) {
						if (itemDataWork.GetStaticDataOf(MIG_EQUIPABLE_SP_STATIC_ID_TYPE, MIG_ITEM_TYPE_NONE) == MIG_ITEM_TYPE_STUFF_2HAND) {
							n_tok[idx] = 1;
						}
					}
				}
				continue;

			// DEF貫通（防御計算自体しない）は、変数の値がフラグのように使われているので、個別処理
			case ITEM_SP_PENETRATE_DEF:

				// 最大の値を採用する
				n_tokWork = 0;

				// ボスも貫通できるケース
				spTag = new CMigEquipableSpTag()
						.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_PENETRATE_DEF)
						.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_PARAM, MIG_PARAM_ID_DEF)
						.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_BOSS, MIG_BOSS_ID_BOSS)
						;

				n_tokWork = Math.max(n_tokWork, 10 * g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_MAX));
				n_tokWork = Math.max(n_tokWork, 10 * g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_MAX));

				spTag = new CMigEquipableSpTag()
						.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_PENETRATE_DEF_V2)
						.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_PARAM, MIG_PARAM_ID_DEF)
						.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_BOSS, MIG_BOSS_ID_BOSS)
						;

				n_tokWork = Math.max(n_tokWork, 10 * g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_MAX));
				n_tokWork = Math.max(n_tokWork, 10 * g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_MAX));


				// 一般のみ貫通できるケース
				spTag = new CMigEquipableSpTag()
						.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_PENETRATE_DEF)
						.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_PARAM, MIG_PARAM_ID_DEF)
						.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_BOSS, MIG_BOSS_ID_NORMAL)
						;

				n_tokWork = Math.max(n_tokWork, 1 * g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_MAX));
				n_tokWork = Math.max(n_tokWork, 1 * g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_MAX));

				spTag = new CMigEquipableSpTag()
						.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_PENETRATE_DEF_V2)
						.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_PARAM, MIG_PARAM_ID_DEF)
						.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_BOSS, MIG_BOSS_ID_NORMAL)
						;

				n_tokWork = Math.max(n_tokWork, 1 * g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_MAX));
				n_tokWork = Math.max(n_tokWork, 1 * g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_MAX));

				// 値を設定して、この spid の処理は終了
				n_tok[idx] = n_tokWork;
				continue;
			}

			// 共通の処理
			if (spTagArray) {

				// 無視する属性の配列を調整
				ignoreAttrArray = [];

				switch (idx) {
				case ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER:
				case ITEM_SP_MAGICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER:
				case ITEM_SP_RESIST_RACE_HUMAN_NOT_PLAYER:
					break;

				default:
					ignoreAttrArray.push(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_DISEFFECT_TARGET);

				}

				// データ取得ループ
				for (idxArray = 0; idxArray < spTagArray.length; idxArray++) {

					n_tokWork = 0;

					// 一部の旧SPIDは、取得元の調整が必要
					switch (idx) {

					case ITEM_SP_STR_PLUS:
					case ITEM_SP_AGI_PLUS:
					case ITEM_SP_VIT_PLUS:
					case ITEM_SP_INT_PLUS:
					case ITEM_SP_DEX_PLUS:
					case ITEM_SP_LUK_PLUS:
						n_tokWork += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTagArray[idxArray], ignoreAttrArray, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
						break;

					case ITEM_SP_ALLSTATUS_PLUS:
						n_tokWork += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagArray[idxArray], ignoreAttrArray, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
						n_tok[ITEM_SP_ALLSTATUS_PLUS_FOR_SET] += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTagArray[idxArray], ignoreAttrArray, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
						n_tok[ITEM_SP_ALLSTATUS_PLUS_FOR_SET] -= g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagArray[idxArray], ignoreAttrArray, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
						break;

					case ITEM_SP_STR_PLUS_FOR_SET:
					case ITEM_SP_AGI_PLUS_FOR_SET:
					case ITEM_SP_VIT_PLUS_FOR_SET:
					case ITEM_SP_INT_PLUS_FOR_SET:
					case ITEM_SP_DEX_PLUS_FOR_SET:
					case ITEM_SP_LUK_PLUS_FOR_SET:
					case ITEM_SP_ALLSTATUS_PLUS_FOR_SET:
						n_tokWork += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTagArray[idxArray], ignoreAttrArray, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
						break;

					default:
						n_tokWork += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTagArray[idxArray], ignoreAttrArray, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
						n_tokWork += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTagArray[idxArray], ignoreAttrArray, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
						break;

					}

					// 一部のSPIDは、反転が必要
					switch (spTagArray[idxArray].GetSpId()) {
					case MIG_EQUIPABLE_SP_EFFECT_ID_SKILL_DELAY:
					case MIG_EQUIPABLE_SP_EFFECT_ID_SKILL_COST:
					case MIG_EQUIPABLE_SP_EFFECT_ID_RECEIVE_DAMAGE:
					case MIG_EQUIPABLE_SP_EFFECT_ID_RECEIVE_DAMAGE_OLD:
						n_tok[idx] -= n_tokWork;
						break;

					default:
						n_tok[idx] += n_tokWork;
						break;
					}
				}

			}
		}
	}

	// TODO: データ移行過渡処理
	// 計算したSP効果を、移行前のデータ形式に変換して、加算する
	if (IsEnableMigrationBlockTransit()) {

		// 武器固有のMATK（処理の都合上、これだけ上書き）
		n_tok[ITEM_SP_MATK_PLUS_TYPE_WEAPON] = g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetEquipMatk();

		// 武器固有のMDEF
		n_tok[ITEM_SP_MDEF_PLUS] += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetEquipMdef();


		// 破損可否
		var unbreakableCount = 0;
		EnumEquipRegionId.For(
			function (idxF, nameF, valueF) {
				unbreakableCount += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetBreakable(valueF);
			}
		);
		n_tok[ITEM_SP_UNBREAKABLE] = unbreakableCount;

	}

//================================================================================================
// プレイヤー防御属性の導出
//================================================================================================

	n_A_BodyZokusei = GetStatusModifyBodyElement();

//================================================================================================
// 基本ステータスの算出
//================================================================================================

	StPlusCalc();

//================================================================================================
// ＡＴＫの算出
//================================================================================================

	//----------------------------------------------------------------
	// ステータスＡＴＫの算出
	//----------------------------------------------------------------
	var statusAtk = 0;
	var statusAtkGX = 0;

	switch (n_A_WeaponType) {

	// ＤＥＸ依存武器
	case ITEM_KIND_BOW:
	case ITEM_KIND_MUSICAL:
	case ITEM_KIND_WHIP:
	case ITEM_KIND_HANDGUN:
	case ITEM_KIND_RIFLE:
	case ITEM_KIND_SHOTGUN:
	case ITEM_KIND_GATLINGGUN:
	case ITEM_KIND_GRENADEGUN:
		statusAtk = n_A_DEX + n_A_STR / 5 + n_A_LUK / 3;
		break;

	// ＳＴＲ依存武器
	default:
		statusAtk = n_A_STR + n_A_DEX / 5 + n_A_LUK / 3;
		break;
	}

	statusAtk = Math.floor(statusAtk);

	// ＧＸ反動ダメージ用ＡＴＫ
	statusAtkGX = statusAtk;
	statusAtkGX += ROUNDDOWN(statusAtkGX * zokusei[n_A_BodyZokusei * 10 +1][0] / 100);

	// 計算した結果をキャラクターデータに保存
	charaData[CHARA_DATA_INDEX_STATUS_ATK] = statusAtk;
	charaData[CHARA_DATA_INDEX_STATUS_ATK_GX] = statusAtkGX;

	//----------------------------------------------------------------
	// 精錬ＡＴＫの算出
	//----------------------------------------------------------------
	var refineAtk = 0;

	// 精錬による効果
	refineAtk += n_A_WeaponLV_seirenATK;

	// 「三次職支援　ストライキング」による、効果
	if (sklLv = g_confDataSanzi[CCharaConfSanzi.CONF_ID_STRIKING]) {
		refineAtk += (8 + 2 * sklLv) * n_A_WeaponLV + 5 * g_confDataSanzi[CCharaConfSanzi.CONF_ID_STRIKINGYO_FUYOSKILL_LEVEL_GOKEI];
	}

	// 「修羅　点穴 -反-」による、効果
	var valStr = 0;
	var valDex = 0;
	if (sklLv = UsedSkillSearch(SKILL_ID_TENKETSU_HAN)) {

		// 持ち替え支援の場合、支援欄のステータスを使用
		if(n_A_PassSkill4[11] == 2) {
			valStr = n_A_PassSkill4[30];
			valDex = n_A_PassSkill4[34];
		}

		// 持ち替えなし場合、本人のステータスを使用
		else {
			valStr = n_A_STR;
			valDex = n_A_DEX;
		}

		refineAtk += Math.floor((Math.floor(valStr / 2) + Math.floor(valDex / 4)) * sklLv / 5);
	}

	// 計算した結果をキャラクターデータに保存
	charaData[CHARA_DATA_INDEX_REFINE_ATK] = refineAtk;

	//----------------------------------------------------------------
	// 装備ＡＴＫの算出
	//----------------------------------------------------------------

	// アイテム特性
	n_tok[ITEM_SP_ATK_PLUS] += n_tok[244];

	// 装備追加効果、支援効果
	n_tok[ITEM_SP_ATK_PLUS] += GetStatusModifyAtkPlus();

	// 計算した結果をキャラクターデータに保存
	charaData[CHARA_DATA_INDEX_WEAPON_ATK] = n_A_Weapon_ATK;

	// 拡張表示用にデータを保存
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_ATK_PLUS, n_tok[ITEM_SP_ATK_PLUS]);

	//----------------------------------------------------------------
	// 左手ＡＴＫの算出
	//----------------------------------------------------------------

	var leftAtk = 0;
	if (n_Nitou) {
		leftAtk = n_A_Weapon2_ATK + n_A_Weapon2LV_seirenATK;
	}

	// 計算した結果をキャラクターデータに保存
	charaData[CHARA_DATA_INDEX_LEFT_ATK] = leftAtk;

	//----------------------------------------------------------------
	// ステータス欄に表示されない効果の適用
	//----------------------------------------------------------------

	// 暖かい風
	if (n_A_PassSkill8[19] == 0) {
		if (GetLowerJobSeriesID(n_A_JOB) == JOB_ID_TAEGWON) {
			statusAtk = ApplyElementRatio(mobData, statusAtk, n_A_WeaponZokusei);
		}
		else {
			statusAtk = ApplyElementRatio(mobData, statusAtk, 0);
		}
	}
	else {
		if (GetLowerJobSeriesID(n_A_JOB) != JOB_ID_TAEGWON) {
			statusAtk = ApplyElementRatio(mobData, statusAtk, n_A_WeaponZokusei);
		}
		else {
			statusAtk = ApplyElementRatio(mobData, statusAtk, 0);
		}
	}

	// インベナム使用時のＡＴＫ補正
	if (n_A_ActiveSkill == SKILL_ID_ENVENOM) {
		n_tok[ITEM_SP_ATK_PLUS] += 15 * n_A_ActiveSkillLV;
	}

	// ポイズンリアクト（反撃）使用時のＡＴＫ補正
	if ((n_A_ActiveSkill == SKILL_ID_POISON_REACT)) {
		if ((51 <= mobData[18]) && (mobData[18] < 60)) {
			n_tok[ITEM_SP_ATK_PLUS] += 75;
		}
	}

//================================================================================================
// ＭａｘＨＰ算出
//================================================================================================

	//----------------------------------------------------------------
	// ＨＰの基礎値を取得
	//----------------------------------------------------------------
	var maxHp = 0;
	maxHp = GetHPBase(n_A_JOB, n_A_BaseLV, n_A_PassSkill8[13]);

	// テコンランカーの３倍補正（拳聖以上は効果なし）
	if ((n_A_JOB == JOB_ID_TAEGWON) && (n_A_BaseLV >= 90)) {
		if (UsedSkillSearch(SKILL_ID_TAEGWON_RANKER)) {
			maxHp = maxHp * 3;
		}
	}

	// インスピレーション計算用のバックアップを作成しておく
	var RG_HP_BackUP = 0;
	RG_HP_BackUP = maxHp;

	//----------------------------------------------------------------
	// ＶＩＴによる補正
	//----------------------------------------------------------------

	// インスピレーションのＶＩＴ補正は、基礎ＨＰ増加量に影響を与えない
	var vitForCalc = n_A_VIT;
	if (UsedSkillSearch(SKILL_ID_INSPIRATION)
		|| TimeItemNumSearch(TIME_ITEM_ID_ZETSUBONO_KAMI_MOROCC_CARD)
		|| TimeItemNumSearch(TIME_ITEM_ID_DEMI_FREYA)
		|| TimeItemNumSearch(TIME_ITEM_ID_MAKENSHI_SAKRAY_CARD)
		) {
		vitForCalc -= ROUNDDOWN(n_A_BaseLV / 10 + n_A_JobLV / 5);
	}
	maxHp += ROUNDDOWN(maxHp * vitForCalc / 100);

	
	//----------------------------------------------------------------
	// 装備、支援等による補正（＋○○）
	//----------------------------------------------------------------
	var maxHpPlus = 0;

	// アイテム特性
	maxHpPlus += n_tok[ITEM_SP_MAXHP_PLUS];
	maxHpPlus += n_tok[ITEM_SP_MAXHP_PLUS_GVGTE];

	// 装備によるＶＩＴ上昇分は、ＨＰも同量増加させる
	maxHpPlus += GetEquippedTotalSPEquip(ITEM_SP_VIT_PLUS);
	maxHpPlus += GetEquippedTotalSPEquip(ITEM_SP_ALLSTATUS_PLUS);

	if (IsEnableMigrationBlockTransit()) {

		var spTagVit = new CMigEquipableSpTag()
			.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_PARAM)
			.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_PARAM, MIG_PARAM_ID_VIT);

		var spTagAll = new CMigEquipableSpTag()
			.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_PARAM)
			.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_PARAM, MIG_PARAM_ID_ALL_STATUS);

		maxHpPlus += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagVit, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		maxHpPlus += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagAll, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
	}

	// 装備追加効果、支援効果
	maxHpPlus += GetStatusModifyMaxHpPlus();

	// 拡張表示用にデータを保存
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_MAXHP_PLUS, maxHpPlus);

	// 最終的な効果を適用
	maxHp += maxHpPlus;
	if (maxHp < 1) maxHp = 1;


	//----------------------------------------------------------------
	// 装備、支援等による補正（＋％）
	//----------------------------------------------------------------
	var maxHpPerUp = 0;

	// アイテム特性
	maxHpPerUp += n_tok[ITEM_SP_MAXHP_UP];

	// 装備追加効果、支援効果
	maxHpPerUp += GetStatusModifyMaxHpUp();

	// 拡張表示用にデータを保存
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_MAXHP_UP, maxHpPerUp);

	// 最終的な効果を適用
	maxHp += maxHp * maxHpPerUp / 100;


	//----------------------------------------------------------------
	// ロイヤルガード　インスピレーション使用時の特殊計算
	//----------------------------------------------------------------
	if (UsedSkillSearch(SKILL_ID_INSPIRATION)) {

		// インスピレーションの効果が無い状態で、インスピレーションによる上昇量を算出
		// ここの計算で maxHp の値を使うので、一度に計算できない
		vartmp = ROUNDDOWN(UsedSkillSearch(SKILL_ID_INSPIRATION) * (600 + maxHp / 20));

		// バックアップしておいたＨＰを元に、インスピレーションの効果込みでＨＰを再計算
		maxHp = RG_HP_BackUP;
		maxHp += ROUNDDOWN(maxHp * n_A_VIT / 100);
		maxHp += maxHpPlus + vartmp;		// ここで、インスピレーションのＨＰ上昇を適用
		maxHp += ROUNDDOWN(maxHp * maxHpPerUp / 100);
	}
	else if (
		TimeItemNumSearch(TIME_ITEM_ID_ZETSUBONO_KAMI_MOROCC_CARD)
		|| TimeItemNumSearch(TIME_ITEM_ID_DEMI_FREYA)
		|| TimeItemNumSearch(TIME_ITEM_ID_MAKENSHI_SAKRAY_CARD)
		) {

		// インスピレーションの効果が無い状態で、インスピレーションによる上昇量を算出
		// ここの計算で maxHp の値を使うので、一度に計算できない
		vartmp = ROUNDDOWN(1 * (600 + maxHp / 20));

		// バックアップしておいたＨＰを元に、インスピレーションの効果込みでＨＰを再計算
		maxHp = RG_HP_BackUP;
		maxHp += ROUNDDOWN(maxHp * n_A_VIT / 100);
		maxHp += maxHpPlus + vartmp;		// ここで、インスピレーションのＨＰ上昇を適用
		maxHp += ROUNDDOWN(maxHp * maxHpPerUp / 100);
	}


	//----------------------------------------------------------------
	// 特殊補正
	//----------------------------------------------------------------

	// バーサーク
	if (UsedSkillSearch(SKILL_ID_BERSERK)) maxHp *= 3;


	//----------------------------------------------------------------
	// 小数点以下切り落とし
	//----------------------------------------------------------------
	maxHp = Math.floor(maxHp);


	//----------------------------------------------------------------
	// 計算した結果をキャラクターデータに保存
	//----------------------------------------------------------------
	charaData[CHARA_DATA_INDEX_MAXHP] = maxHp;

//================================================================================================
// ＭａｘＳＰ算出
//================================================================================================

	//----------------------------------------------------------------
	// ＳＰの基礎値を取得
	//----------------------------------------------------------------
	var maxSp = 0;

	maxSp = GetSPBase(n_A_JOB, n_A_BaseLV, n_A_PassSkill8[13]);

	// テコンランカーの３倍補正（拳聖以上は効果なし）
	if ((n_A_JOB == JOB_ID_TAEGWON) && (n_A_BaseLV >= 90)) {
		if (UsedSkillSearch(SKILL_ID_TAEGWON_RANKER)) {
			maxSp = maxSp * 3;
		}
	}

	//----------------------------------------------------------------
	// ＩＮＴによる補正
	//----------------------------------------------------------------
	maxSp += ROUNDDOWN(maxSp * n_A_INT / 100);

	//----------------------------------------------------------------
	// 装備、支援等による補正（＋○○）
	//----------------------------------------------------------------
	var maxSpPlus = 0;

	// アイテム特性
	maxSpPlus += n_tok[ITEM_SP_MAXSP_PLUS];
	maxSpPlus += n_tok[ITEM_SP_MAXSP_PLUS_GVGTE];

	// 装備によるＩＮＴ上昇分は、ＳＰも同量増加させる
	maxSpPlus += GetEquippedTotalSPEquip(ITEM_SP_INT_PLUS);
	maxSpPlus += GetEquippedTotalSPEquip(ITEM_SP_ALLSTATUS_PLUS);

	if (IsEnableMigrationBlockTransit()) {

		var spTagInt = new CMigEquipableSpTag()
			.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_PARAM)
			.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_PARAM, MIG_PARAM_ID_INT);

		var spTagAll = new CMigEquipableSpTag()
			.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_PARAM)
			.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_PARAM, MIG_PARAM_ID_ALL_STATUS);

		maxSpPlus += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagInt, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		maxSpPlus += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagAll, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
	}

	// 装備追加効果、支援効果
	maxSpPlus += GetStatusModifyMaxSpPlus();

	// 拡張表示用にデータを保存
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_MAXSP_PLUS, maxSpPlus);

	// 最終的な効果を適用
	maxSp += maxSpPlus;
	if(maxSp <0) maxSp = 0;

	//----------------------------------------------------------------
	// 装備、支援等による補正（＋％）
	//----------------------------------------------------------------
	var maxSpPerUp = 0;

	// アイテム特性
	maxSpPerUp += n_tok[ITEM_SP_MAXSP_UP];

	// 装備追加効果、支援効果
	maxSpPerUp += GetStatusModifyMaxSpUp();

	// 拡張表示用にデータを保存
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_MAXSP_UP, maxSpPerUp);

	// 最終的な効果を適用
	maxSp += Math.floor(maxSp * maxSpPerUp / 100);

	//----------------------------------------------------------------
	// 計算した結果をキャラクターデータに保存
	//----------------------------------------------------------------
	charaData[CHARA_DATA_INDEX_MAXSP] = maxSp;

//================================================================================================
// 除算Ｄｅｆ算出
//================================================================================================

	//----------------------------------------------------------------
	// 基本除算Ｄｅｆ
	//----------------------------------------------------------------
	var armorDef = 0;

	// 防具の基本Ｄｅｆ

	// TODO: データ移行過渡処理
	// 計算したSP効果を、移行前のデータ形式に変換して、加算する
	if (IsEnableMigrationBlockTransit()) {
		armorDef += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetEquipDef();
	}

	// 従来の処理
	else {
		for (idx = EQUIP_REGION_ID_HEAD_TOP; idx <= EQUIP_REGION_ID_ACCESSARY_2; idx++) {

			// TODO: データ移行過渡処理
			if (IsEnableMigrationBlockTransit()) {
				if (g_constDataManager.itemDataManager.GetRegisteredIdArray().indexOf(n_A_Equip[idx]) >= 0) {
					continue;
				}
			}

			armorDef += ItemObjNew[n_A_Equip[idx]][ITEM_DATA_INDEX_POWER];
		}
	}

	//----------------------------------------------------------------
	// 装備、支援等による補正（＋○○）
	//----------------------------------------------------------------
	var defDivPlus = 0;

	// アイテム特性
	defDivPlus += n_tok[ITEM_SP_DEF_PLUS];

	// 装備追加効果、支援効果
	defDivPlus += GetStatusModifyDefDivPlus();

	// 拡張表示用にデータを保存
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_DEF_PLUS, defDivPlus);


	//----------------------------------------------------------------
	// 防具の精錬効果
	//----------------------------------------------------------------
	var refineDefTable = [0, 1, 2, 3, 4, 6, 8, 10, 12, 15, 18];
	var defRefined = 0;
	defRefined += refineDefTable[n_A_HEAD_DEF_PLUS];
	defRefined += refineDefTable[n_A_BODY_DEF_PLUS];
	defRefined += refineDefTable[n_A_SHIELD_DEF_PLUS];
	defRefined += refineDefTable[n_A_SHOULDER_DEF_PLUS];
	defRefined += refineDefTable[n_A_SHOES_DEF_PLUS];


	//----------------------------------------------------------------
	// 除算Ｄｅｆの算出
	//----------------------------------------------------------------
	var defDiv = 0;
	defDiv = armorDef + defDivPlus + defRefined;


	//----------------------------------------------------------------
	// 特殊効果の適用（各々乗算扱い）
	//----------------------------------------------------------------

	// アイテム特性　キャラの防御力１／ｎ
	if (n_tok[ITEM_SP_DEF_DIVIDE_PENARTY]) {
		defDiv = Math.floor(defDiv / n_tok[ITEM_SP_DEF_DIVIDE_PENARTY]);
	}

	// ロードナイト　コンセントレイション
	if (sklLv = UsedSkillSearch(SKILL_ID_CONCENTRATION)) {
		defDiv = Math.floor(defDiv * (1 - 0.05 * sklLv));
	}
	// 「二次職支援　コンセントレイション」の、効果
	else if ((sklLv = g_confDataNizi[CCharaConfNizi.CONF_ID_CONCENTRATION]) > 0) {
		defDiv = Math.floor(defDiv * (1 - 0.05 * sklLv));
	}

	// ロードナイト　バーサーク
	if (UsedSkillSearch(SKILL_ID_BERSERK)) {
		defDiv = 0;
	}

	/* プレイヤー状態異常設定「永遠の混沌」の効果 */
	if (g_confDataDebuff[CCharaConfDebuff.CONF_ID_ETERNALCHAOS] > 0) {
		defDiv = 0;
	}

	// 囲まれ補正
	if (n_A_PassSkill8[12] >= 3) {
		defDiv -= Math.floor(defDiv * (n_A_PassSkill8[12] - 2) * 5 / 100);
	}

	//----------------------------------------------------------------
	// 装備、支援等による補正（＋％）
	//----------------------------------------------------------------
	var defDivUp = 0;

	// アイテム特性
	defDivUp += n_tok[ITEM_SP_DEF_UP];

	// 装備追加効果、支援効果
	defDivUp += GetStatusModifyDefDivUp();

	// 拡張表示用にデータを保存
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_DEF_UP, defDivUp);

	// 最終的な効果を適用
	defDiv += ROUNDDOWN(defDiv * defDivUp / 100);

	//----------------------------------------------------------------
	// 計算した結果をキャラクターデータに保存
	//----------------------------------------------------------------
	charaData[CHARA_DATA_INDEX_DEF_DIV] = defDiv;

//================================================================================================
// 減算Ｄｅｆ算出
//================================================================================================

	//----------------------------------------------------------------
	// 基本減算Ｄｅｆ
	//----------------------------------------------------------------

	// プロボック系による倍率補正
	var rateByProvoke = 100;
	// オートバーサーク
	if (UsedSkillSearch(SKILL_ID_AUTO_BERSERK)) {
		rateByProvoke = 45;
	}
	// 「一次職支援　支援プロボック」
	else if (g_confDataIchizi[CCharaConfIchizi.CONF_ID_SHIEN_PROVOKE]){
		rateByProvoke = 95 - 5 * g_confDataIchizi[CCharaConfIchizi.CONF_ID_SHIEN_PROVOKE];
	}

	// 基本値を算出
	var defMinus = 0;
	defMinus = Math.floor(((n_A_VIT / 2) * rateByProvoke / 100) + n_A_BaseLV / 2 + n_A_AGI / 5);

	//----------------------------------------------------------------
	// 特殊効果の適用
	//----------------------------------------------------------------

	// 「ソーサラー　精霊補助スキル　ソリッドスキン」の、効果
	if (UsedSkillSearch(SKILL_ID_SERE_SUPPORT_SKILL) == 29){
		defMinus += defMinus;
	}

	// 「修羅　点穴 -活-」の、効果
	if ((sklLv = UsedSkillSearch(SKILL_ID_TENKETSU_KATSU)) > 0) {
		var valVit = 0;

		// 持ち替え支援の場合、支援欄のステータスを使用
		if(n_A_PassSkill4[11] == 3) {
			valVit = n_A_PassSkill4[32];
		}

		// 持ち替えなしの場合、本人のステータスを使用
		else {
			valVit = n_A_VIT;
		}

		defMinus += Math.floor(valVit / 4) * sklLv;
	}

	// 「一次職支援　エンジェラス」の、効果
	if (g_confDataIchizi[CCharaConfIchizi.CONF_ID_ANGELUS]) {
		defMinus += Math.floor(ROUNDDOWN(n_A_VIT / 2) * (0.05 * g_confDataIchizi[CCharaConfIchizi.CONF_ID_ANGELUS]));
	}

	// 「ミスリルマジックマント　時限効果」の、効果（ペナルティ）
	if (TimeItemNumSearch(33)) {
		defMinus -= Math.floor(defMinus * 20 / 100);
	}

	// 「ロードナイト　バーサーク」の、効果（ペナルティ）
	if (UsedSkillSearch(SKILL_ID_BERSERK)){
		defMinus = 0;
	}

	/* プレイヤー状態異常設定「永遠の混沌」の効果 */
	if (g_confDataDebuff[CCharaConfDebuff.CONF_ID_ETERNALCHAOS] > 0) {
		defMinus = 0;
	}

	// 囲まれ補正
	if (n_A_PassSkill8[12] >= 3) {
		defMinus -= Math.floor(defMinus * (n_A_PassSkill8[12] - 2) * 5 / 100);
	}

	// 「ジェネティック　Ｓホム　ペインキラー」の、効果
	if ((bufLv = ExBuffNumSearch(EXBUF_ID_HOM_S_PAINKILLER)) > 0) {
		var homLv = ExBuffNumSearch(EXBUF_ID_HOM_S_PAINKILLER_HOM_LEVEL);

		defMinus += ROUNDDOWN(100 * bufLv * (132 + homLv) / 100 * n_A_BaseLV / 150);
	}

	//----------------------------------------------------------------
	// 計算した結果をキャラクターデータに保存
	//----------------------------------------------------------------
	charaData[CHARA_DATA_INDEX_DEF_MINUS] = defMinus;

/**
 * ==================================================================
 * 除算Mdef算出
 * ================================================================== 
 */

	var mdefDiv = 0;
	var mdefDivIgnoreBuff = 0;

	//----------------------------------------------------------------
	// 装備、支援等による補正（＋○○）
	//----------------------------------------------------------------
	var mdefDivPlus = 0;
	var mdefDivPlusIgnoreBuff = 0;

	// アイテム特性
	mdefDivPlus = n_tok[ITEM_SP_MDEF_PLUS];
	mdefDivPlusIgnoreBuff = mdefDivPlus;

	// 装備追加効果、支援効果
	mdefDivPlus += GetStatusModifyMdefDivPlus(false);
	mdefDivPlusIgnoreBuff += GetStatusModifyMdefDivPlus(true);

	// 拡張表示用にデータを保存
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_MDEF_PLUS, mdefDivPlus);

	// 最終的な効果を適用
	mdefDiv = mdefDivPlus;
	mdefDivIgnoreBuff = mdefDivPlusIgnoreBuff;

	//----------------------------------------------------------------
	// 特殊効果の適用（各々乗算扱い）
	//----------------------------------------------------------------

	// 「修羅　点穴 -反-」の、効果（ペナルティ）
	if ((sklLv = UsedSkillSearch(SKILL_ID_TENKETSU_HAN)) > 0) {
		var valInt = 0;

		// 持ち替え支援の場合、支援欄のステータスを使用
		if(n_A_PassSkill4[11] == 2) {
			valInt = n_A_PassSkill4[32];
		}

		// 持ち替えなしの場合、本人のステータスを使用
		else {
			valInt = n_A_VIT;
		}

		if (valInt < 1) valInt = 1;

		// このペナルティによって、Ｍｄｅｆがマイナスになることはない（らしい）
		vartmp = 1 * Math.floor(200 / valInt) * sklLv;
		mdefDiv -= Math.min(mdefDiv, vartmp);
	}

	// 「ロードナイト　バーサーク」の、効果（ペナルティ）
	if (UsedSkillSearch(SKILL_ID_BERSERK)){
		mdefDiv = 0;
	}

	//----------------------------------------------------------------
	// 装備、支援等による補正（＋％）
	//----------------------------------------------------------------
	var mdefDivUp = 0;
	var mdefDivUpIgnoreBuff = 0;

	// アイテム特性
	mdefDivUp += n_tok[ITEM_SP_MDEF_UP];
	mdefDivUpIgnoreBuff += n_tok[ITEM_SP_MDEF_UP];

	// 装備追加効果、支援効果
	mdefDivUp += GetStatusModifyMdefDivUp(false);
	mdefDivUpIgnoreBuff += GetStatusModifyMdefDivUp(true);

	// 拡張表示用にデータを保存
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_MDEF_UP, mdefDivUp);

	// 最終的な効果を適用
	mdefDiv += Math.floor(mdefDiv * mdefDivUp / 100);
	mdefDivIgnoreBuff += Math.floor(mdefDivIgnoreBuff * mdefDivUpIgnoreBuff / 100);

	//----------------------------------------------------------------
	// 計算した結果をキャラクターデータに保存
	//----------------------------------------------------------------
	charaData[CHARA_DATA_INDEX_MDEF_DIV] = mdefDiv;
	charaData[CHARA_DATA_INDEX_MDEF_DIV_IGNORE_BUFF] = mdefDivIgnoreBuff;

/**
 * ==================================================================
 * 減算Mdef算出
 * ================================================================== 
 */

	//----------------------------------------------------------------
	// 基本減算Ｍｄｅｆ
	//----------------------------------------------------------------
	var mdefMinus = 0;
	mdefMinus = Math.floor(n_A_INT + n_A_BaseLV / 4 + n_A_VIT / 5 + n_A_DEX / 5);

	//----------------------------------------------------------------
	// 特殊効果の適用（各々乗算扱い）
	//----------------------------------------------------------------

	// ウルフヘジンの時限効果
	if (TimeItemNumSearch(TIME_ITEM_ID_WOLF_HEZIN)) {
		mdefMinus -= Math.floor(mdefMinus * 20 / 100);
	}

	// 「アヌビス帽」の、効果（ペナルティ）
	if (EquipNumSearch(1281)) {
		mdefMinus = Math.floor(mdefMinus / 2);
	}

	// 「ジェネティック　Ｓホム　ペインキラー」の、効果
	if ((bufLv = ExBuffNumSearch(EXBUF_ID_HOM_S_PAINKILLER)) > 0) {
		var homLv = ExBuffNumSearch(EXBUF_ID_HOM_S_PAINKILLER_HOM_LEVEL);

		mdefMinus += ROUNDDOWN(100 * bufLv * (132 + homLv) / 100 * n_A_BaseLV / 150);
	}

	//----------------------------------------------------------------
	// 計算した結果をキャラクターデータに保存
	//----------------------------------------------------------------
	charaData[CHARA_DATA_INDEX_MDEF_MINUS] = mdefMinus;

/**
 * ==================================================================
 * HIT 算出
 * ================================================================== 
 */
	{
		let hit = 0;

		//----------------------------------------------------------------
		// 基本ＨＩＴ
		//----------------------------------------------------------------
		hit = 175 + Math.floor(n_A_BaseLV + n_A_DEX + n_A_LUK / 3);

		//----------------------------------------------------------------
		// 装備、支援等による補正（＋○○）
		//----------------------------------------------------------------
		let hitPlus = 0;

		// アイテム特性
		hitPlus += n_tok[ITEM_SP_HIT_PLUS];

		// 装備追加効果、支援効果
		hitPlus += GetStatusModifyHitPlus();

		// 最終的な効果を適用
		hit += hitPlus;

		/**
		 * プレイヤー状態異常「暗黒」の効果
		 */
		if (g_confDataDebuff[CCharaConfDebuff.CONF_ID_DARKNESS] > 0) {
			hit = Math.floor(hit * 0.75);
		}
		/**
		 * プレイヤー状態異常「不幸」の効果
		 */
		if (g_confDataDebuff[CCharaConfDebuff.CONF_ID_UNLUCKY] > 0) {
			hit = 0;
		}

		//----------------------------------------------------------------
		// 計算した結果をキャラクターデータに保存
		//----------------------------------------------------------------
		charaData[CHARA_DATA_INDEX_HIT] = hit;
	}

	// FLEE の計算
	charaData[CHARA_DATA_INDEX_FLEE] = getFlee();

	// 完全回避の計算
	charaData[CHARA_DATA_INDEX_LUCKY] = getCompleteAvoidance();

	with(document.calcForm){

//================================================================================================================================
//================================================================================================================================
//====
//==== 物理攻撃時、△△形モンスターにクリティカル率＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		// クリティカル率＋○○よりも先に計算すること

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_CRITICAL_UP_RACE_SOLID; idx <= ITEM_SP_CRITICAL_UP_RACE_DRAGON; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		//----------------------------------------------------------------
		// ドラム種族の種族特性
		//----------------------------------------------------------------
		if (IsDoramJob(n_A_JOB)) {
			n_tok[ITEM_SP_CRITICAL_UP_RACE_HUMAN] += 2;
		}

		//----------------------------------------------------------------
		// 「勇者の靴　達人の槌　セット」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_YUSHANO_KUTSU_TATSUZINNO_TSUCHI)) > 0) {
			n_tok[ITEM_SP_CRITICAL_UP_RACE_UNDEAD] += 5 * LearnedSkillSearch(SKILL_ID_MACE_SHUREN) * itemCount;
			n_tok[ITEM_SP_CRITICAL_UP_RACE_DEMON] += 5 * LearnedSkillSearch(SKILL_ID_MACE_SHUREN) * itemCount;
			n_tok[ITEM_SP_CRITICAL_UP_RACE_HUMAN] += 5 * LearnedSkillSearch(SKILL_ID_MACE_SHUREN) * itemCount;
		}
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_YUSHANO_KUTSU_TATSUZINNO_TSUCHI_S2)) > 0) {
			n_tok[ITEM_SP_CRITICAL_UP_RACE_UNDEAD] += 5 * LearnedSkillSearch(SKILL_ID_MACE_SHUREN) * itemCount;
			n_tok[ITEM_SP_CRITICAL_UP_RACE_DEMON] += 5 * LearnedSkillSearch(SKILL_ID_MACE_SHUREN) * itemCount;
			n_tok[ITEM_SP_CRITICAL_UP_RACE_HUMAN] += 5 * LearnedSkillSearch(SKILL_ID_MACE_SHUREN) * itemCount;
		}

		// クリティカル率＋○○
		charaData[CHARA_DATA_INDEX_CRI] = GetAdditionalCriticalRate(mobData);
		
//================================================================================================================================
//================================================================================================================================
//====
//==== ＭＡＴＫ＋　ここから
//==== 公式サイトで「装備Matk + ◯」と表記される効果もここで計算される
//================================================================================================================================
//================================================================================================================================
	{
	    let w = 0;
	    let statusMatk = 0;
	    let weaponMatk = 0;

	    //----------------------------------------------------------------
	    // ランダムエンチャント効果
	    //----------------------------------------------------------------
	    w += GetRndOptTotalValue(ITEM_SP_MATK_PLUS_TYPE_NOT_WEAPON, null, false);
	    // w += GetRndEnchValue(ITEM_SP_MATK_PLUS_TYPE_NOT_WEAPON);

	    if (SU_STR >= 120 && EquipNumSearch(1308)) w += 5;
	    if (SU_INT >= 120 && EquipNumSearch(1310)) w += 10;
	    if (SU_DEX >= 120 && EquipNumSearch(1312)) w += 10;
	    if (SU_INT >= 120 && EquipNumSearch(1314)) w += 10;
	    if (SU_INT >= 120 && EquipNumSearch(1319)) w += 10;
	    if (n_A_Weapon_ATKplus >= 6 && EquipNumSearch(1337)) w += 3 * (n_A_Weapon_ATKplus - 5);
	    if (EquipNumSearch(1379)) w += 10 * n_A_Weapon_ATKplus;
	    if (EquipNumSearch(1385)) w += 2 * n_A_SHIELD_DEF_PLUS;
	    if (SU_INT >= 80 && EquipNumSearch(1528)) {
	        var wx = EquipNumSearch(1528);
	        w += 5 * wx;
	        if (SU_INT >= 100) w += 5 * wx;
	        if (SU_INT >= 120) w += 5 * wx;
	    }
	    if (EquipNumSearch(1628)) {
	        w += 15 * n_A_Weapon_ATKplus;
	        if (n_A_Weapon_ATKplus >= 10) w += 50;
	    }
	    if (EquipNumSearch(1629)) {
	        w += 20 * n_A_Weapon_ATKplus;
	        if (n_A_Weapon_ATKplus >= 10) w += 50;
	    }
	    if (EquipNumSearch(1664)) w += 3 * n_A_Weapon_ATKplus;
	    if (SU_INT >= 120 && EquipNumSearch(1686)) w += 10;
	    if (n_A_Equip[EQUIP_REGION_ID_ARMS] == 1742) {
	        if (n_A_Weapon_ATKplus >= 5) w += 30;
	        if (n_A_Weapon_ATKplus >= 7) w += 40;
	        if (n_A_Weapon_ATKplus >= 9) w += 50;
	    }
	    if (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == 1742) {
	        if (n_A_Weapon2_ATKplus >= 5) w += 30;
	        if (n_A_Weapon2_ATKplus >= 7) w += 40;
	        if (n_A_Weapon2_ATKplus >= 9) w += 50;
	    }
	    if (EquipNumSearch(1790)) w += 10 * n_A_Weapon_ATKplus;
	    w += n_tok[245];

	    // 知力の時空ブーツ
	    if (n_A_SHOES_DEF_PLUS >= 3 && EquipNumSearch(1918)) {
	        w += 10 * ROUNDDOWN(n_A_SHOES_DEF_PLUS / 3);
	    }
	    if (SU_INT >= 120 && EquipNumSearch(1918)) {
	        w += 60;
	    }
	    if (n_A_SHOES_DEF_PLUS >= 3 && EquipNumSearch(ITEM_ID_CHIRYOKUNO_ZIKU_BOOTS_S1)) {
	        w += 10 * ROUNDDOWN(n_A_SHOES_DEF_PLUS / 3);
	    }
	    if (SU_INT >= 120 && EquipNumSearch(ITEM_ID_CHIRYOKUNO_ZIKU_BOOTS_S1)) {
	        w += 60;
	    }

	    if (EquipNumSearch(1947)) w += ROUNDDOWN(SU_INT / 10) * EquipNumSearch(1947);
	    if (2039 <= n_A_Equip[EQUIP_REGION_ID_ARMS] && n_A_Equip[EQUIP_REGION_ID_ARMS] <= 2041) {
	        w += 5 * n_A_Weapon_ATKplus;
	        if (n_A_Weapon_ATKplus >= 7) w += 20;
	        if (n_A_Weapon_ATKplus >= 10) w += 30;
	    }
	    if (SU_INT >= 120 && EquipNumSearch(2093)) w += 25;
	    if (EquipNumSearch(2194)) w += 10 * n_A_Weapon_ATKplus;
	    if (EquipNumSearch(2201)) w += 5 * n_A_HEAD_DEF_PLUS;
	    if (EquipNumSearch(2202)) w += 7 * n_A_HEAD_DEF_PLUS;
	    if (CardNumSearch(736)) w += 5 * ROUNDDOWN(SU_INT / 10);
	    if (n_A_WeaponType == 12 && n_A_Weapon_ATKplus >= 10) w += 20 * CardNumSearch(735);
	    if (EquipNumSearch(2242)) w += 2 * ROUNDDOWN(SU_LUK / 10);
	    if (n_A_SHIELD_DEF_PLUS >= 9 && EquipNumSearch(2253)) w += 5;
	    if (n_A_card[CARD_REGION_ID_HEAD_TOP] == 750) w += 5 * n_A_HEAD_DEF_PLUS;
	    if (n_A_SHIELD_DEF_PLUS >= 7 && EquipNumSearchMIG(2322)) {
	        w += 20;
	        if (n_A_SHIELD_DEF_PLUS >= 9 && EquipNumSearch(2323)) {
	            w += 15 * n_A_Weapon_ATKplus;
	            if (n_A_Weapon_ATKplus >= 10) w += 50;
	        }
	    }
	    if (EquipNumSearch(2339)) w += 10 * n_A_Weapon_ATKplus;
	    if (CardNumSearch(821)) {
	        if (n_A_HEAD_DEF_PLUS >= 7) w += 10 * CardNumSearch(821);
	        if (n_A_HEAD_DEF_PLUS >= 9) w += 10 * CardNumSearch(821);
	    }
	    if (EquipNumSearch(2413)) w += 7 * n_A_HEAD_DEF_PLUS;

	    // アイオーンスタッフ特殊効果
	    if (TimeItemNumSearch(84)) {
	        w += 24 * LearnedSkillSearch(SKILL_ID_MAHORYOKU_ZOFUKU);
	    }

	    if (EquipNumSearch(2439)) w += 10 * ROUNDDOWN(n_A_SHOES_DEF_PLUS / 3) * EquipNumSearch(2439);

	    if (CardNumSearch(CARD_ID_ENCHANT_A_INT)) {

	        cardCountBody = CardNumSearch(CARD_ID_ENCHANT_A_INT, CARD_REGION_ID_BODY_ANY);

	        w += 1 * Math.floor(SU_INT / 10) * cardCountBody;

	        if (n_A_BODY_DEF_PLUS >= 7) {
	            w += 2 * Math.floor(SU_INT / 10) * cardCountBody;
	        }
	        if (n_A_BODY_DEF_PLUS >= 8) {
	            w += 4 * Math.floor(SU_INT / 10) * cardCountBody;
	        }
	        if (n_A_BODY_DEF_PLUS >= 9) {
	            w += 8 * Math.floor(SU_INT / 10) * cardCountBody;
	        }
	    }

	    if (EquipNumSearchMIG(2499)) {
	        w += 2 * ROUNDDOWN(SU_DEX / 10);
	        if (SU_DEX >= 108) w += 60;
	        if (SU_DEX >= 120) w += 100;
	    }
	    if (EquipNumSearch(2528)) w += 15 * n_A_BODY_DEF_PLUS;

	    //----------------------------------------------------------------
	    // 「ヴァルキリーハンマー」の、職業による強化
	    //----------------------------------------------------------------
	    if (EquipNumSearch(ITEM_ID_VALKYRIE_HAMMER)) {
	        switch (GetLowerJobSeriesID(n_A_JOB)) {

	            // ノービス系
	            case JOB_SERIES_ID_NOVICE:
	                w += 200;
	                break;

	                // ソードマン系
	            case JOB_SERIES_ID_SWORDMAN:
	                break;

	                // マーチャント系
	            case JOB_SERIES_ID_MERCHANT:
	                break;

	            default:
	                switch (GetHigherJobSeriesID(n_A_JOB)) {

	                    // プリースト系
	                    case JOB_SERIES_ID_PRIEST:
	                        w += 100;
	                        break;

	                        // モンク系
	                    case JOB_SERIES_ID_MONK:
	                        break;
	                }
	        }
	    }

	    //----------------------------------------------------------------
	    // 「古びたミダスのささやき」の、精錬による強化
	    //----------------------------------------------------------------
	    if (EquipNumSearch(ITEM_ID_FURUBITA_MIDASS)) {
	        w += 7 * n_A_HEAD_DEF_PLUS;
	    }

	    //----------------------------------------------------------------
	    // 「エメラルドイヤリング」の、装備効果
	    //----------------------------------------------------------------
	    if (EquipNumSearch(ITEM_ID_EMERALDEARRING)) {
	        w += ROUNDDOWN(LearnedSkillSearch(SKILL_ID_LESSON) / 2) * 20 * EquipNumSearch(ITEM_ID_EMERALDEARRING);
	    }

	    //----------------------------------------------------------------
	    // 「魔法石の恩恵」の、装備効果
	    //----------------------------------------------------------------
	    if (EquipNumSearch(ITEM_ID_MAHOSEKINO_ONKE)) {
	        w += SU_INT;
	    }

	    //----------------------------------------------------------------
	    // 「ヴァルキリーナイフ」の、職業による強化
	    //----------------------------------------------------------------
	    if (EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE)) {
	        switch (GetLowerJobSeriesID(n_A_JOB)) {

	            // ノービス系
	            case JOB_SERIES_ID_NOVICE:
	                w += 150 * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE);
	                w += 15 * n_A_Weapon_ATKplus * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE);
	                break;

	                // マジシャン系
	            case JOB_SERIES_ID_MAGICIAN:
	                break;

	                // シーフ系
	            case JOB_SERIES_ID_THIEF:
	                w += 150 * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE);
	                break;

	            default:
	                switch (GetHigherJobSeriesID(n_A_JOB)) {

	                    // ハンター系
	                    case JOB_SERIES_ID_HUNTER:
	                        break;

	                        // バード系、ダンサー系
	                    case JOB_SERIES_ID_BARD:
	                    case JOB_SERIES_ID_DANCER:
	                        break;
	                }
	        }
	    }

	    //----------------------------------------------------------------
	    // 「カルデュイの法衣　ラフィネセット」の、効果
	    //----------------------------------------------------------------
	    if (EquipNumSearchMIG(ITEM_SET_ID_CARDYUINO_HOI_LAFINE_STUFF)) {

	        w += 3 * n_A_Weapon_ATKplus;

	        if (n_A_BODY_DEF_PLUS >= 7) {
	            w += 5 * n_A_Weapon_ATKplus;
	        }

	        if (n_A_BODY_DEF_PLUS >= 8) {
	            w += 7 * n_A_Weapon_ATKplus;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「サバイバルオーブ　ロッドセット」の、装備効果
	    //----------------------------------------------------------------
	    if (EquipNumSearch(ITEM_SET_ID_SURVIVAL_ORB_SURVIVAL_ROD_DEX) ||
	        EquipNumSearch(ITEM_SET_ID_SURVIVAL_ORB_SURVIVAL_ROD_INT)) {
	        w += 10 * n_A_Weapon_ATKplus;
	    }

	    //----------------------------------------------------------------
	    // 「レインボウ」の、精錬による効果
	    //----------------------------------------------------------------
	    if (EquipNumSearch(ITEM_ID_RAIN_BO)) {
	        w += 10 * n_A_HEAD_DEF_PLUS;
	    }

	    //----------------------------------------------------------------
	    // 「ガイアシールド」の、精錬による効果
	    //----------------------------------------------------------------
	    if (EquipNumSearch(ITEM_ID_GAIA_SHIELD) > 0) {
	        if (n_A_SHIELD_DEF_PLUS >= 8) {
	            if (SU_INT >= 90) {
	                w += 30;
	            }
	        }
	    }

	    //----------------------------------------------------------------
	    // 「神魔バフォメットの角　ブラッディクロスセット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_SHINMA_BAPHOMETNO_TSUNO_BLOODY_CROSS)) > 0) {
	        w += 15 * n_A_Weapon_ATKplus * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「サファイアリスト」の、スキル習得による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_SAPPHIRE_LIST)) > 0) {
	        var upCount = Math.floor(LearnedSkillSearch(SKILL_ID_SLIMPOTION_PITCHER) / 2);
	        w += 20 * upCount * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「エルダーの御霊」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_ELDERNO_MITAMA)) > 0) {
	        vartmp = 0;

	        if (n_A_SHOULDER_DEF_PLUS >= 5) vartmp += 5 * ROUNDDOWN(SU_INT / 60);
	        if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 5 * ROUNDDOWN(SU_INT / 10);

	        w += vartmp * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「エルダーの御霊　毀損された古書カードセット」の、素ＩＮＴによる効果（ペナルティ）
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_ELDERNO_MITAMA_KISONSARETA_KOSHO_CARD)) > 0) {
	        w += -5 * ROUNDDOWN(SU_INT / 10) * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「邪念のロッド」の、精錬による効果
	    //----------------------------------------------------------------
	    itemCountRight = EquipNumSearch(ITEM_ID_ZYANENNO_ROD, EQUIP_REGION_ID_ARMS);
	    itemCountLeft = EquipNumSearch(ITEM_ID_ZYANENNO_ROD, EQUIP_REGION_ID_ARMS_LEFT);
	    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
	        w += Math.pow(n_A_Weapon_ATKplus, 2) * itemCountRight;
	        w += Math.pow(n_A_Weapon2_ATKplus, 2) * itemCountLeft;
	    }

	    //----------------------------------------------------------------
	    // 「邪念のスタッフ」の、精錬による効果
	    //----------------------------------------------------------------
	    itemCountRight = EquipNumSearch(ITEM_ID_ZYANENNO_STUFF, EQUIP_REGION_ID_ARMS);
	    itemCountLeft = EquipNumSearch(ITEM_ID_ZYANENNO_STUFF, EQUIP_REGION_ID_ARMS_LEFT);
	    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
	        w += Math.pow(n_A_Weapon_ATKplus, 2) * itemCountRight;
	        w += Math.pow(n_A_Weapon2_ATKplus, 2) * itemCountLeft;
	    }

	    //----------------------------------------------------------------
	    // 「邪念のブック」の、精錬による効果
	    //----------------------------------------------------------------
	    itemCountRight = EquipNumSearch(ITEM_ID_ZYANENNO_BOOK, EQUIP_REGION_ID_ARMS);
	    itemCountLeft = EquipNumSearch(ITEM_ID_ZYANENNO_BOOK, EQUIP_REGION_ID_ARMS_LEFT);
	    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
	        w += Math.pow(n_A_Weapon_ATKplus, 2) * itemCountRight;
	        w += Math.pow(n_A_Weapon2_ATKplus, 2) * itemCountLeft;
	    }

	    //----------------------------------------------------------------
	    // 「邪念のバイオリン」の、精錬による効果
	    //----------------------------------------------------------------
	    itemCountRight = EquipNumSearch(ITEM_ID_ZYANENNO_VIOLIN, EQUIP_REGION_ID_ARMS);
	    itemCountLeft = EquipNumSearch(ITEM_ID_ZYANENNO_VIOLIN, EQUIP_REGION_ID_ARMS_LEFT);
	    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
	        w += Math.pow(n_A_Weapon_ATKplus, 2) * itemCountRight;
	        w += Math.pow(n_A_Weapon2_ATKplus, 2) * itemCountLeft;
	    }

	    //----------------------------------------------------------------
	    // 「邪念のワイヤー」の、精錬による効果
	    //----------------------------------------------------------------
	    itemCountRight = EquipNumSearch(ITEM_ID_ZYANENNO_WIRE, EQUIP_REGION_ID_ARMS);
	    itemCountLeft = EquipNumSearch(ITEM_ID_ZYANENNO_WIRE, EQUIP_REGION_ID_ARMS_LEFT);
	    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
	        w += Math.pow(n_A_Weapon_ATKplus, 2) * itemCountRight;
	        w += Math.pow(n_A_Weapon2_ATKplus, 2) * itemCountLeft;
	    }

	    //----------------------------------------------------------------
	    // 「暴徒のスカーフ　グラスセット」の、素ＩＮＴと素ＤＥＸによる効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_GLASS)) > 0) {
	        w += 120 * ROUNDDOWN((SU_INT + SU_DEX) / 80) * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「暴徒のスカーフ　サングラスセット」の、素ＩＮＴと素ＤＥＸによる効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_SUNGLASS)) > 0) {
	        w += 120 * ROUNDDOWN((SU_INT + SU_DEX) / 80) * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「火雷大神靴」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_HONOIKAZUCHINOOOKAMI_KUTSU)) > 0) {
	        w += 5 * n_A_SHOES_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「火雷大神靴　月夜花カード　セット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_HONOIKAZUCHINOOOKAMI_KUTSU_WORUYAFA)) > 0) {
	        if (n_A_BaseLV <= 99) {
	            w += 5 * n_A_SHOES_DEF_PLUS * itemCount;
	        } else {
	            w += 15 * n_A_SHOES_DEF_PLUS * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「アネモスシールド」の、精錬による効果
	    //----------------------------------------------------------------
	    if (EquipNumSearch(ITEM_ID_ANEMOS_SHIELD) > 0) {
	        if (n_A_SHIELD_DEF_PLUS >= 8) {
	            if (SU_INT >= 90) {
	                w += 30;
	            }
	        }
	    }

	    //----------------------------------------------------------------
	    // 「ソヒョンの小太刀　ソヒョンの羽衣セット」の、精錬による強化
	    //----------------------------------------------------------------
	    if (EquipNumSearch(ITEM_SET_ID_SOHIONNO_KODACHI_SOHIONNO_HAGOROMO)) {
	        w += 5 * n_A_SHOULDER_DEF_PLUS;
	    }

	    //----------------------------------------------------------------
	    // 「[LoVA] キマカード」の、精錬による効果
	    //----------------------------------------------------------------
	    if (CardNumSearch(CARD_ID_LOVA_KIMA) > 0) {
	        if (n_A_SHOES_DEF_PLUS >= 7) {
	            w += 6 * ROUNDDOWN(SU_INT / 30);
	        }
	    }

	    //----------------------------------------------------------------
	    // 「[LoVA] 真化キマカード」の、精錬による効果
	    //----------------------------------------------------------------
	    if (CardNumSearch(CARD_ID_LOVA_SHINKA_KIMA) > 0) {
	        if (n_A_SHOES_DEF_PLUS >= 7) {
	            w += 6 * ROUNDDOWN(SU_INT / 10);
	        }
	    }

	    //----------------------------------------------------------------
	    // 「セリーヌ・キミカード　リボンセット」の、精錬による効果
	    //----------------------------------------------------------------
	    if (CardNumSearch(CARD_SET_ID_CELINE_KIMI_CELINENO_RIBBON)) {
	        w += 7 * n_A_Weapon_ATKplus;
	    }

	    //----------------------------------------------------------------
	    // 「将軍デヒョンカード」の、強化
	    //----------------------------------------------------------------
	    if (CardNumSearch(CARD_ID_SHOGUN_DAEHYON)) {
	        if (n_A_WeaponType == ITEM_KIND_SWORD ||
	            n_A_WeaponType == ITEM_KIND_SWORD_2HAND) {
	            w += 100;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「獄エンチャント」の、職業による効果
	    //----------------------------------------------------------------
	    if ((cardCount = CardNumSearch(CARD_ID_GOKU)) > 0) {
	        // 職業限定の効果
	        if (IsSameJobClass(JOB_ID_GENETIC)) {
	            w += 50;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「巨大樹の若葉　カルデュイの耳セット」の、素ＤＥＸによる効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KYODAIZYUNO_WAKABA_CARDYUINO_MIMI)) > 0) {
	        if (SU_DEX >= 108) {
	            w += 20 * itemCount;
	        }
	        if (SU_DEX >= 120) {
	            w += 30 * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「エクセリオンシールド」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_EXELION_SHIELD)) > 0) {
	        w += 30 * ROUNDDOWN(n_A_SHIELD_DEF_PLUS / 3) * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「トップブレードライダーカード」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((cardCount = CardNumSearch(CARD_ID_TOP_BLADE_RIDER)) > 0) {
	        if (n_A_SHOULDER_DEF_PLUS >= 7) {
	            w += 40;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「カニバラウスカード」の、素ＩＮＴによる効果
	    //----------------------------------------------------------------
	    if ((cardCount = CardNumSearch(CARD_ID_CARNIVARAUS)) > 0) {
	        w += 3 * ROUNDDOWN(SU_INT / 10) * cardCount;

	        if (SU_INT >= 130) {
	            w += 50 * cardCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「ラウンドライダーカード」の、素ＩＮＴによる効果
	    //----------------------------------------------------------------
	    if ((cardCount = CardNumSearch(CARD_ID_ROUND_RIDER)) > 0) {
	        if (SU_INT >= 120) {
	            w += 30 * cardCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「自警団のスーツ」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_ZIKEIDANNNO_SUITS)) > 0) {
	        w += 10 * n_A_BODY_DEF_PLUS * itemCount;

	        if (n_A_BODY_DEF_PLUS >= 7) {
	            w += 20 * itemCount;
	        }

	        if (n_A_BODY_DEF_PLUS >= 9) {
	            w += 30 * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「ニーヴバレッタ　ニーヴ武器セット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_NIEVE_VALLETTA_NIEVE_ARMS)) > 0) {
	        w += 20 * n_A_Weapon_ATKplus * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「ニーヴバレッタ　ニーヴ武器セット」の、素ＩＮＴによる効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_NIEVE_VALLETTA_NIEVE_ARMS)) > 0) {
	        w += 20 * ROUNDDOWN(SU_INT / 10) * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「ジェミニ」の、精錬による効果
	    //----------------------------------------------------------------
	    cardCountHeadTop = CardNumSearch(CARD_ID_GEMINI, CARD_REGION_ID_HEAD_TOP_ANY);
	    if (cardCountHeadTop > 0) {
	        // 職業限定の効果
	        if (IsSameJobClass(JOB_ID_WANDERER)) {
	            w += 5 * n_A_HEAD_DEF_PLUS * cardCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「トンボがとまった猫じゃらし」の、精錬による効果
	    //----------------------------------------------------------------
	    itemCountRight = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
	    itemCountLeft = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
	    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
	        vartmp = 0;
	        vartmp += 2 * n_A_Weapon_ATKplus;
	        if (n_A_Weapon_ATKplus >= 7) vartmp += 15;
	        if (n_A_Weapon_ATKplus >= 8) vartmp += 30;
	        w += vartmp * itemCountRight;

	        vartmp = 0;
	        vartmp += 2 * n_A_Weapon2_ATKplus;
	        if (n_A_Weapon2_ATKplus >= 7) vartmp += 15;
	        if (n_A_Weapon2_ATKplus >= 8) vartmp += 30;
	        w += vartmp * itemCountLeft;
	    }

	    //----------------------------------------------------------------
	    // 「トンボがとまった妙なる猫じゃらし」の、精錬による効果
	    //----------------------------------------------------------------
	    itemCountRight = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_MYOUNARU_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
	    itemCountLeft = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_MYOUNARU_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
	    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
	        vartmp = 0;
	        vartmp += 4 * n_A_Weapon_ATKplus;
	        if (n_A_Weapon_ATKplus >= 7) vartmp += 30;
	        if (n_A_Weapon_ATKplus >= 8) vartmp += 40;
	        w += vartmp * itemCountRight;

	        vartmp = 0;
	        vartmp += 4 * n_A_Weapon2_ATKplus;
	        if (n_A_Weapon2_ATKplus >= 7) vartmp += 30;
	        if (n_A_Weapon2_ATKplus >= 8) vartmp += 40;
	        w += vartmp * itemCountLeft;
	    }

	    //----------------------------------------------------------------
	    // 「トンボがとまった神妙な猫じゃらし」の、精錬による効果
	    //----------------------------------------------------------------
	    itemCountRight = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_SHINMYOUNA_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
	    itemCountLeft = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_SHINMYOUNA_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
	    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
	        w += 5 * n_A_Weapon_ATKplus * itemCountRight;
	        w += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
	    }

	    //----------------------------------------------------------------
	    // 「トンボがとまった魔力の猫じゃらし」の、精錬による効果
	    //----------------------------------------------------------------
	    itemCountRight = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_MARYOKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
	    itemCountLeft = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_MARYOKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
	    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
	        w += 6 * n_A_Weapon_ATKplus * itemCountRight;
	        w += 6 * n_A_Weapon2_ATKplus * itemCountLeft;
	    }

	    //----------------------------------------------------------------
	    // 「ストロベリーハット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_STRAWBERRY_HAT)) > 0) {
	        w += 5 * n_A_HEAD_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「ドラムスーツ」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_DORAM_SUITS)) > 0) {
	        w += 5 * n_A_BODY_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「高級ドラムスーツ」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_KOKYU_DORAM_SUITS)) > 0) {
	        w += 10 * n_A_BODY_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「特選ドラムスーツ」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_TOKUSEN_DORAM_SUITS)) > 0) {
	        w += 15 * n_A_BODY_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「ドラムシューズ」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_DORAM_SHOES)) > 0) {
	        w += 5 * n_A_SHOES_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「高級ドラムシューズ」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_KOKYU_DORAM_SHOES)) > 0) {
	        w += 10 * n_A_SHOES_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「特選ドラムシューズ」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_TOKUSEN_DORAM_SHOES)) > 0) {
	        w += 15 * n_A_SHOES_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「アクエリアス」の、職業による効果
	    //----------------------------------------------------------------
	    if ((cardCount = CardNumSearch(CARD_ID_AQUARIUS, CARD_REGION_ID_HEAD_TOP)) > 0) {
	        // 職業限定の効果
	        if (IsSameJobClass(JOB_ID_WARLOCK)) {
	            w += 4 * n_A_HEAD_DEF_PLUS * cardCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「イリュージョンマフラー」の、ベースレベルによる強化
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_MUFFLER)) > 0) {
	        if (n_A_BaseLV >= 170) {
	            w += 20 * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「イリュージョンシューズ」の、ベースレベルによる強化
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_SHOES)) > 0) {
	        if (n_A_BaseLV >= 170) {
	            w += 50 * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「イリュージョン骸骨の指輪」の、ベースレベルによる効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_GAIKOTSUNO_YUBIWA)) > 0) {
	        if (n_A_BaseLV >= 170) {
	            w += 30 * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「星の眼帯　オークヒーローカードセット」の、素ＶＩＴによる効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_HOSHINO_GANTAI_ORC_HERO_CARD)) > 0) {
	        if (n_A_BaseLV <= 99) {
	            w += 10 * Math.floor(SU_VIT / 10) * itemCount;
	        } else {
	            w += 30 * Math.floor(SU_VIT / 10) * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「ホロウシューズ　ヴェルゼブブカードセット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_HOROW_SHOES_VERSEVV_CARD)) > 0) {
	        if (n_A_BaseLV <= 99) {
	            w += 5 * n_A_SHOES_DEF_PLUS * itemCount;
	        } else {
	            w += 15 * n_A_SHOES_DEF_PLUS * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「武侠靴　剣セット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_BUKYO_KUTSU_SWORD)) > 0) {
	        w += 25 * n_A_SHOES_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「血塗られた人形のドレス　セリーヌのリボンセット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_CHINURARETA_NINGYONO_DRESS_CELINENO_RIBBON)) > 0) {
	        w += 20 * n_A_BODY_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「ヘヴンリーオーダー」の、素ＬＵＫによる効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_HEAVENLY_ORDER)) > 0) {
	        w += 15 * Math.floor(SU_LUK / 18) * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「テュポーンの皮」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_TUPOONNO_KAWA)) > 0) {
	        if (n_A_SHOULDER_DEF_PLUS >= 8) {
	            w += 15 * Math.floor((SU_AGI + SU_VIT) / 20) * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「イリュージョンブーツ」の、ベースレベルによる強化
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_BOOTS)) > 0) {
	        if (n_A_BaseLV >= 170) {
	            w += 50 * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「リングオブジュピター」の、素ＬＵＫによる効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_RING_OF_JUPITER, EQUIP_REGION_ID_ACCESSARY_1)) > 0) {
	        w += 15 * Math.floor(SU_LUK / 10) * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「虹色のねこじゃらし　レインボウセット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_NIZIIRONO_NEKOZYARASHI_RAIN_BO)) > 0) {
	        w += 15 * n_A_HEAD_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「不死鳥の猫じゃらし　フレイムバードセット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_FUSHICHONO_NEKOZYARASHI_FLAME_BIRD)) > 0) {
	        w += 15 * n_A_HEAD_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「古のウータンシューターカード」の、素ＶＩＴによる効果
	    //----------------------------------------------------------------
	    if ((cardCount = CardNumSearch(CARD_ID_INISHIENO_WOOTANG_SHOOTER)) > 0) {
	        w += 3 * Math.floor(SU_VIT / 10) * cardCount;
	    }

	    //----------------------------------------------------------------
	    // 「古のウータンシューターカード」の、素ＬＵＫによる効果
	    //----------------------------------------------------------------
	    if ((cardCount = CardNumSearch(CARD_ID_INISHIENO_WOOTANG_SHOOTER)) > 0) {
	        w += 3 * Math.floor(SU_LUK / 10) * cardCount;
	    }

	    //----------------------------------------------------------------
	    // 「ディアボロスウィング　ローブセット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_DIAVOLOS_WING_DIAVOLOS_ROBE)) > 0) {
	        w += 15 * n_A_BODY_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「ディアボロスウィング　ブーツセット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_DIAVOLOS_WING_DIAVOLOS_BOOTS)) > 0) {
	        w += 20 * n_A_SHOES_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「宝瓶宮のスタッフ」の、ベースレベルによる効果
	    //----------------------------------------------------------------
	    itemCountRight = EquipNumSearch(ITEM_ID_HOBINKYUNO_STUFF, EQUIP_REGION_ID_ARMS);
	    itemCountLeft = EquipNumSearch(ITEM_ID_HOBINKYUNO_STUFF, EQUIP_REGION_ID_ARMS_LEFT);
	    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
	        w += 1 * n_A_BaseLV * itemCountRight;
	        w += 1 * n_A_BaseLV * itemCountLeft;
	    }

	    //----------------------------------------------------------------
	    // 「ふわふわタンポポシューズ」の、スキル習得による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_FUWAFUWA_TANPOPO_SHOES)) > 0) {
	        if (LearnedSkillSearch(SKILL_ID_DAICHINO_TAMASHI) >= 1) {
	            if (LearnedSkillSearch(SKILL_ID_NYAN_GRASS) >= 5) {
	                w += 50 * itemCount;
	            }
	        }
	    }

	    //----------------------------------------------------------------
	    // 「ふわふわタンポポシューズ」の、スキル習得による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_FUWAFUWA_TANPOPO_SHOES)) > 0) {
	        if (LearnedSkillSearch(SKILL_ID_DAICHINO_TAMASHI) >= 1) {
	            if (LearnedSkillSearch(SKILL_ID_MATATABINO_NEKKO) >= 5) {
	                w += 50 * itemCount;
	            }
	        }
	    }

	    //----------------------------------------------------------------
	    // 「エウロパローブ」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_EUROPA_ROBE)) > 0) {
	        if (n_A_BODY_DEF_PLUS >= 8) {
	            w += 10 * Math.floor((SU_VIT + SU_LUK) / 10) * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「磨羯宮のシーフボウ」の、ベースレベルによる効果
	    //----------------------------------------------------------------
	    itemCountRight = EquipNumSearch(ITEM_ID_MAKATSUKYUNO_THIEF_BOW, EQUIP_REGION_ID_ARMS);
	    itemCountLeft = EquipNumSearch(ITEM_ID_MAKATSUKYUNO_THIEF_BOW, EQUIP_REGION_ID_ARMS_LEFT);
	    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
	        w += 1 * n_A_BaseLV * itemCountRight;
	        w += 1 * n_A_BaseLV * itemCountLeft;
	    }

	    //----------------------------------------------------------------
	    // 「処女宮のディバインクロス」の、ベースレベルによる効果
	    //----------------------------------------------------------------
	    itemCountRight = EquipNumSearch(ITEM_ID_SHOZYOKYUNO_DEVINE_CROSS, EQUIP_REGION_ID_ARMS);
	    itemCountLeft = EquipNumSearch(ITEM_ID_SHOZYOKYUNO_DEVINE_CROSS, EQUIP_REGION_ID_ARMS_LEFT);
	    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
	        w += 1 * n_A_BaseLV * itemCountRight;
	        w += 1 * n_A_BaseLV * itemCountLeft;
	    }

	    //----------------------------------------------------------------
	    // 「双児宮のバイオリン」の、ベースレベルによる効果
	    //----------------------------------------------------------------
	    itemCountRight = EquipNumSearch(ITEM_ID_SOZIKYUNO_VIOLIN, EQUIP_REGION_ID_ARMS);
	    itemCountLeft = EquipNumSearch(ITEM_ID_SOZIKYUNO_VIOLIN, EQUIP_REGION_ID_ARMS_LEFT);
	    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
	        w += 1 * n_A_BaseLV * itemCountRight;
	        w += 1 * n_A_BaseLV * itemCountLeft;
	    }

	    //----------------------------------------------------------------
	    // 「双児宮のロープ」の、ベースレベルによる効果
	    //----------------------------------------------------------------
	    itemCountRight = EquipNumSearch(ITEM_ID_SOZIKYUNO_ROPE, EQUIP_REGION_ID_ARMS);
	    itemCountLeft = EquipNumSearch(ITEM_ID_SOZIKYUNO_ROPE, EQUIP_REGION_ID_ARMS_LEFT);
	    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
	        w += 1 * n_A_BaseLV * itemCountRight;
	        w += 1 * n_A_BaseLV * itemCountLeft;
	    }

	    //----------------------------------------------------------------
	    // 「宝瓶宮のスタッフ」の、ベースレベルによる効果
	    //----------------------------------------------------------------
	    itemCountRight = EquipNumSearch(ITEM_ID_SOGYOKYUNO_STUFF_OF_SOUL, EQUIP_REGION_ID_ARMS);
	    itemCountLeft = EquipNumSearch(ITEM_ID_SOGYOKYUNO_STUFF_OF_SOUL, EQUIP_REGION_ID_ARMS_LEFT);
	    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
	        w += 1 * n_A_BaseLV * itemCountRight;
	        w += 1 * n_A_BaseLV * itemCountLeft;
	    }

	    //----------------------------------------------------------------
	    // 「ガーディアンオブソウル」の、素ＩＮＴと素ＤＥＸによる効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_GUARDIAN_OF_SOUL)) > 0) {
	        w += 15 * Math.floor((SU_INT + SU_DEX) / 18) * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「覚醒火雷大神靴　封印された月夜花カード　セット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSE_HONOIKAZUCHINOOOKAMI_KUTSU_FUINSARETA_WORUYAFA_CARD)) > 0) {
	        if (n_A_BaseLV <= 99) {
	            w += 5 * n_A_SHOES_DEF_PLUS * itemCount;
	        } else {
	            w += 15 * n_A_SHOES_DEF_PLUS * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「火雷大神靴　封印された月夜花カード　セット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_HONOIKAZUCHINOOOKAMI_KUTSU_FUINSARETA_WORUYAFA_CARD)) > 0) {
	        if (n_A_BaseLV <= 99) {
	            w += 3 * n_A_SHOES_DEF_PLUS * itemCount;
	        } else {
	            w += 10 * n_A_SHOES_DEF_PLUS * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「黒無常帽　覚醒ローブセット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KUROMUZYO_BO_KAKUSEI_ROBE)) > 0) {
	        w += 7 * n_A_BODY_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「セブン-イレブンヘッドホン」の、ベースレベルによる効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_SEVEN_ELEVEN_HEADPHONE)) > 0) {
	        w += 1 * n_A_BaseLV * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「ランナウェー・アクセラレータ　T-MagicBoost」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_RUNAWAY_ACCELERATOR_T_MAGIC_BOOST)) > 0) {
	        w += 10 * n_A_HEAD_DEF_PLUS * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「下水クランプカード」の、素ＩＮＴによる効果
	    //----------------------------------------------------------------
	    if ((cardCount = CardNumSearch(CARD_ID_GESUI_CLAMP)) > 0) {
	        w += 3 * Math.floor(SU_INT / 10) * cardCount;
	    }

	    //----------------------------------------------------------------
	    // 「下水クランプカード」の、素ＡＧＩによる効果
	    //----------------------------------------------------------------
	    if ((cardCount = CardNumSearch(CARD_ID_GESUI_CLAMP)) > 0) {
	        w += 3 * Math.floor(SU_AGI / 10) * cardCount;
	    }

	    //----------------------------------------------------------------
	    // 「ブルーアリエスカード」の、素ＩＮＴによる効果
	    //----------------------------------------------------------------
	    if ((cardCount = CardNumSearch(CARD_ID_BLUE_ARIES)) > 0) {
	        w += 5 * Math.floor(SU_INT / 10) * cardCount;
	    }

	    //----------------------------------------------------------------
	    // 「浮遊するアーティファクト」の、ベースレベルによる効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_FUYUSURU_ARTIFACT)) > 0) {
	        w += 1 * n_A_BaseLV * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「インペリアルサイキックローブ」の、スキル習得による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_PSYCHIC_ROBE)) > 0) {
	        if (LearnedSkillSearch(SKILL_ID_VACUUM_EXTREME) >= 5) {
	            w += 1 * Math.floor(n_A_BaseLV / 3) * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「グレースサイキックローブ」の、スキル習得による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_PSYCHIC_ROBE)) > 0) {
	        if (LearnedSkillSearch(SKILL_ID_VACUUM_EXTREME) >= 5) {
	            w += 1 * n_A_BaseLV * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「インペリアルパニッシュメントローブ」の、スキル習得による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_IMPERIAL_PUNISHMENT_ROBE)) > 0) {
	        if (LearnedSkillSearch(SKILL_ID_RADIUS) >= 3) {
	            w += 1 * Math.floor(n_A_BaseLV / 3) * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「グレースパニッシュメントローブ」の、スキル習得による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_GRACE_PUNISHMENT_ROBE)) > 0) {
	        if (LearnedSkillSearch(SKILL_ID_RADIUS) >= 3) {
	            w += 1 * n_A_BaseLV * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「覚醒ホロウシューズ　ヴェルゼブブカードセット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSE_HOROW_SHOES_VERSEVV_CARD)) > 0) {
	        if (n_A_BaseLV <= 99) {
	            w += 5 * n_A_SHOES_DEF_PLUS * itemCount;
	        } else {
	            w += 15 * n_A_SHOES_DEF_PLUS * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「覚醒ホロウシューズ　封印されたヴェルゼブブカードセット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSE_HOROW_SHOES_FUINSARETA_VERSEVV_CARD)) > 0) {

	        // 重複セットは発動しない
	        if (EquipNumSearch(ITEM_SET_ID_KAKUSE_HOROW_SHOES_VERSEVV_CARD_FUINSARETA_VERSEVV_CARD) == 0) {
	            if (n_A_BaseLV <= 99) {
	                w += 5 * n_A_SHOES_DEF_PLUS * itemCount;
	            } else {
	                w += 15 * n_A_SHOES_DEF_PLUS * itemCount;
	            }
	        }
	    }

	    //----------------------------------------------------------------
	    // 「星の眼帯　封印されたオークヒーローカードセット」の、素ＶＩＴによる効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_HOSHINO_GANTAI_FUINSARETA_ORC_HERO_CARD)) > 0) {
	        if (n_A_BaseLV <= 99) {
	            w += 3 * Math.floor(SU_VIT / 10) * itemCount;
	        } else {
	            w += 10 * Math.floor(SU_VIT / 10) * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「ホロウシューズ　封印されたヴェルゼブブカードセット」の、精錬による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_SET_ID_HOROW_SHOES_FUINSARETA_VERSEVV_CARD)) > 0) {
	        if (n_A_BaseLV <= 99) {
	            w += 2 * n_A_SHOES_DEF_PLUS * itemCount;
	        } else {
	            w += 5 * n_A_SHOES_DEF_PLUS * itemCount;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「フォー・オブ・ア・カインド」の、スキル習得による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_FOUR_OF_A_KIND)) > 0) {
	        w += 50 * LearnedSkillSearch(SKILL_ID_RADIUS) * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「エレメンタルポゼッション」の、スキル習得による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_ELEMENTAL_POSSESSION)) > 0) {
	        w += 15 * LearnedSkillSearch(SKILL_ID_SUMMON_AGNI) * itemCount;
	        w += 15 * LearnedSkillSearch(SKILL_ID_SUMMON_AQUA) * itemCount;
	        w += 15 * LearnedSkillSearch(SKILL_ID_SUMMON_VENTOS) * itemCount;
	        w += 15 * LearnedSkillSearch(SKILL_ID_SUMMON_TERA) * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「ラウドパーク」の、スキル習得による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_LOUD_PARK)) > 0) {
	        w += 30 * LearnedSkillSearch(SKILL_ID_FRIGNO_UTA) * itemCount;
	    }

	    //----------------------------------------------------------------
	    // 「アメイジング・グレイス」の、スキル習得による効果
	    //----------------------------------------------------------------
	    if ((itemCount = EquipNumSearch(ITEM_ID_AMAZING_GRACE)) > 0) {
	        w += 15 * LearnedSkillSearch(SKILL_ID_ORATIO) * itemCount;
	    }

	    /** 三次職支援設定「月明かりのセレナーデ」の装備Matk + 効果 */
		if ((bufLv = g_confDataSanzi[CCharaConfSanzi.CONF_ID_MOONLIT_SERENADE]) > 0) {
			w += -20 + 50 * bufLv;
			// 提供された情報に合わせてありますが風車と同じでLvに依らず lesson * 2 が正しいかもしれない
			const lesson = g_confDataSanzi[CCharaConfSanzi.CONF_ID_LESSON];
			if (lesson === 5) {
				w += lesson * 2;
			} else {
				w += lesson;
			}
		}

	    //----------------------------------------------------------------
	    // 「アークビショップ　オーディンの力」の、効果
	    //----------------------------------------------------------------
	    if ((bufLv = g_confDataSanzi[CCharaConfSanzi.CONF_ID_ODINNO_CHIKARA]) > 0) {

	        // 特定の戦闘エリアでの補正
	        switch (n_B_TAISEI[MOB_CONF_PLAYER_ID_SENTO_AREA]) {

	            case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_COLOSSEUM:
	                w += 100 + 100 * bufLv;
	                break;

	            default:
	                w += 40 + 30 * bufLv;
	                break;

	        }
	    }

	    //----------------------------------------------------------------
	    // 「影狼・朧　十六夜」の、効果
	    //----------------------------------------------------------------
	    w += ROUNDDOWN(n_A_JobLV / 2) * UsedSkillSearch(SKILL_ID_IZAYOI);

	    //----------------------------------------------------------------
	    // 「影狼・朧　幻術-残月-」の、効果
	    //----------------------------------------------------------------
	    if (UsedSkillSearch(SKILL_ID_GENZYUTSU_ZANGETSU)) {
	        if ((UsedSkillSearch(SKILL_ID_HPSPCONF_FOR_GENZYUTSU_ZANGETSU) == 0) ||
	            (UsedSkillSearch(SKILL_ID_HPSPCONF_FOR_GENZYUTSU_ZANGETSU) == 2)) {
	            w += 20 * UsedSkillSearch(SKILL_ID_GENZYUTSU_ZANGETSU) + ROUNDDOWN(n_A_BaseLV / 3);
	        } else {
	            w -= 30 * UsedSkillSearch(SKILL_ID_GENZYUTSU_ZANGETSU) + ROUNDDOWN(n_A_BaseLV / 3);
	        }
	    }

	    if (UsedSkillSearch(SKILL_ID_SERE_MODE) == 1) {
	        switch (UsedSkillSearch(SKILL_ID_SERE)) {
	            case 4:
	                w += 40;
	                break;
	            case 5:
	                w += 80;
	                break;
	            case 6:
	                w += 120;
	                break;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「ソウルリーパー　妖精の魂」の、効果
	    //----------------------------------------------------------------
	    if ((bufLv = g_confDataSanzi[CCharaConfSanzi.CONF_ID_YOSENO_TAMASHI]) > 0) {
	        w += 50;
	    }

	    //----------------------------------------------------------------
	    // 「三次職支援　チャタリング/ミャウミャウ」の、効果
	    //----------------------------------------------------------------
	    if ((bufLv = g_confDataSanzi[CCharaConfSanzi.CONF_ID_CHATTERING]) > 0) {

	        // 特定の戦闘エリアでの補正
	        switch (n_B_TAISEI[MOB_CONF_PLAYER_ID_SENTO_AREA]) {

	            case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_COLOSSEUM:
	                w += 50 + 50 * bufLv;
	                break;

	            default:
	                switch (bufLv) {
	                    case 1:
	                        w += 30;
	                        break;
	                    case 2:
	                        w += 50;
	                        break;
	                    case 3:
	                        w += 70;
	                        break;
	                    case 4:
	                        w += 100;
	                        break;
	                    case 5:
	                        w += 150;
	                        break;
	                }
	                break;

	        }
	    }

	    //----------------------------------------------------------------
	    // 「サモナー　大地の魂効果(ﾏﾀﾀﾋﾞの根っこ使用後のMATK＋)」の、効果
	    //----------------------------------------------------------------
	    if (Math.max(LearnedSkillSearch(SKILL_ID_DAICHINO_TAMASHI), UsedSkillSearch(SKILL_ID_DAICHINO_TAMASHI)) > 0) {
	        if ((sklLv = UsedSkillSearch(SKILL_ID_DAICHINO_TAMASHI_KOKA_MATATABINO_NEKKO)) > 0) {
	            w += 1 * n_A_BaseLV;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「サモナー　大地の魂効果(ニャングラス使用後のMATK＋)」の、効果
	    //----------------------------------------------------------------
	    if (Math.max(LearnedSkillSearch(SKILL_ID_DAICHINO_TAMASHI), UsedSkillSearch(SKILL_ID_DAICHINO_TAMASHI)) > 0) {
	        if ((sklLv = UsedSkillSearch(SKILL_ID_DAICHINO_TAMASHI_KOKA_NYAN_GRASS)) > 0) {
	            w += 1 * n_A_BaseLV;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「スーパーノービス＋　トランセンデンス」の、効果
	    //----------------------------------------------------------------
	    if ((sklLv = Math.max(LearnedSkillSearch(SKILL_ID_TRANSCENDENCE), UsedSkillSearch(SKILL_ID_TRANSCENDENCE))) > 0) {
	        w += 15 * sklLv;

	        if (sklLv >= 5) {
	            w += 25;
	        }
	    }

	    //----------------------------------------------------------------
	    // 「ソウルリーパー　ソウルエナジーの個数」の、効果
	    //----------------------------------------------------------------
	    if (n_A_ActiveSkill != SKILL_ID_SHIRYO_ZYOKA) {
	        // 死霊浄化はソウルエナジー全消費後のMATKを基準にダメージ計算する必要があるため除外する
	        w += 3 * UsedSkillSearch(SKILL_ID_COUNT_OF_SOUL_ENERGY);
	    }

	    if (TimeItemNumSearch(59)) w += 5 * Math.floor(n_A_SHOULDER_DEF_PLUS / 3);
	    if (TimeItemNumSearch(85)) w += 7 * n_A_BODY_DEF_PLUS;
	    if (n_A_PassSkill7[49]) w += 30;
	    if (n_A_PassSkill7[51]) w += 25;
	    if (TimeItemNumSearch(79)) w += 24;
	    else if (n_A_PassSkill7[10]) w += 20;
	    else if (n_A_PassSkill7[2]) w += 10;
	    else if (n_A_PassSkill7[26]) w += 5;
	    if (0 < n_A_PassSkill7[43] && n_A_PassSkill7[43] <= 50) w += n_A_PassSkill7[43];

	    //----------------------------------------------------------------
	    // 「性能カスタマイズ」の、効果
	    //----------------------------------------------------------------
	    confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_MATK_PLUS);
	    if (confval != 0) {
	        w += confval;
	    }

	    // TODO: 四次対応
	    for (idx = ITEM_SP_MATK_PLUS_TYPE_NOT_WEAPON; idx <= ITEM_SP_MATK_PLUS_TYPE_NOT_WEAPON; idx++) {
	        w = ApplySpecModify(idx, w);
	    }

	    n_tok[ITEM_SP_MATK_PLUS_TYPE_NOT_WEAPON] += w;

	    // 拡張表示用にデータを保存
	    CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_MATK_PLUS_TYPE_NOT_WEAPON, n_tok[ITEM_SP_MATK_PLUS_TYPE_NOT_WEAPON]);

	    w = Math.floor(n_A_INT / 7);
	    //		statusMatk = n_A_INT + Math.floor((w * w + n_A_LUK) / 3 + n_A_DEX / 5);
	    statusMatk = n_A_INT + Math.floor((w * w * 5 + n_A_DEX * 3 + n_A_LUK * 5) / 15);
	    let wLEFT = 0;
	    if (n_Nitou) wLEFT = n_A_Weapon2LV_seirenATK;
	    weaponMatk = n_tok[ITEM_SP_MATK_PLUS_TYPE_WEAPON] + n_A_WeaponLV_seirenATK + wLEFT;

	    //----------------------------------------------------------------
	    // 「性能カスタマイズ」の、効果
	    //----------------------------------------------------------------
	    confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_WEAPON_MATK);
	    if (confval != 0) {
	        weaponMatk = confval * 5 + n_A_WeaponLV_seirenATK + wLEFT;
	    }

	    if (n_A_WeaponType == 10 || (17 <= n_A_WeaponType && n_A_WeaponType <= 21)) weaponMatk -= n_A_WeaponLV_seirenATK;
	    if (EquipNumSearch(897) && (GetHigherJobSeriesID(n_A_JOB) == 14 || GetLowerJobSeriesID(n_A_JOB) == 44)) weaponMatk += 90 * EquipNumSearch(897);

	    //----------------------------------------------------------------
	    // 計算した結果をキャラクターデータに保存
	    //----------------------------------------------------------------
	    charaData[CHARA_DATA_INDEX_STATUS_MATK] = statusMatk;
	    charaData[CHARA_DATA_INDEX_WEAPON_MATK] = weaponMatk;

	    n_A_MATK = [0, 0, 0];

	    if (charaData[CHARA_DATA_INDEX_WEAPON_MATK] >= 1) {
	        var wPENA = Math.floor(charaData[CHARA_DATA_INDEX_WEAPON_MATK] * 2 / 3) - Math.floor(Math.floor(n_A_INT / 5) * Math.floor(n_A_INT / 5) / n_A_WeaponLV);
	        if (wPENA < 0) wPENA = 0;
	        n_A_MATK[0] = Math.floor((charaData[CHARA_DATA_INDEX_WEAPON_MATK] * 5 + n_A_DEX * (n_A_WeaponLV * 2 + 12)) / 15) - wPENA;
	        n_A_MATK[2] = Math.floor(charaData[CHARA_DATA_INDEX_WEAPON_MATK] * (100 + 10 * n_A_WeaponLV) / 100) - wPENA;
	        if (n_A_MATK[0] > n_A_MATK[2]) n_A_MATK[0] = n_A_MATK[2];

	        // リコグナイズドスペル効果
	        if (UsedSkillSearch(SKILL_ID_RECOGNIZED_SPELL)) {
	            n_A_MATK[0] = n_A_MATK[1] = n_A_MATK[2];
	        } else if (TimeItemNumSearch(TIME_ITEM_ID_CELINENO_BROACH_AKURYONO_ITONO_TEBUKURO)) {
	            n_A_MATK[0] = n_A_MATK[1] = n_A_MATK[2];
	        }

	        n_A_MATK[0] += n_A_WeaponLV_Minplus;
	        n_A_MATK[2] += n_A_WeaponLV_Maxplus;
	        if (n_A_WeaponType == 10 || (17 <= n_A_WeaponType && n_A_WeaponType <= 21)) {
	            n_A_MATK[0] -= n_A_WeaponLV_Minplus;
	            n_A_MATK[2] -= n_A_WeaponLV_Maxplus;
	        }
	        if (n_A_MATK[0] < 0) n_A_MATK[0] = 0;
	    }

	    // 特性ステータス対応
	    ApplySpecStatusModifyMATK(charaData, n_tok);

	    n_A_MATK[0] += charaData[CHARA_DATA_INDEX_STATUS_MATK];
	    n_A_MATK[2] += charaData[CHARA_DATA_INDEX_STATUS_MATK];
	    BK_n_A_MATK = [0, 0, 0];
	    BK_n_A_MATK[0] = n_A_MATK[0];
	    BK_n_A_MATK[2] = n_A_MATK[2];

	    if (!(533 <= n_A_ActiveSkill && n_A_ActiveSkill <= 536)) {
	        if (TimeItemNumSearch(TIME_ITEM_ID_IORNE_STUFF) == 0) {
	            // 魔法力増幅効果
	            if (UsedSkillSearch(SKILL_ID_MAHORYOKU_ZOFUKU)) {
	                n_A_MATK[0] = Math.floor(n_A_MATK[0] * (1 + 0.05 * UsedSkillSearch(SKILL_ID_MAHORYOKU_ZOFUKU)));
	                n_A_MATK[2] = Math.floor(n_A_MATK[2] * (1 + 0.05 * UsedSkillSearch(SKILL_ID_MAHORYOKU_ZOFUKU)));
	            } else {
	                if (TimeItemNumSearch(TIME_ITEM_ID_OWLDUKENO_SILKHAT_AMPLV6)) {
	                    n_A_MATK[0] = Math.floor(n_A_MATK[0] * 1.3);
	                    n_A_MATK[2] = Math.floor(n_A_MATK[2] * 1.3);
	                } else if (TimeItemNumSearch(TIME_ITEM_ID_OWLDUKENO_SILKHAT_AMPLV4)) {
	                    n_A_MATK[0] = Math.floor(n_A_MATK[0] * 1.2);
	                    n_A_MATK[2] = Math.floor(n_A_MATK[2] * 1.2);
	                } else if (TimeItemNumSearch(TIME_ITEM_ID_OWLDUKENO_SILKHAT_AMPLV2)) {
	                    n_A_MATK[0] = Math.floor(n_A_MATK[0] * 1.1);
	                    n_A_MATK[2] = Math.floor(n_A_MATK[2] * 1.1);
	                }
	            }
	        }
	    }

	    n_Heal_MATK[0] = n_A_MATK[0];
	    n_Heal_MATK[2] = n_A_MATK[2];
	    n_Heal_MATK[1] = Math.floor((n_A_MATK[0] + n_A_MATK[2]) / 2);
	    n_A_MATK[0] += n_tok[ITEM_SP_MATK_PLUS_TYPE_NOT_WEAPON];
	    n_A_MATK[2] += n_tok[ITEM_SP_MATK_PLUS_TYPE_NOT_WEAPON];
	    BK_n_A_MATK[0] += n_tok[ITEM_SP_MATK_PLUS_TYPE_NOT_WEAPON];
	    BK_n_A_MATK[2] += n_tok[ITEM_SP_MATK_PLUS_TYPE_NOT_WEAPON];
	    n_A_MATK[1] = Math.floor((n_A_MATK[0] + n_A_MATK[2]) / 2);
	    BK_n_A_MATK[1] = Math.floor((BK_n_A_MATK[0] + BK_n_A_MATK[2]) / 2);
	}

//================================================================================================================================
//================================================================================================================================
//====
//==== 魔法攻撃で与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		w = 0;
		if(n_A_Weapon_ATKplus >= 9 && EquipNumSearch(642)) w += 3;
		if(EquipNumSearch(646)) w += Math.floor(n_A_Weapon_ATKplus / 2);
		if(EquipNumSearch(737)) w += n_A_Weapon_ATKplus;
		if(EquipNumSearch(1042)) w += n_A_Weapon_ATKplus;
		if(EquipNumSearch(1029) && n_A_HEAD_DEF_PLUS >= 6) w += n_A_HEAD_DEF_PLUS - 5;

		if(EquipNumSearch(1083)){
			w += n_A_Weapon_ATKplus;
		}
		if(n_A_Weapon_ATKplus >= 9 && EquipNumSearch(1084)) w += 5;
		if(n_A_Weapon_ATKplus >= 9 && EquipNumSearch(1095)) w += 5;
		if(SU_INT >= 90 && EquipNumSearch(1403)){
			w += 3;
			if(SU_INT >= 120) w += 2;
		}
		if(GetLowerJobSeriesID(n_A_JOB)==5 && CardNumSearch(454)) w +=3;
		if(n_A_HEAD_DEF_PLUS >= 9 && n_A_card[CARD_REGION_ID_HEAD_TOP]==177) w += 2;
		if(n_A_Equip[EQUIP_REGION_ID_ARMS]==484 && SU_INT >= 70) w += 5;
		if(EquipNumSearch(1173)) w += Math.floor(n_A_Weapon_ATKplus / 2);
		if(GetHigherJobSeriesID(n_A_JOB)==14) w += 10 * CardNumSearch(479);
		if(n_A_HEAD_DEF_PLUS >= 5 && EquipNumSearch(1361)){
			w += 3;
			if(n_A_HEAD_DEF_PLUS >= 7) w += 3;
		}
		if(EquipNumSearch(1411)) w += Math.floor(n_A_SHOES_DEF_PLUS / 2);
		if(n_A_HEAD_DEF_PLUS >= 5 && EquipNumSearch(1451)){
			w += 1;
			if(n_A_HEAD_DEF_PLUS >= 7) w += 2;
		}
		if(n_A_BODY_DEF_PLUS >= 7 && n_A_SHOULDER_DEF_PLUS >= 7 && n_A_SHOES_DEF_PLUS >= 7 && EquipNumSearch(1596)) w += 5;
		if(EquipNumSearch(1695)) if(GetLowerJobSeriesID(n_A_JOB)==3 || GetLowerJobSeriesID(n_A_JOB)==5) w += 8;
		if(SU_INT >= 110 && EquipNumSearch(1947)) w += 1 * EquipNumSearch(1947);
		if(SU_INT >= 99 && EquipNumSearch(1976)){
			w += 2;
			if(SU_INT >= 120) w += 3;
		}

		// アイオーンスタッフ特殊効果
		if(TimeItemNumSearch(84)) {
			w += 8 * LearnedSkillSearch(SKILL_ID_RADIUS);
		}

		if(EquipNumSearch(2442)) w += ROUNDDOWN((n_A_SHOES_DEF_PLUS + n_A_HEAD_DEF_PLUS) / 2);
		if(EquipNumSearch(2462)) w += n_A_HEAD_DEF_PLUS;

		//----------------------------------------------------------------
		// 「戦死者のマント」の、純粋なＩＮＴが１３０の時
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_SENSHISHANO_MANT)){
			if (SU_INT >= 130) {
				if (EquipNumSearchFurubitaSet() > 0) {
					w += 10;
				} else {
					w += 5;
				}
			}
		}

		//----------------------------------------------------------------
		// 「魔法石の恩恵」の、装備効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_MAHOSEKINO_ONKE)) {
			if (n_A_HEAD_DEF_PLUS >= 5) w += 3;
			if (n_A_HEAD_DEF_PLUS >= 7) w += 5;
			if (n_A_HEAD_DEF_PLUS >= 9) w += 7;
		}

		//----------------------------------------------------------------
		// 「ポロロッカシューズ」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_POROROCA_SHOES)) {
			if (n_A_SHOES_DEF_PLUS >= 5) w += 3;
			if (n_A_SHOES_DEF_PLUS >= 7) w += 5;
		}

		//----------------------------------------------------------------
		// 「おしゃべりオウム」の、効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_OSHABERI_OUMU)) {
			w += ROUNDDOWN(n_A_BaseLV / 50);
		}

		//----------------------------------------------------------------
		// 「古王の王冠」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_KOONO_OKAN)) {
			if (n_A_HEAD_DEF_PLUS >= 6) {
				w += (n_A_HEAD_DEF_PLUS - 5);
			}
		}

		//----------------------------------------------------------------
		// 「サバイバルオーブ　ロッド＆マントセット」の、装備効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_SURVIVAL_ORB_SURVIVAL_ROD_DEX_SURVIVAL_MANT)
			|| EquipNumSearch(ITEM_SET_ID_SURVIVAL_ORB_SURVIVAL_ROD_INT_SURVIVAL_MANT)) {
			if (n_A_Weapon_ATKplus >= 5) w += 2;
			if (n_A_Weapon_ATKplus >= 7) w += 2;
		}

		//----------------------------------------------------------------
		// 「裁きの靴」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_SABAKINO_KUTSU)) {
			if (n_A_SHOES_DEF_PLUS >= 5) w += 3;
			if (n_A_SHOES_DEF_PLUS >= 7) w += 5;
		}

		//----------------------------------------------------------------
		// 「大神官の手袋」の、純粋なＩＮＴが１１０の時
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_DAISHINKANNO_TEBUKURO)){
			if (SU_INT >= 110) {
				w += 5 * EquipNumSearch(ITEM_ID_DAISHINKANNO_TEBUKURO);
			}
		}

		//----------------------------------------------------------------
		// 「ダークハンド」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_DARK_HAND)) > 0) {
			w += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「魔女の祭祀帽」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_MAZYONO_SAISHIBO)) > 0) {
			w += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「栄光の証」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_EIKONO_AKASHI)) > 0) {
			if (n_A_BaseLV >= 150) {
				w += 2 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ディーヴァワンド」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_DIVA_WAND, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_DIVA_WAND, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ディーヴァスタッフ」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_DIVA_STUFF, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_DIVA_STUFF, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ディーヴァブック」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_DIVA_BOOK, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_DIVA_BOOK, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ミラージュワンド」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_MIRRORAGE_WAND, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_MIRRORAGE_WAND, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ミラージュスタッフ」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_MIRRORAGE_STUFF, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_MIRRORAGE_STUFF, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ミラージュブック」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_MIRRORAGE_BOOK, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_MIRRORAGE_BOOK, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「悪魔崇拝者の靴」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AKUMASUHAISHANO_KUTSU)) {
			if (n_A_SHOES_DEF_PLUS >= 5) w += 3;
			if (n_A_SHOES_DEF_PLUS >= 7) w += 5;
		}

		//----------------------------------------------------------------
		// 「エーギルリング　ヘルムセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_AEGIR_RING_AEGIR_HELM)) > 0) {
			if (n_A_HEAD_DEF_PLUS >= 7) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「降霊術士の外套」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_KOREIZYUTSUSHINO_GAITO)) {
			if (n_A_SHOULDER_DEF_PLUS >= 7) w += 5;
			if (n_A_SHOULDER_DEF_PLUS >= 9) w += 5;
		}

		//----------------------------------------------------------------
		// 「ルドの黒い羽」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_RUDONO_KUROI_HANE)) {
			w += 3 * ROUNDDOWN(n_A_SHOULDER_DEF_PLUS / 2);
		}

		//----------------------------------------------------------------
		// 「エンジェリングスーツ」の、過剰精錬よる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ANGELING_SUITS)) > 0) {
			if (n_A_BODY_DEF_PLUS >= 7) {
				w += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴクレイモア」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_CRAYMORE)) > 0) {
			if (n_A_BaseLV >= 175) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴグレイヴ」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_GRAVE)) > 0) {
			if (n_A_BaseLV >= 175) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴジャマダハル」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_ZYAMADAHAR)) > 0) {
			if (n_A_BaseLV >= 175) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴウィザードスタッフ」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_WIZARD_STUFF)) > 0) {
			if (n_A_BaseLV >= 175) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴアークワンド」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_ARCWAND)) > 0) {
			if (n_A_BaseLV >= 175) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴホーリーステッキ」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_HOLYSTICK)) > 0) {
			if (n_A_BaseLV >= 175) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴディバインクロス」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_DIVINE_CROSS)) > 0) {
			if (n_A_BaseLV >= 175) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴギロチン」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_GUILLOTINE)) > 0) {
			if (n_A_BaseLV >= 175) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴバスター」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_BASTER)) > 0) {
			if (n_A_BaseLV >= 175) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴ風魔手裏剣」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_FUMA_SHURIKEN)) > 0) {
			if (n_A_BaseLV >= 175) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴシーフボウ」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_THIEF_BOW)) > 0) {
			if (n_A_BaseLV >= 175) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴハンターボウ」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_HUNTER_BOW)) > 0) {
			if (n_A_BaseLV >= 175) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴクロスボウ」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_CROSS_BOW)) > 0) {
			if (n_A_BaseLV >= 175) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴライフル」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_RIFLE)) > 0) {
			if (n_A_BaseLV >= 175) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「襲撃者のローブ」の、追加発動による効果
		//----------------------------------------------------------------
		if ((bufLv = TimeItemNumSearch(137)) > 0) {
			w += 1 * n_A_BODY_DEF_PLUS * bufLv;
		}

		//----------------------------------------------------------------
		// 「抹消者のローブ」の、精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_MASSHOSHANO_ROBE)) {
			w += 2 * n_A_BODY_DEF_PLUS;
		}

		//----------------------------------------------------------------
		// 「英雄の指輪　達人の槌セット」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_EIYUNO_YUBIWA_TATSUZINNO_TSUCHI_YUSHANO_KUTSU)) > 0) {
			if (n_A_Weapon_ATKplus >= 7) {
				w += 5 * itemCount;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				w += 15 * itemCount;
			}
		}
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_EIYUNO_YUBIWA_TATSUZINNO_TSUCHI_S2_YUSHANO_KUTSU)) > 0) {
			if (n_A_Weapon_ATKplus >= 7) {
				w += 5 * itemCount;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				w += 15 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「サバイバルシューズ」の、精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_SURVIVAL_SHOES)) {
			if (n_A_SHOES_DEF_PLUS >= 5) w += 3;
			if (n_A_SHOES_DEF_PLUS >= 7) w += 5;
		}

		//----------------------------------------------------------------
		// 「古代龍の宝冠」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KODAIRYUNO_HOKAN)) > 0) {
			w += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「トンボがとまった神妙な猫じゃらし」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_SHINMYOUNA_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_SHINMYOUNA_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 5;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 10;
			w += vartmp * itemCountRight;

			vartmp = 0;
			vartmp += 2 * n_A_Weapon2_ATKplus;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 5;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 10;
			w += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「トンボがとまった魔力の猫じゃらし」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_MARYOKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_MARYOKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 10;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 20;
			w += vartmp * itemCountRight;

			vartmp = 0;
			vartmp += 2 * n_A_Weapon2_ATKplus;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 10;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 20;
			w += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ディーヴァフォックステイル」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_DIVA_FOXTAIL, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_DIVA_FOXTAIL, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ミラージュフォックステイル」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_MIRRORAGE_FOXTAIL, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_MIRRORAGE_FOXTAIL, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 4;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 4;
			w += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「魔力の草のネックレス」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_MARYOKUNO_KUSANO_NECKLACE)) > 0) {

			sklLv = 0;

			sklLv += LearnedSkillSearch(SKILL_ID_MATATABI_LANCE);
			sklLv += LearnedSkillSearch(SKILL_ID_MATATABINO_NEKKO);
			sklLv += LearnedSkillSearch(SKILL_ID_INUHAKKA_METEOR);
			sklLv += LearnedSkillSearch(SKILL_ID_INUHAKKA_SHOWER);
			sklLv += LearnedSkillSearch(SKILL_ID_CHATTERING);
			sklLv += LearnedSkillSearch(SKILL_ID_MYAUMYAU);
			sklLv += LearnedSkillSearch(SKILL_ID_NYAN_GRASS);

			w += 2 * ROUNDDOWN(sklLv / 5) * itemCount;
		}

		//----------------------------------------------------------------
		// 「吸血鬼のしもべ」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KYUKETSUKINO_SHIMOBE)) > 0) {
			if (n_A_BaseLV >= 170) {
				w += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「降霊術士のドレス　降霊術士の外套セット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KORE_ZYUTSUSHINO_DRESS_KORE_ZYUTSUSHINO_GAITO)) > 0) {
			w += 2 * n_A_SHOULDER_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「不思議なハト　ヴァルハラアイドルセット」の、素ＳＴＲによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FUSHIGINA_HATO_WALHALLA_IDOL)) > 0) {
			w += 5 * ROUNDDOWN(SU_STR / 18) * itemCount;
		}

		//----------------------------------------------------------------
		// 「イリュージョンサバイバルセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_ILLUSION_SURVIVAL_STUFF_ILLUSION_SURVIVAL_MANT)) > 0) {
			w += 3 * n_A_Weapon_ATKplus * itemCount;
		}

		//----------------------------------------------------------------
		// 「虹色のマフラー」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIZIIRONO_MUFFLER)) > 0) {
			w += 4 * LearnedSkillSearch(SKILL_ID_MELANCHOLY) * itemCount;
		}

		//----------------------------------------------------------------
		// 「降霊術士の手鏡　ドレスセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOREZYUTSUSHINO_TEKAGAMI_DRESS)) > 0) {
			if (n_A_SHIELD_DEF_PLUS >= 8) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「降霊術士の手鏡　外套セット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOREZYUTSUSHINO_TEKAGAMI_GAITO)) > 0) {
			if (n_A_SHIELD_DEF_PLUS >= 8) {
				w += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「魔眼のアムダライスカード」の、精錬による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_MAGANNO_AMDARAIS)) > 0) {
			w += n_A_BODY_DEF_PLUS * cardCount;
		}

		//----------------------------------------------------------------
		// 「パワフルアムダライスカード」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_POWERFUL_AMDARAIS)) > 0) {
			w += 1 * ROUNDDOWN(n_A_BaseLV / 20) * cardCount;
		}

		//----------------------------------------------------------------
		// 「エンチャント　死のニーヴ(知力)」の、精錬による効果
		//----------------------------------------------------------------
		cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_CHIRYOKU, CARD_REGION_ID_ARMS_RIGHT_ANY);
		cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_CHIRYOKU, CARD_REGION_ID_ARMS_LEFT_ANY);
		cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_CHIRYOKU, CARD_REGION_ID_HEAD_TOP_ANY);
		cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_CHIRYOKU, CARD_REGION_ID_SHIELD_ANY);
		cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_CHIRYOKU, CARD_REGION_ID_BODY_ANY);
		cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_CHIRYOKU, CARD_REGION_ID_SHOULDER_ANY);
		cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_CHIRYOKU, CARD_REGION_ID_SHOES_ANY);
		if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
			+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

			// 右手武器へのエンチャント
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 1;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 1;
			w += vartmp * cardCountRight

			// 左手武器へのエンチャント
			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 1;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 1;
			w += vartmp * cardCountLeft

			// 頭防具へのエンチャント
			vartmp = 0;
			if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 1;
			w += vartmp * cardCountHeadTop

			// 盾防具へのエンチャント
			vartmp = 0;
			if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 1;
			w += vartmp * cardCountShield

			// 体防具へのエンチャント
			vartmp = 0;
			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 1;
			w += vartmp * cardCountBody

			// 肩防具へのエンチャント
			vartmp = 0;
			if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 1;
			w += vartmp * cardCountShoulder

			// 靴防具へのエンチャント
			vartmp = 0;
			if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 1;
			w += vartmp * cardCountShoes

			// アクセサリへのエンチャント
			// 精錬できないので処理不要
		}

		//----------------------------------------------------------------
		// 「ウォーロックカトリーヌ(MVP)カード」の、職業による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_WARLOCK_CATHERINE_MVP)) > 0) {
			if (IsSameJobClass(JOB_ID_WARLOCK)) {
				w += 15 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「シャドウチェイサーガーティ(MVP)カード」の、職業による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_SHADOW_CHASER_GARTY_MVP)) > 0) {
			if (IsSameJobClass(JOB_ID_SHADOWCHASER)) {
				w += 15 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「ソーサラーセリア(MVP)カード」の、職業による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_SORCERER_CERIA_MVP)) > 0) {
			if (IsSameJobClass(JOB_ID_SORCERER)) {
				w += 10 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「トップサイドライダーカード」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (cardcount = CardNumSearch(CARD_ID_TOP_SIDE_RIDER)) {
			if (n_A_Weapon_ATKplus >= 10) {
				w += 5 * cardcount;
			}
		}

		//----------------------------------------------------------------
		// 「エンチャント　増幅1」の、精錬による効果
		//----------------------------------------------------------------
		cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_1, CARD_REGION_ID_ARMS_RIGHT_ANY);
		cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_1, CARD_REGION_ID_ARMS_LEFT_ANY);
		cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_1, CARD_REGION_ID_HEAD_TOP_ANY);
		cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_1, CARD_REGION_ID_SHIELD_ANY);
		cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_1, CARD_REGION_ID_BODY_ANY);
		cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_1, CARD_REGION_ID_SHOULDER_ANY);
		cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_1, CARD_REGION_ID_SHOES_ANY);
		if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
			+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

			// 右手武器へのエンチャント
			w += 1 * n_A_Weapon_ATKplus * cardCountRight

			// 左手武器へのエンチャント
			w += 1 * n_A_Weapon2_ATKplus * cardCountLeft

			// 頭防具へのエンチャント
			w += 1 * n_A_HEAD_DEF_PLUS * cardCountHeadTop

			// 盾防具へのエンチャント
			w += 1 * n_A_SHIELD_DEF_PLUS * cardCountShield

			// 体防具へのエンチャント
			w += 1 * n_A_BODY_DEF_PLUS * cardCountBody

			// 肩防具へのエンチャント
			w += 1 * n_A_SHOULDER_DEF_PLUS * cardCountShoulder

			// 靴防具へのエンチャント
			w += 1 * n_A_SHOES_DEF_PLUS * cardCountShoes

			// アクセサリへのエンチャント
			// 精錬できないので処理不要
		}

		//----------------------------------------------------------------
		// 「エンチャント　増幅2」の、精錬による効果
		//----------------------------------------------------------------
		cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_2, CARD_REGION_ID_ARMS_RIGHT_ANY);
		cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_2, CARD_REGION_ID_ARMS_LEFT_ANY);
		cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_2, CARD_REGION_ID_HEAD_TOP_ANY);
		cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_2, CARD_REGION_ID_SHIELD_ANY);
		cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_2, CARD_REGION_ID_BODY_ANY);
		cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_2, CARD_REGION_ID_SHOULDER_ANY);
		cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_2, CARD_REGION_ID_SHOES_ANY);
		if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
			+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

			// 右手武器へのエンチャント
			w += 2 * n_A_Weapon_ATKplus * cardCountRight

			// 左手武器へのエンチャント
			w += 2 * n_A_Weapon2_ATKplus * cardCountLeft

			// 頭防具へのエンチャント
			w += 2 * n_A_HEAD_DEF_PLUS * cardCountHeadTop

			// 盾防具へのエンチャント
			w += 2 * n_A_SHIELD_DEF_PLUS * cardCountShield

			// 体防具へのエンチャント
			w += 2 * n_A_BODY_DEF_PLUS * cardCountBody

			// 肩防具へのエンチャント
			w += 2 * n_A_SHOULDER_DEF_PLUS * cardCountShoulder

			// 靴防具へのエンチャント
			w += 2 * n_A_SHOES_DEF_PLUS * cardCountShoes

			// アクセサリへのエンチャント
			// 精錬できないので処理不要
		}

		//----------------------------------------------------------------
		// 「エンチャント　増幅3」の、精錬による効果
		//----------------------------------------------------------------
		cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_3, CARD_REGION_ID_ARMS_RIGHT_ANY);
		cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_3, CARD_REGION_ID_ARMS_LEFT_ANY);
		cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_3, CARD_REGION_ID_HEAD_TOP_ANY);
		cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_3, CARD_REGION_ID_SHIELD_ANY);
		cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_3, CARD_REGION_ID_BODY_ANY);
		cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_3, CARD_REGION_ID_SHOULDER_ANY);
		cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_3, CARD_REGION_ID_SHOES_ANY);
		if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
			+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

			// 右手武器へのエンチャント
			w += 3 * n_A_Weapon_ATKplus * cardCountRight

			// 左手武器へのエンチャント
			w += 3 * n_A_Weapon2_ATKplus * cardCountLeft

			// 頭防具へのエンチャント
			w += 3 * n_A_HEAD_DEF_PLUS * cardCountHeadTop

			// 盾防具へのエンチャント
			w += 3 * n_A_SHIELD_DEF_PLUS * cardCountShield

			// 体防具へのエンチャント
			w += 3 * n_A_BODY_DEF_PLUS * cardCountBody

			// 肩防具へのエンチャント
			w += 3 * n_A_SHOULDER_DEF_PLUS * cardCountShoulder

			// 靴防具へのエンチャント
			w += 3 * n_A_SHOES_DEF_PLUS * cardCountShoes

			// アクセサリへのエンチャント
			// 精錬できないので処理不要
		}

		//----------------------------------------------------------------
		// 「エンチャント　増幅4」の、精錬による効果
		//----------------------------------------------------------------
		cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_4, CARD_REGION_ID_ARMS_RIGHT_ANY);
		cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_4, CARD_REGION_ID_ARMS_LEFT_ANY);
		cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_4, CARD_REGION_ID_HEAD_TOP_ANY);
		cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_4, CARD_REGION_ID_SHIELD_ANY);
		cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_4, CARD_REGION_ID_BODY_ANY);
		cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_4, CARD_REGION_ID_SHOULDER_ANY);
		cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_4, CARD_REGION_ID_SHOES_ANY);
		if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
			+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

			// 右手武器へのエンチャント
			w += 4 * n_A_Weapon_ATKplus * cardCountRight

			// 左手武器へのエンチャント
			w += 4 * n_A_Weapon2_ATKplus * cardCountLeft

			// 頭防具へのエンチャント
			w += 4 * n_A_HEAD_DEF_PLUS * cardCountHeadTop

			// 盾防具へのエンチャント
			w += 4 * n_A_SHIELD_DEF_PLUS * cardCountShield

			// 体防具へのエンチャント
			w += 4 * n_A_BODY_DEF_PLUS * cardCountBody

			// 肩防具へのエンチャント
			w += 4 * n_A_SHOULDER_DEF_PLUS * cardCountShoulder

			// 靴防具へのエンチャント
			w += 4 * n_A_SHOES_DEF_PLUS * cardCountShoes

			// アクセサリへのエンチャント
			// 精錬できないので処理不要
		}

		//----------------------------------------------------------------
		// 「エンチャント　増幅5」の、精錬による効果
		//----------------------------------------------------------------
		cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_5, CARD_REGION_ID_ARMS_RIGHT_ANY);
		cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_5, CARD_REGION_ID_ARMS_LEFT_ANY);
		cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_5, CARD_REGION_ID_HEAD_TOP_ANY);
		cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_5, CARD_REGION_ID_SHIELD_ANY);
		cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_5, CARD_REGION_ID_BODY_ANY);
		cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_5, CARD_REGION_ID_SHOULDER_ANY);
		cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_ZOFUKU_5, CARD_REGION_ID_SHOES_ANY);
		if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
			+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

			// 右手武器へのエンチャント
			w += 5 * n_A_Weapon_ATKplus * cardCountRight

			// 左手武器へのエンチャント
			w += 5 * n_A_Weapon2_ATKplus * cardCountLeft

			// 頭防具へのエンチャント
			w += 5 * n_A_HEAD_DEF_PLUS * cardCountHeadTop

			// 盾防具へのエンチャント
			w += 5 * n_A_SHIELD_DEF_PLUS * cardCountShield

			// 体防具へのエンチャント
			w += 5 * n_A_BODY_DEF_PLUS * cardCountBody

			// 肩防具へのエンチャント
			w += 5 * n_A_SHOULDER_DEF_PLUS * cardCountShoulder

			// 靴防具へのエンチャント
			w += 5 * n_A_SHOES_DEF_PLUS * cardCountShoes

			// アクセサリへのエンチャント
			// 精錬できないので処理不要
		}

		//----------------------------------------------------------------
		// 「リングオブヴィーナス」の、素ＡＧＩによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_RING_OF_VENUS, EQUIP_REGION_ID_ACCESSARY_2)) > 0) {
			w += 1 * Math.floor(SU_AGI / 10) * itemCount;
		}

		//----------------------------------------------------------------
		// 「深海のデビアスカード」の、素ＡＧＩ、素ＩＮＴ、素ＬＵＫによる効果
		//----------------------------------------------------------------
		if ((cardcount = CardNumSearch(CARD_ID_SHINKAINO_DEVIAS)) > 0) {
			w += 2 * ROUNDDOWN((SU_AGI + SU_INT + SU_LUK) / 25) * cardcount;
		}

		//----------------------------------------------------------------
		// 「英雄の凱歌　ニーズヘッグの影カードセット」の、職業による強化
		//----------------------------------------------------------------
		if ((cardcount = CardNumSearch(CARD_SET_ID_ENCHANT_EIYUNO_GAIKA_NYDHOGNO_KAGE)) > 0) {
			// ハイウィザード系のみ
			if (GetHigherJobSeriesID(n_A_JOB) == JOB_SERIES_ID_WIZARD) {
				if (n_A_JOB != JOB_ID_WIZARD) {
					w += 3 * n_A_BODY_DEF_PLUS * cardcount;
				}
			}
		}

		//----------------------------------------------------------------
		// 「豊穣の女神　封印されたヴェルゼブブカードセット」の、素ＬＵＫによる効果
		//----------------------------------------------------------------
		if ((cardcount = CardNumSearch(CARD_SET_ID_ENCHANT_HOZYONO_MEGAMI_FUINSARETA_VERSEVV)) > 0) {
			w += 1 * ROUNDDOWN(SU_LUK / 20) * cardcount;
		}

		//----------------------------------------------------------------
		// 「ゾディアック　処女宮のメイル」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_SHOZYOKYUNO_MAIL)) {
			if (IsSameJobClass(JOB_ID_ARCBISHOP)) {
				w += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　双魚宮のメイル」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_SOGYOKYUNO_MAIL)) {
			if (IsSameJobClass(JOB_ID_SORCERER)) {
				w += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　双児宮のメイル」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_SOZIKYUNO_MAIL)) {
			if (IsSameJobClass(JOB_ID_MINSTREL) || IsSameJobClass(JOB_ID_WANDERER)) {
				w += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　プロキオンローブ」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_PROCYON_ROBE)) {
			if (IsSameJobClass(JOB_ID_SOUL_REAPER)) {
				w += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　宝瓶宮のメイル」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_HOBINKYUNO_MAIL)) {
			if (IsSameJobClass(JOB_ID_WARLOCK)) {
				w += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　宝瓶宮のシューズ」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_HOBINKYUNO_SHOES)) {
			if (IsSameJobClass(JOB_ID_WARLOCK)) {
				w += 2 * n_A_SHOES_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　磨羯宮のメイル」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_MAKATSUKYUNO_MAIL)) {
			if (IsSameJobClass(JOB_ID_SHADOWCHASER)) {
				w += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ミステリーウィング」の、素ステータスによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_MYSTERY_WING)) > 0) {
			w += 5 * Math.floor(GetTotalPureBasicStatus() / 100) * itemCount;
		}

		//----------------------------------------------------------------
		// 「フィフスエレメント」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_FIFTH_ELEMENT)) > 0) {
			w += 10 * LearnedSkillSearch(SKILL_ID_ELEMENTAL_SYMPASY) * itemCount;
		}

		//----------------------------------------------------------------
		// 「増幅された怨望＋思念体武器セット」の、精錬による効果
		//----------------------------------------------------------------
		if (cardcount = CardNumSearch(CARD_SET_ID_ENCHANT_ZOFUKUSARETA_ENBO_SHINEN_ARMS_V1)) {
			w += 5 * n_A_Weapon_ATKplus * cardcount;
		}

		//----------------------------------------------------------------
		// 「特選ドラムスーツ＋ゾディアックセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_ENCHANT_ZODIAC_TOKUSEN_DORAM_SUITS)) > 0) {
			if (IsSameJobClass(JOB_ID_SUMMONER)) {
				w += 3 * n_A_BODY_DEF_PLUS * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「特選ドラムシューズ＋ゾディアックセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_ENCHANT_ZODIAC_TOKUSEN_DORAM_SHOES)) > 0) {
			if (IsSameJobClass(JOB_ID_SUMMONER)) {
				w += 3 * n_A_SHOES_DEF_PLUS * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ヨルムンガンド教団主教」の効果
		//----------------------------------------------------------------
		if ((itemCount = CardNumSearch(CARD_ID_ELITE_RGAN_HEALER)) > 0) {
			if (n_tok[ITEM_SP_STUFF2HAND] === 1) {
				// 両手杖のときカード１枚ごとに2%増加
				w += 2 * itemCount;
				if (n_A_Weapon_ATKplus === 10) {
					// 両手杖かつ精錬値10のときカード１枚ごとに4%増加
					w += 4 * itemCount;
				}
			}
		}






		if(SU_DEX >= 110 && CardNumSearch(709)) w += 7;

		if(CardNumSearch(830)){
			if(n_A_HEAD_DEF_PLUS >= 7) w += 1 * CardNumSearch(830);
			if(n_A_HEAD_DEF_PLUS >= 9) w += 1 * CardNumSearch(830);
		}
		if(n_A_SHOES_DEF_PLUS >= 7 && CardNumSearch(886)){
			w += 3;
			if(n_A_SHOES_DEF_PLUS >= 9) w += 2;
		}
		if(n_A_card[CARD_REGION_ID_HEAD_TOP] == 893) w += ROUNDDOWN(n_A_HEAD_DEF_PLUS / 2);
		if(CardNumSearch(895)) w -= 10;

		//----------------------------------------------------------------
		// 「サモナー　大地の力」の、習得スキルレベル合計による効果
		//----------------------------------------------------------------
		if (Math.max(LearnedSkillSearch(SKILL_ID_DAICHINO_CHIKARA), UsedSkillSearch(SKILL_ID_DAICHINO_CHIKARA)) > 0) {
			let summoner_skill_plant_sum = 0;
			summoner_skill_plant_sum += LearnedSkillSearch(SKILL_ID_MATATABI_LANCE);
			summoner_skill_plant_sum += LearnedSkillSearch(SKILL_ID_MATATABINO_NEKKO);
			summoner_skill_plant_sum += LearnedSkillSearch(SKILL_ID_INUHAKKA_METEOR);
			summoner_skill_plant_sum += LearnedSkillSearch(SKILL_ID_INUHAKKA_SHOWER);
			summoner_skill_plant_sum += LearnedSkillSearch(SKILL_ID_CHATTERING);
			summoner_skill_plant_sum += LearnedSkillSearch(SKILL_ID_MYAUMYAU);
			summoner_skill_plant_sum += LearnedSkillSearch(SKILL_ID_NYAN_GRASS);
			if (Math.max(summoner_skill_plant_sum, UsedSkillSearch(SKILL_ID_PLANT_KEI_SHUTOKU_LEVEL_GOKEI)) >= 20) {
				w += 10;
			}
		}

		//----------------------------------------------------------------
		// 「三次職支援　エビ三昧」の効果
		//----------------------------------------------------------------
		switch (g_confDataSanzi[CCharaConfSanzi.CONF_ID_EBI_ZANMAI]) {
		case 1:
			w += 5;
			break;
		case 2:
			w += 5;
			break;
		case 3:
			w += 10;
			break;
		case 4:
			w += 15;
			break;
		case 5:
			w += 30;
			break;
		}

		if(n_A_PassSkill7[41]){
			if(n_A_PassSkill7[41] == 1) w += 5;
			if(n_A_PassSkill7[41] == 2) w += 10;
		}
		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_MAGICAL_DAMAGE_UP);
		if (confval != 0) {
			w += confval;
		}
		n_tok[89] += w;

		/**
		 * 公式サイトで「基本攻撃速度」と表記されるASPD計算式
		 */
		let aspd = 0;
		{
			/** 途中計算用の一時変数 */
			let tmp_aspd = 0;
			let ASPDch = 0;
			let ASPDplusMAX = 0;
			const wAGI = Math.max(1, n_A_AGI);
			const wDEX = Math.max(1, n_A_DEX);
			const jobData = g_constDataManager.GetDataObject(CONST_DATA_KIND_JOB, n_A_JOB);

			// 武器種による基本ASPD判定
			aspd = jobData.GetWeaponAspd(n_A_WeaponType);
			if (n_tok[ITEM_SP_STUFF2HAND]) {
				if(EquipNumSearch(ITEM_ID_STUFF_OF_SOUL) == 0 && EquipNumSearch(ITEM_ID_WIZARD_STUFF) == 0) {
					aspd = jobData.GetWeaponAspd(ITEM_KIND_STUFF2HAND);
				}
			}
			if (aspd >= 145) {
				tmp_aspd = (aspd - 144) / 50;
			}
			if ([ITEM_KIND_BOW, ITEM_KIND_MUSICAL, ITEM_KIND_WHIP, ITEM_KIND_HANDGUN, ITEM_KIND_RIFLE, ITEM_KIND_SHOTGUN, ITEM_KIND_GATLINGGUN, ITEM_KIND_GRENADEGUN].includes(n_A_WeaponType)) {
				aspd += Math.sqrt(wAGI * (10 - 1 / 400) + wDEX * 9 / 49) * (1 - tmp_aspd);
			} else {
				aspd += Math.sqrt(wAGI * (10 + 10 / 111) + wDEX * 9 / 49) * (1 - tmp_aspd);
			}
			if (n_Nitou) {
				tmp_aspd = jobData.GetWeaponAspd(n_A_WeaponType) + (jobData.GetWeaponAspd(n_A_Weapon2Type) - 194) / 4;
				aspd = tmp_aspd + Math.sqrt(wAGI * (10 - 1 / 400) + wDEX * 9 / 49) * 1.05;
			}
			if(n_A_Equip[EQUIP_REGION_ID_SHIELD] != ITEM_ID_NOEQUIP_SHIELD) {
				aspd -= jobData.GetWeaponAspd(ITEM_KIND_SHIELD);
			}

			// クァグマイア または 速度減少 で打ち消されない ASPD 増加計算
			tmp_aspd = 0;
			if (n_A_PassSkill8[22] >= 2) {
				// その他の支援/設定 > OTP が シルバー/ゴールド/レインボー の場合
				tmp_aspd = 10;
				if(n_A_BaseLV >= 40 && IsUsableHSPJob(n_A_JOB)) {
					// Lv40以上でハイスピードポーションが使える職
					tmp_aspd = 15;
				}
				if(n_A_BaseLV >= 85 && IsUsableBSPJob(n_A_JOB)) {
					// Lv85以上でバーサクポーションが使える職
					tmp_aspd = 20;
				}
			} else if(n_A_PassSkill7[35]) {
				// アイテム・食品他 > ガラナキャンディ が使われている場合
				tmp_aspd += 10;
			}
			// OTPとスピードポーションのうち大きい効果を適用
			tmp_aspd = Math.max(tmp_aspd, [0, 10, 15, 20][n_A_SpeedPOT]);
			if (n_A_PassSkill7[47] > 0) {
				// アイテム(食品/他) > 期間限定系 ASPD 増加値 が 設定されている場合
				tmp_aspd = Math.max(tmp_aspd, n_A_PassSkill7[47]);
			}

			// -------------------------------------------
			// 以下のスキルは加算されず最大値だけが適用される
			// -------------------------------------------

			/** 三次職支援設定「スイングダンス」の基本攻撃速度 + 効果 */
			if (g_confDataSanzi[CCharaConfSanzi.CONF_ID_SWING_DANCE] > 0) {
				ASPDch = 5 * g_confDataSanzi[CCharaConfSanzi.CONF_ID_SWING_DANCE];
				ASPDch += g_confDataSanzi[CCharaConfSanzi.CONF_ID_LESSON];
				ASPDplusMAX = Math.max(ASPDplusMAX, ASPDch);
			}

			/** 三次職支援設定「ダンスウィズウォーグ」の基本攻撃速度 + 効果 */
			if (g_confDataSanzi[CCharaConfSanzi.CONF_ID_DANCE_WITH_WUG] > 0) {
				ASPDch = 5;
				ASPDplusMAX = Math.max(ASPDplusMAX, ASPDch);
			}

			// クァグマイア または 速度減少 で打ち消される ASPD 増加計算
			if (g_confDataDebuff[CCharaConfDebuff.CONF_ID_QUAGMIRE] === 0 && g_confDataDebuff[CCharaConfDebuff.CONF_ID_DECAGI] === 0) {
				//----------------------------------------------------------------
				// 「パッシブ持続系　クイッケン系」の効果
				//----------------------------------------------------------------
				switch (n_A_WeaponType) {
					case ITEM_KIND_SWORD:
						if (UsedSkillSearch(SKILL_ID_ONEHAND_QUICKEN) > 0) {
							ASPDch = 30;
						}
						break;
					case ITEM_KIND_SWORD_2HAND:
						if (UsedSkillSearch(SKILL_ID_TWOHAND_QUICKEN) > 0) {
							ASPDch = 30;
						}
						break;
					case ITEM_KIND_SPEAR:
					case ITEM_KIND_SPEAR_2HAND:
						if (UsedSkillSearch(SKILL_ID_SPEAR_QUICKEN) > 0) {
							ASPDch = 30;
						}
						break;
					// アドレナリンラッシュは、自己支援と他人支援で効果が違うので注意. ここで計算するのは自己支援
					case ITEM_KIND_AXE:
					case ITEM_KIND_AXE_2HAND:
					case ITEM_KIND_CLUB:
						if (UsedSkillSearch(SKILL_ID_ADRENALINE_RUSH) > 0) {
							ASPDch = 30;
						}
						break;
				}
				//----------------------------------------------------------------
				// 「二次職支援　フルアドレナリンラッシュ」の効果
				//----------------------------------------------------------------
				if ((_APPLY_UPDATE_LV200) || (UsedSkillSearch(SKILL_ID_MADOGEAR) == 0)) {
					if (ASPDch == 0 && UsedSkillSearch(SKILL_ID_FULL_ADRENALINE_RUSH)) {
						ASPDch = 30;
					}
				}
				//----------------------------------------------------------------
				// 「時限アイテム　フルアドレナリンラッシュ」の効果
				// 火雷大神の効果も、実質フルアドレナリンラッシュ？
				//----------------------------------------------------------------
				if (TimeItemNumSearch(5)
					|| TimeItemNumSearch(28)
					|| TimeItemNumSearch(TIME_ITEM_ID_RALF_FONG_TWIEGE_666)
					|| TimeItemNumSearch(TIME_ITEM_ID_ENCHANT_HONOIKAZUCHINOOKAMI_AR)) {
					ASPDch = 30;
				}
				ASPDplusMAX = Math.max(ASPDplusMAX, ASPDch);
			}
			//----------------------------------------------------------------
			// 「ロードナイト　バーサーク」の効果
			//----------------------------------------------------------------
			if (UsedSkillSearch(SKILL_ID_BERSERK)) {
				ASPDch = 30;
				ASPDplusMAX = Math.max(ASPDplusMAX, ASPDch);
			}
			//----------------------------------------------------------------
			// 「ガンスリンガー　マッドネスキャンセラー」の効果
			//----------------------------------------------------------------
			if (UsedSkillSearch(SKILL_ID_MADNESSS_CANCELER)) {
				ASPDch = 20;
				ASPDplusMAX = Math.max(ASPDplusMAX, ASPDch);
			}
			//----------------------------------------------------------------
			// 「拳聖　星の安楽」の効果
			// 「拳聖　太陽と月と星の悪魔」の効果
			//----------------------------------------------------------------
			ASPDch = 0;
			if (UsedSkillSearch(SKILL_ID_HOSHINO_ANRAKU) > 0) {
				switch (UsedSkillSearch(SKILL_ID_TAIYOTO_TSUKITO_HOSHINO_HI)) {
					case 1:	// 今日の日付
						const today = (new Date()).getDate();
						if (today % 5 == 1)	break; // 星の日ではない
					case 0:	// 無条件発動
					case 4: // 星の日
						ASPDch += Math.floor((n_A_BaseLV + n_A_LUK + n_A_DEX) / 10);
				}
			}
			const taiyoto_tsukito_hoshino_akuma = Math.max(LearnedSkillSearch(SKILL_ID_TAIYOTO_TSUKITO_HOSHINO_AKUMA), UsedSkillSearch(SKILL_ID_TAIYOTO_TSUKITO_HOSHINO_AKUMA));
			if (taiyoto_tsukito_hoshino_akuma > 0) {
				switch (n_A_JOB) {
					case JOB_ID_STARGRADIATOR:
						// 拳聖 ジョブレベル５０未満では発動しない
						if (n_A_JobLV < 50) {
							break;
						}
					default:
						// 星帝・天帝は制限なし
						ASPDch += 1 + taiyoto_tsukito_hoshino_akuma;
				}
			}
			ASPDplusMAX = Math.max(ASPDplusMAX, ASPDch);
			//----------------------------------------------------------------
			// 「二次職支援　アドレナリンラッシュ系」の効果
			// TODO: 未解析
			//----------------------------------------------------------------
			if (g_confDataNizi[CCharaConfNizi.CONF_ID_ADRENALINE_RUSH] >= 1) {
				if (g_confDataDebuff[CCharaConfDebuff.CONF_ID_QUAGMIRE] === 0 && g_confDataDebuff[CCharaConfDebuff.CONF_ID_DECAGI] === 0) {
					// クァグマイア または 速度減少 が掛かっていないとき
					if ((_APPLY_UPDATE_LV200) || (UsedSkillSearch(SKILL_ID_MADOGEAR) === 0)) {
						if(g_confDataNizi[CCharaConfNizi.CONF_ID_ADRENALINE_RUSH] == 2){
							if(n_A_WeaponType != 10 && !(17 <= n_A_WeaponType && n_A_WeaponType <= 21)){
								ASPDch = 20;
								if(GetHigherJobSeriesID(n_A_JOB)==12) ASPDch += 10;
								ASPDplusMAX = Math.max(ASPDplusMAX, ASPDch);
							}
						}
						if(6 <= n_A_WeaponType && n_A_WeaponType <= 8){
							if(g_confDataNizi[CCharaConfNizi.CONF_ID_ADRENALINE_RUSH] == 1){
								ASPDch = 20;
								if(GetHigherJobSeriesID(n_A_JOB)==12) ASPDch += 10;
								ASPDplusMAX = Math.max(ASPDplusMAX, ASPDch);
							}
						}
					}
					if(6 <= n_A_WeaponType && n_A_WeaponType <= 8){
						if(g_confDataNizi[CCharaConfNizi.CONF_ID_ADRENALINE_RUSH] == 3){
							ASPDch = 30;
							ASPDplusMAX = Math.max(ASPDplusMAX, ASPDch);
						}
					}
				}
			}

			tmp_aspd += ASPDplusMAX;
			// 「ガンスリンガー」スキル「シングルアクション」のASPD増加効果
			tmp_aspd += Math.round(Math.max(LearnedSkillSearch(SKILL_ID_SINGLE_ACTION), UsedSkillSearch(SKILL_ID_SINGLE_ACTION)) / 2);
			// 「プロフェッサー」スキル「アドバンスドブック」のASPD増加効果
			if (n_A_WeaponType == ITEM_KIND_BOOK) {
				const advanced_book_lv = Math.max(LearnedSkillSearch(SKILL_ID_ADVANCED_BOOK), UsedSkillSearch(SKILL_ID_ADVANCED_BOOK));
				tmp_aspd += Math.round(advanced_book_lv / 2);
			}
			aspd += (200 - aspd) * (tmp_aspd / 100);

			if (UsedSkillSearch(SKILL_ID_FIGHTING_SPIRIT)) {
				// ファイティングスピリット が設定されているとき
				const wfsp = [0,0,0,1,1,2,2,2,3,3,4];
				const sklLvRuneMastery = Math.max(LearnedSkillSearch(SKILL_ID_RUNE_MASTERY), UsedSkillSearch(SKILL_ID_RUNE_MASTERY));
				aspd += wfsp[sklLvRuneMastery];
			}
			// 修練未習得でもペコペコ・グリフォンに乗れるので LearnedSkillSearch に置き換えられない
			if (UsedSkillSearch(SKILL_ID_KIHE_SHUREN) > 0) {
				// ペコペコ・グリフォンに搭乗している場合、騎兵修練の習得Lvに応じてASPDペナルティが課せられる
				// UsedSkillSearch の方は'Lv0'の前に'ペコ無し'が挿入されているのでオフセットを合わせている
				if ((n_A_ActiveSkill === SKILL_ID_TUZYO_KOGEKI) || (n_A_ActiveSkill === SKILL_ID_SACRIFICE)) {
					// 攻撃手段が 通常攻撃 または サクリファイス ならば
					aspd -= aspd - aspd * (40 + Math.max(LearnedSkillSearch(SKILL_ID_KIHE_SHUREN), UsedSkillSearch(SKILL_ID_KIHE_SHUREN)) * 10) / 100;
				}
			}
			// トレーニング未習得でもドラゴンに乗れるので LearnedSkillSearch に置き換えられない
			if (UsedSkillSearch(SKILL_ID_DRAGON_TRAINING) > 0) {
				// ドラゴンに搭乗している場合、ドラゴントレーニングの習得Lvに応じてASPDペナルティが課せられる
				// UsedSkillSearch の方は'Lv0'の前に'未騎乗'が挿入されているのでオフセットを合わせている
				const dragon_training_lv = Math.max(LearnedSkillSearch(SKILL_ID_DRAGON_TRAINING), UsedSkillSearch(SKILL_ID_DRAGON_TRAINING) - 1);
				aspd -= aspd - aspd * (70 + (dragon_training_lv + 1) * 5) / 100;
			}
		}

		let aspd_up_percent = GetAdditionalAspdPercent();
		// 拡張表示用にデータを保存
		CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_ASPD_UP, aspd_up_percent);
		// ASPD計算
		aspd += (200 - aspd) * (aspd_up_percent / 100);

//================================================================================================================================
//================================================================================================================================
//====
//==== ＡＳＰＤ固定増加　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_ASPD_PLUS; idx <= ITEM_SP_ASPD_PLUS; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		let aspdPlusValue = n_tok[ITEM_SP_ASPD_PLUS];

		if(EquipNumSearch(1339)) aspdPlusValue += ROUNDDOWN(n_A_Weapon_ATKplus / 2);
		if(SU_AGI >= 120 && EquipNumSearch(1311)) aspdPlusValue += 1;
		if(SU_STR >= 120 && EquipNumSearch(1320)) aspdPlusValue += 1;
		if(EquipNumSearch(1353)) aspdPlusValue += 1;
		if(n_A_WeaponType == 3 && n_A_Weapon_ATKplus >= 10) aspdPlusValue += CardNumSearch(530);
		if(n_A_WeaponType == 10 && n_A_Weapon_ATKplus >= 10) aspdPlusValue += CardNumSearch(531);
		if(n_A_BODY_DEF_PLUS >= 7 && n_A_SHOULDER_DEF_PLUS >= 7 && n_A_SHOES_DEF_PLUS >= 7 && EquipNumSearch(1601)) aspdPlusValue += 1;
		if (EquipNumSearch(ITEM_SET_ID_SAMAYOUMONONO_HAORI_KASA_PET) > 0) {
			if (n_A_HEAD_DEF_PLUS >= 7 && n_A_SHOULDER_DEF_PLUS >= 7) {
				aspdPlusValue += 1;
			}
		}
		if(SU_AGI >= 120 && EquipNumSearch(1708)) aspdPlusValue += 1;
		if(SU_AGI >= 108 && EquipNumSearch(1791)) aspdPlusValue += 1;

		// 俊敏の時空ブーツ
		if(SU_AGI >= 120 && EquipNumSearch(1919)) aspdPlusValue += 1;
		if(SU_AGI >= 120 && EquipNumSearch(ITEM_ID_SHUNBINNO_ZIKU_BOOTS_S1)) aspdPlusValue += 1;

		if(SU_AGI >= 120 && EquipNumSearch(2295)) aspdPlusValue += 1;
		if(n_A_Weapon_ATKplus >= 10){
			if(n_A_Arrow == ARROW_ID_HONOONO_YA && EquipNumSearch(2356)) aspdPlusValue += 1;
			if(n_A_Arrow == ARROW_ID_SUISHONO_YA && EquipNumSearch(2357)) aspdPlusValue += 1;
			if(n_A_Arrow == ARROW_ID_GANSEKINO_YA && EquipNumSearch(2358)) aspdPlusValue += 1;
			if(n_A_Arrow == ARROW_ID_KAZENO_YA && EquipNumSearch(2359)) aspdPlusValue += 1;
		}
		if(2504 <= n_A_Equip[EQUIP_REGION_ID_SHIELD] && n_A_Equip[EQUIP_REGION_ID_SHIELD] <= 2507){
			if(n_A_SHIELD_DEF_PLUS >= 5) aspdPlusValue += 1;
			if(n_A_SHIELD_DEF_PLUS >= 7) aspdPlusValue += 1;
		}
		if(n_A_WeaponType == 10 && n_A_Weapon_ATKplus >= 10 && EquipNumSearch(2515)) aspdPlusValue += 1;


		//----------------------------------------------------------------
		// 「戦死者のマント」の、純粋なＡＧＩが１３０の時
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_SENSHISHANO_MANT)){
			if (SU_AGI >= 130) {
				if (EquipNumSearchFurubitaSet() > 0) {
					aspdPlusValue += 2;
				} else {
					aspdPlusValue += 1;
				}
			}
		}

		//----------------------------------------------------------------
		// 「元素のタオルセット」の、効果
		//----------------------------------------------------------------
		if(n_A_Weapon_ATKplus >= 10){

			if(n_A_Arrow == ARROW_ID_HONOONO_YA && EquipNumSearch(ITEM_SET_ID_GENSONO_TOWEL_MOERU_YUMI)) {
				aspdPlusValue += 1;
			}

			if(n_A_Arrow == ARROW_ID_SUISHONO_YA && EquipNumSearch(ITEM_SET_ID_GENSONO_TOWEL_HYOTENNO_YUMI)) {
				aspdPlusValue += 1;
			}

			if(n_A_Arrow == ARROW_ID_GANSEKINO_YA && EquipNumSearch(ITEM_SET_ID_GENSONO_TOWEL_DAICHINO_YUMI)) {
				aspdPlusValue += 1;
			}

			if(n_A_Arrow == ARROW_ID_KAZENO_YA && EquipNumSearch(ITEM_SET_ID_GENSONO_TOWEL_HAYATENO_YUMI)) {
				aspdPlusValue += 1;
			}
		}

		//----------------------------------------------------------------
		// 「リス耳フード帽」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_RISUMIMI_HOODBO)) {
			if (n_A_HEAD_DEF_PLUS >= 5) aspdPlusValue += 1;
			if (n_A_HEAD_DEF_PLUS >= 7) aspdPlusValue += 1;
			if (n_A_HEAD_DEF_PLUS >= 9) aspdPlusValue += 1;
		}

		//----------------------------------------------------------------
		// 「沸騰する混沌の盾」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_FUTTOSURU_KONTONNO_TATE)) {
			if (n_A_SHIELD_DEF_PLUS >= 5) aspdPlusValue += 1;
			if (n_A_SHIELD_DEF_PLUS >= 7) aspdPlusValue += 1;
		}

		//----------------------------------------------------------------
		// 「くわえたハートのエース　ギャンブラーシールセット」の、素ＬＵＫによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KUWAETA_HEARTNO_ACE_GAMBLER_SEAL)) > 0) {
			if (SU_LUK >= 108) {
				aspdPlusValue += 1 * itemCount;
			}
			if (SU_LUK >= 120) {
				aspdPlusValue += 2 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ルーンナイトセイレン(MVP)カード」の、職業による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_RUNE_KNIGHT_SEIREN_MVP)) > 0) {
			if (IsSameJobClass(JOB_ID_RUNEKNIGHT)) {
				aspdPlusValue += 2 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「ペタルの尻尾　リス耳フード帽セット」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_PETALNO_SHIPPO_RISUMIMI_HOOD_BO)) {
			if (n_A_HEAD_DEF_PLUS >= 6) aspdPlusValue += 1;
			if (n_A_HEAD_DEF_PLUS >= 8) aspdPlusValue += 1;
		}

		//----------------------------------------------------------------
		// 「ダークリング」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_DARK_RING)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_CLOAKING_EXCEED) >= 5) {
				aspdPlusValue += 2 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「丹色のリボン」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIRONO_RIBBON)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_TAMASHINO_RENKETSU) >= 7) {
				aspdPlusValue += 2 * itemCount;
			}
		}



		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_ASPD_PLUS);
		if (confval != 0) {
			aspdPlusValue += confval;
		}



		//----------------------------------------------------------------
		// 「ソーサラー　精霊」の、効果
		//----------------------------------------------------------------
		if (UsedSkillSearch(SKILL_ID_SERE_MODE) == 1) {
			switch (UsedSkillSearch(SKILL_ID_SERE)) {
			case 7:
			case 8:
			case 9:
				aspdPlusValue += 5;
			}
		}

		//----------------------------------------------------------------
		// 「クルセイダー　ディフェンダー」の、効果
		//----------------------------------------------------------------
		if (UsedSkillSearch(SKILL_ID_DEFENDER) > 0) {
			aspdPlusValue -= (25 - UsedSkillSearch(SKILL_ID_DEFENDER) * 5);
		}
		else if (g_confDataNizi[CCharaConfNizi.CONF_ID_DEFENDER] > 0) {
			aspdPlusValue -= (25 - g_confDataNizi[CCharaConfNizi.CONF_ID_DEFENDER] * 5);
		}

		//----------------------------------------------------------------
		// 「ギロチンクロス　ハルシネーション効果後のASPD減」の、効果
		//----------------------------------------------------------------
		if (UsedSkillSearch(SKILL_ID_HALLUCINATION_WALKGONO_ASPD_GENSHO) > 0) {
			aspdPlusValue -= aspdPlusValue - aspdPlusValue / 2;
		}

		//----------------------------------------------------------------
		// 「リベリオン－ヒートバレル」の、効果
		//----------------------------------------------------------------
		aspdPlusValue += UsedSkillSearch(SKILL_ID_HEAT_BARREL);

		//----------------------------------------------------------------
		// 「ソウルリーパー　影の魂」の、効果
		//----------------------------------------------------------------
		if ((bufLv = g_confDataSanzi[CCharaConfSanzi.CONF_ID_KAGENO_TAMASHI]) > 0) {

			// 特定の戦闘エリアでの補正
			switch (n_B_TAISEI[MOB_CONF_PLAYER_ID_SENTO_AREA]) {

			case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_COLOSSEUM:
				aspdPlusValue += 2 * bufLv;
				break;

			default:
				aspdPlusValue += Math.floor((bufLv + 1) / 2);
				break;

			}
		}



		// TODO: 四次対応
		for (idx = ITEM_SP_ASPD_PLUS; idx <= ITEM_SP_ASPD_PLUS; idx++) {
			aspdPlusValue = ApplySpecModify(idx, aspdPlusValue);
		}



		// 拡張表示用にデータを保存
		CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_ASPD_PLUS, aspdPlusValue);

		// ASPD計算
		aspd += aspdPlusValue;



		//----------------------------------------------------------------
		// 「ジェネティック　オーバードブースト」の、効果（ASPDを増加ではなく固定する）
		//----------------------------------------------------------------
		if (UsedSkillSearch(SKILL_ID_OVERED_BOOST) > 0) {
			aspd = 179 + 2 * UsedSkillSearch(SKILL_ID_OVERED_BOOST);
		}



		// 範囲外補正
		aspdRaw = aspd;
		if(n_A_BaseLV >= 100){
			if(aspd > 193) aspd = 193;
		}else{
			if(aspd > 190) aspd = 190;
		}
		if(aspd <0) aspd = 0;


		//----------------------------------------------------------------
		// 計算した結果をキャラクターデータに保存
		//----------------------------------------------------------------
		charaData[CHARA_DATA_INDEX_ASPD] = aspd;






//================================================================================================================================
//================================================================================================================================
//====
//==== モーションディレイ　ここから
//====
//================================================================================================================================
//================================================================================================================================

		var aspdDelay = 0;
		aspdDelay = (200 - Math.floor(charaData[CHARA_DATA_INDEX_ASPD])) / 50;
		n_Delay[1] = Math.floor(aspdDelay * 1000)/1000;
		if (n_A_ActiveSkill == SKILL_ID_ENVENOM) {
			n_Delay[1] = Math.floor(aspdDelay *75)/100;
		}
		// TODO: 要検証項目
		if (n_A_ActiveSkill == SKILL_ID_METEOR_ASSALT) {
			if (n_Delay[1] <= 0.14) {
				n_Delay[1] = 0.12;
			}
		}
		sandanDelay = 0;
		if (n_A_ActiveSkill === 0) {
			if (Math.max(LearnedSkillSearch(SKILL_ID_SANDANSHO), UsedSkillSearch(SKILL_ID_SANDANSHO)) > 0) {
				sandanDelay = (1000 - n_A_AGI *4 - n_A_DEX *2) /1000;
				if (sandanDelay < 0) {
					sandanDelay = 0;
				}
				if (sandanDelay < n_Delay[1]) {
					sandanDelay = n_Delay[1];
				}
				if (UsedSkillSearch(SKILL_ID_SANDAN_DELAY_ZOKA)) {
					sandanDelay += 0.3;
				}
			}
		}
		charaData[CHARA_DATA_INDEX_COMBO_PARAM] = Math.max(0, n_A_AGI) * 4 + Math.max(0, n_A_DEX) * 2;

		// 詠唱ステータスを計算する
		charaData[CHARA_DATA_INDEX_CAST_PARAM] = Math.max(0, n_A_DEX) + Math.max(0, n_A_INT) / 2;

		// 変動詠唱時間の割合減少効果を適用する
		g_VariableCastTimeRate = getVariableCastTimeRate();

		// 固定詠唱時間の軽減率をセットする
		charaData[CHARA_DATA_INDEX_FIXED_TIME] = getFixedCastTimeReductionRate();

		// スキルディレイの割合減少効果を適用する.
	    n_tok[ITEM_SP_SKILL_DELAY_DOWN] = getDelayTimeReductionRate();

//================================================================================================================================
//================================================================================================================================
//====
//==== ＨＰ回復力＋○○　ここから
//====
//================================================================================================================================
//================================================================================================================================

		var hpr = 0;

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_HPR_UP; idx <= ITEM_SP_HPR_UP; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		hpr = Math.floor(n_A_VIT /5) + Math.floor(charaData[CHARA_DATA_INDEX_MAXHP] /200);
		if(hpr <1) hpr = 1;
		var w = 0;
		w += n_tok[75];
		if(SU_LUK >= 77) w += 100 * CardNumSearch(221);
		if(GetLowerJobSeriesID(n_A_JOB)==41 && EquipNumSearch(672)) w += 3;
		if(SU_LUK >= 55 && EquipNumSearch(1632)) w += 30;
		if(n_A_SHOES_DEF_PLUS <= 4 && CardNumSearch(407)) w += 5;
		if(n_A_HEAD_DEF_PLUS >= 7 && EquipNumSearch(2122)){
			w += 25;
			if(n_A_HEAD_DEF_PLUS >= 9) w += 25;
			if(n_A_HEAD_DEF_PLUS >= 10) w += 25;
		}
		if(n_A_HEAD_DEF_PLUS >= 1 && EquipNumSearch(2165)) w += 4 * n_A_HEAD_DEF_PLUS;
		if(EquipNumSearch(2407)) w += 10 * n_A_SHOES_DEF_PLUS;
		if(n_A_BODY_DEF_PLUS >= 7 && EquipNumSearch(2412)) w -= 100;

		//----------------------------------------------------------------
		// 「ディーヴァローブ」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_DIVA_ROBE)) > 0) {
			vartmp = 0;

			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 10;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 20;

			w += vartmp * itemCount;
		}



		//----------------------------------------------------------------
		// 「三次職支援　エビパーティー」の効果
		//----------------------------------------------------------------
		if (g_confDataSanzi[CCharaConfSanzi.CONF_ID_EBI_PARTY]
			&& g_confDataSanzi[CCharaConfSanzi.CONF_ID_EBI_PARTY_TAMASHI_LEVEL]) {
			w += 30;
		}



		if(n_A_PassSkill7[25]) w += 3;
		if(n_A_PassSkill7[23]) w += 20;



		//----------------------------------------------------------------
		// 「修羅　点穴 -活-」の効果
		//----------------------------------------------------------------
		if (UsedSkillSearch(SKILL_ID_TENKETSU_KATSU)) {
			w += 50 + 30 * UsedSkillSearch(SKILL_ID_TENKETSU_KATSU);
		}

		//----------------------------------------------------------------
		// 「修羅　潜龍昇天」の効果
		//----------------------------------------------------------------
		if (UsedSkillSearch(SKILL_ID_SENRYU_SHOTEN)) {
			w -= 100;
		}





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_HPR_UP);
		if (confval != 0) {
			w += confval;
		}





		var w2 = Math.floor(n_A_VIT /5);
		w2 = (w2 + charaData[CHARA_DATA_INDEX_MAXHP] / 200) * w / 100;
		hpr += w2;
		hpr = ROUNDDOWN(hpr);
		if(g_confDataDebuff[CCharaConfDebuff.CONF_ID_POISON]) hpr = 0;


		//----------------------------------------------------------------
		// 計算した結果をキャラクターデータに保存
		//----------------------------------------------------------------
		charaData[CHARA_DATA_INDEX_HPR] = hpr;






//================================================================================================================================
//================================================================================================================================
//====
//==== ＳＰ回復力＋○○　ここから
//====
//================================================================================================================================
//================================================================================================================================

		var spr = 0;

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_SPR_UP; idx <= ITEM_SP_SPR_UP; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		spr = Math.floor(n_A_INT /6) + Math.floor(charaData[CHARA_DATA_INDEX_MAXSP] /100) +1;

		var w = 0;

		w += n_tok[76];

		if(SU_LUK >= 77) w += 100 * CardNumSearch(221);
		if(GetLowerJobSeriesID(n_A_JOB)==41 && EquipNumSearch(673)) w += 3;
		if(SU_LUK >= 55 && EquipNumSearch(1632)) w += 30;
		if(n_A_HEAD_DEF_PLUS <= 4 && n_A_card[CARD_REGION_ID_HEAD_TOP]==179) w += 5;
		if(n_A_card[CARD_REGION_ID_HEAD_MID]==179) w += 5;
		if(n_A_SHOES_DEF_PLUS <= 4 && CardNumSearch(407)) w += 5;
		if(EquipNumSearch(1119) && GetLowerJobSeriesID(n_A_JOB)==5) w += 5;
		if(n_A_PassSkill7[25]) w += 3;
		if(n_A_BODY_DEF_PLUS >= 7 && EquipNumSearch(1105)) w += 10;
		if(n_A_HEAD_DEF_PLUS >= 7 && EquipNumSearch(2122)){
			w += 25;
			if(n_A_HEAD_DEF_PLUS >= 9) w += 25;
			if(n_A_HEAD_DEF_PLUS >= 10) w += 25;
		}
		if(n_A_HEAD_DEF_PLUS >= 1 && EquipNumSearch(2165)) w += 4 * n_A_HEAD_DEF_PLUS;
		if(EquipNumSearch(2283)) w += n_A_HEAD_DEF_PLUS;

		//----------------------------------------------------------------
		// 「ミラージュローブ」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_MIRRORAGE_ROBE)) > 0) {
			vartmp = 0;

			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 10;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 20;

			w += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「ヴァルゴ」の、精錬による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_VIRGO, CARD_REGION_ID_HEAD_TOP_ANY)) > 0) {
			// アークビショップ限定の効果
			if (IsSameJobClass(JOB_ID_ARCBISHOP)) {
				w += 2 * n_A_HEAD_DEF_PLUS * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「可愛い草のネックレス」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KAWAII_KUSANO_NECKLACE)) > 0) {

			sklLv = 0;

			sklLv += LearnedSkillSearch(SKILL_ID_SHINSENNA_EBI);
			sklLv += LearnedSkillSearch(SKILL_ID_EBI_ZANMAI);
			sklLv += LearnedSkillSearch(SKILL_ID_OTORO);
			sklLv += LearnedSkillSearch(SKILL_ID_MAGURO_SHIELD);
			sklLv += LearnedSkillSearch(SKILL_ID_GROOMING);
			sklLv += LearnedSkillSearch(SKILL_ID_NODOWO_NARASU);
			sklLv += LearnedSkillSearch(SKILL_ID_EBI_PARTY);

			w += 10 * ROUNDDOWN(sklLv / 5) * itemCount;
		}



		//----------------------------------------------------------------
		// 「ハイプリースト　メディタティオ」の効果
		//----------------------------------------------------------------
		w += Math.max(LearnedSkillSearch(SKILL_ID_MEDITATIO), UsedSkillSearch(SKILL_ID_MEDITATIO)) * 3;

		//----------------------------------------------------------------
		// 「パッシブ持続系　潜龍昇天」の、効果
		// 「パッシブ持続系　爆裂波動」の、効果
		// 「時限アイテム　ヴンダーカンマー（爆裂波動）」の、効果
		// 「時限アイテム　リングオブフレームロード（爆裂波動）」の、効果
		//----------------------------------------------------------------
		if (UsedSkillSearch(SKILL_ID_SENRYU_SHOTEN)) {
			w -= 100;
		}
		else if (UsedSkillSearch(SKILL_ID_BAKURETSU_HADO)){
			w -= 50;
		}
		else if (TimeItemNumSearch(TIME_ITEM_ID_VNDER_CANMER_BAKURETSU_HADO)
				|| TimeItemNumSearch(TIME_ITEM_ID_RING_OF_FLAME_LORD)) {
			w -= 50;
		}

		//----------------------------------------------------------------
		// 「三次職支援　エビパーティー」の効果
		//----------------------------------------------------------------
		switch (g_confDataSanzi[CCharaConfSanzi.CONF_ID_EBI_PARTY]) {
		case 1:
			w += 20;
			break;
		case 2:
			w += 50;
			break;
		case 3:
			w += 100;
			break;
		case 4:
			w += 200;
			break;
		case 5:
			w += 300;
			break;
		}



		if(n_A_PassSkill7[24]) w += 20;





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_SPR_UP);
		if (confval != 0) {
			w += confval;
		}





		spr += ROUNDDOWN(spr * w / 100);
		if(n_A_INT>=120) spr += Math.floor((n_A_INT-120)/2) +4;
		if(g_confDataDebuff[CCharaConfDebuff.CONF_ID_POISON]) spr = 0;


		//----------------------------------------------------------------
		// 計算した結果をキャラクターデータに保存
		//----------------------------------------------------------------
		charaData[CHARA_DATA_INDEX_SPR] = spr;
		// SP自然回復停止フラグ
		if (UsedSkillSearch(SKILL_ID_MAXIMIZE_POWER) || n_A_PassSkill7[40]) {
			charaData[CHARA_DATA_INDEX_SPR_STOP] = 1;
		}
		else {
			charaData[CHARA_DATA_INDEX_SPR_STOP] = 0;
		}






//================================================================================================================================
//================================================================================================================================
//====
//==== 物理攻撃時、プレイヤーに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL; idx <= ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}



		//----------------------------------------------------------------
		// 「黄色い猫じゃらしの模型」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_KIROI_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_KIROI_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 20;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 30;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 20;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 30;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートダマスカス」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_DUMASCUS, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_DUMASCUS, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートスピア」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_SPEAR, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_SPEAR, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートクリーヴァー」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_CLEAVER, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_CLEAVER, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートモーニングスター」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_MORNINGSTAR, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_MORNINGSTAR, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートハンドガン」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_HANDGUN, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_HANDGUN, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートライフル」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_RIFLE, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_RIFLE, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートガトリングガン」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_GATLINGGUN, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_GATLINGGUN, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートショットガン」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_SHOTGUN, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_SHOTGUN, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートグレネードガン」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_GRENADEGUN, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_GRENADEGUN, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートハンターボウ」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_HUNTER_BOW, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_HUNTER_BOW, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートギター」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_GUITAR, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_GUITAR, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートラリエット」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_RARIET, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_RARIET, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルート風魔手裏剣」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_FUMASHURIKEN, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_FUMASHURIKEN, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートカタール」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_KATAR, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_KATAR, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 35;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 20;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_DAMAGE_UP_PLAYER);
		if (confval != 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_ALL] += confval;
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== 物理攻撃時、ドラム形プレイヤーに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_DORAM; idx <= ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_DORAM; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}



		//----------------------------------------------------------------
		// 人間種族の種族特性
		//----------------------------------------------------------------
		if (!IsDoramJob(n_A_JOB)) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_DORAM] += 10;
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== 物理攻撃時、人間形プレイヤーに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_HUMAN; idx <= ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_HUMAN; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== 物理攻撃時、△△形モンスターに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_SOLID; idx <= ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_DRAGON; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}
		for (idx = ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER; idx <= ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		if (n_A_Arrow == ARROW_ID_SEINARU_YA) {
			n_tok[36] += 5;
		}

		// 「ドラゴノロジー」による「竜形モンスターへの物理攻撃力UP」
		// 2025-03-29 SIAさんによる実測確認済み
		n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_DRAGON] += Math.max(LearnedSkillSearch(SKILL_ID_DRAGONOLOGY), UsedSkillSearch(SKILL_ID_DRAGONOLOGY)) * 4;

		switch (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT]) {
		case 1076:
		case 1077:
			if(n_A_Weapon2_ATKplus >= 5) n_tok[37] += 20;
			if(n_A_Weapon2_ATKplus >= 7) n_tok[37] += 20;
		}

		switch (n_A_Equip[EQUIP_REGION_ID_ARMS]) {
		case 1076:
		case 1077:
		case 1086:
		case 1088:
		case 1100:
			if(n_A_Weapon_ATKplus >= 5) n_tok[37] += 20;
			if(n_A_Weapon_ATKplus >= 7) n_tok[37] += 20;
		}

		switch (n_A_Equip[EQUIP_REGION_ID_ARMS]) {
		case 1081:
		case 1096:
		case 1097:
		case 1092:
		case 1093:
		case 1098:
			if(n_A_Weapon_ATKplus >= 5) n_tok[37] += 30;
			if(n_A_Weapon_ATKplus >= 7) n_tok[37] += 30;
		}

		switch (n_A_Equip[EQUIP_REGION_ID_ARMS]) {
		case 1080:
		case 1082:
		case 1087:
		case 1090:
		case 1091:
			if(n_A_Weapon_ATKplus >= 5) n_tok[37] += 20;
			if(n_A_Weapon_ATKplus >= 7) n_tok[37] += 15;
		}

		switch (n_A_Equip[EQUIP_REGION_ID_ARMS]) {
		case 1095:
		case 1094:
			if(n_A_Weapon_ATKplus >= 5) n_tok[37] += 25;
			if(n_A_Weapon_ATKplus >= 7) n_tok[37] += 20;
		}

		switch (n_A_Equip[EQUIP_REGION_ID_ARMS]) {
		case 1089:
		case 1099:
		case 1101:
		case 1102:
			if(n_A_Weapon_ATKplus >= 5) n_tok[37] += 15;
			if(n_A_Weapon_ATKplus >= 7) n_tok[37] += 5;
		}

		switch (n_A_Equip[EQUIP_REGION_ID_ARMS]) {
		case 1103:
			if(n_A_Weapon_ATKplus >= 5) n_tok[37] += 10;
			if(n_A_Weapon_ATKplus >= 7) n_tok[37] += 5;
		}

		switch (n_A_Equip[EQUIP_REGION_ID_ARMS]) {
		case 1076:
		case 1077:
		case 1081:
		case 1082:
		case 1086:
		case 1088:
		case 1089:
		case 1090:
		case 1091:
		case 1092:
		case 1093:
		case 1094:
		case 1096:
		case 1097:
		case 1099:
		case 1100:
		case 1101:
		case 1102:
		case 1103:
			if(n_A_Weapon_ATKplus == 7) n_tok[37] += 9;
			if(n_A_Weapon_ATKplus == 8) n_tok[37] += 16;
			if(n_A_Weapon_ATKplus == 9) n_tok[37] += 25;
			if(n_A_Weapon_ATKplus >= 10) n_tok[37] += 36;
		}
		switch (n_A_Equip[EQUIP_REGION_ID_ARMS]) {
		case 1080:
		case 1087:
		case 1098:
			if(n_A_Weapon_ATKplus == 7) n_tok[37] += 16;
			if(n_A_Weapon_ATKplus == 8) n_tok[37] += 25;
			if(n_A_Weapon_ATKplus == 9) n_tok[37] += 36;
			if(n_A_Weapon_ATKplus >= 10) n_tok[37] += 49;
		}

		if(EquipNumSearch(1643) && CardNumSearch(20)){
			if(n_A_Arrow == ARROW_ID_CURSE_ARROW) n_tok[37] += 2 * n_A_Weapon_ATKplus;
			if(n_A_Arrow == ARROW_ID_SILENCE_ARROW) n_tok[32] += 2 * n_A_Weapon_ATKplus;
			if(n_A_Arrow == ARROW_ID_SLEEP_ARROW) n_tok[34] += 2 * n_A_Weapon_ATKplus;
			if(n_A_Arrow == ARROW_ID_FLASH_ARROW) n_tok[33] += 2 * n_A_Weapon_ATKplus;
		}
		if(n_A_PassSkill7[48]){
			n_tok[36] += 10;
			n_tok[176] += 10;
		}
		if(n_A_BODY_DEF_PLUS >= 6 && EquipNumSearch(1901)) n_tok[32] += n_A_BODY_DEF_PLUS - 5;
		if(n_A_BODY_DEF_PLUS >= 6 && 1930 <= n_A_Equip[EQUIP_REGION_ID_BODY] && n_A_Equip[EQUIP_REGION_ID_BODY] <= 1939){
			var w = 30 + (n_A_Equip[EQUIP_REGION_ID_BODY] - 1930);
			n_tok[w] += n_A_BODY_DEF_PLUS - 5;
		}
		if(EquipNumSearch(2117)) n_tok[37] += n_A_SHOES_DEF_PLUS;

		//----------------------------------------------------------------
		// 「迅雷剣」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (n_A_Equip[EQUIP_REGION_ID_ARMS] == ITEM_ID_ZINRAI_KEN) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_FISH] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_FISH] += 15;
			}
		}
		if (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == ITEM_ID_ZINRAI_KEN) {
			if (n_A_Weapon2_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_FISH] += 10;
			}
			if (n_A_Weapon2_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_FISH] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「迅雷槍」の、過剰精錬による強化
		// 「迅雷鎚」の、過剰精錬による強化
		// 「迅雷弓」の、過剰精錬による強化
		// 「迅雷銃」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_ZINRAI_YARI) > 0
			|| EquipNumSearch(ITEM_ID_ZINRAI_TSUCHI) > 0
			|| EquipNumSearch(ITEM_ID_ZINRAI_YUMI) > 0
			|| EquipNumSearch(ITEM_ID_ZINRAI_ZYU) > 0) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_FISH] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_FISH] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「迅雷弓」の、矢装備による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_ZINRAI_YUMI) > 0 && n_A_Arrow == ARROW_ID_YA) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_FISH] += 15;
		}


		//----------------------------------------------------------------
		// 「無双剣」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (n_A_Equip[EQUIP_REGION_ID_ARMS] == ITEM_ID_MUSO_KEN) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ANIMAL] += 10;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_PLANT] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ANIMAL] += 15;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_PLANT] += 15;
			}
		}
		if (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == ITEM_ID_MUSO_KEN) {
			if (n_A_Weapon2_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ANIMAL] += 10;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_PLANT] += 10;
			}
			if (n_A_Weapon2_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ANIMAL] += 15;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_PLANT] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「無双槍」の、過剰精錬による強化
		// 「無双鎚」の、過剰精錬による強化
		// 「無双弓」の、過剰精錬による強化
		// 「無双銃」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_MUSO_YARI) > 0
			|| EquipNumSearch(ITEM_ID_MUSO_TSUCHI) > 0
			|| EquipNumSearch(ITEM_ID_MUSO_YUMI) > 0
			|| EquipNumSearch(ITEM_ID_MUSO_ZYU) > 0) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ANIMAL] += 10;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_PLANT] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ANIMAL] += 15;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_PLANT] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「無双弓」の、矢装備による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_MUSO_YUMI) > 0 && n_A_Arrow == ARROW_ID_YA) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ANIMAL] += 15;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_PLANT] += 15;
		}

		//----------------------------------------------------------------
		// 「アヴェンジャークレイモア」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_CLAYMORE)) {
			if (n_A_Weapon_ATKplus >= 5) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 25;
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 20;
		}

		//----------------------------------------------------------------
		// 「アヴェンジャーランス」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_LANCE)) {
			if (n_A_Weapon_ATKplus >= 5) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 30;
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 30;
		}

		//----------------------------------------------------------------
		// 「アヴェンジャーツーハンドアックス」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_TWOHAND_AXE)) {
			if (n_A_Weapon_ATKplus >= 5) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 20;
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 15;
		}

		//----------------------------------------------------------------
		// 「アヴェンジャーブラッディロア」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_BLOODYROAR)) {
			if (n_A_Weapon_ATKplus >= 5) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 20;
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 15;
		}

		//----------------------------------------------------------------
		// 「アヴェンジャージャマダハル」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_JAMADHAR)) {
			if (n_A_Weapon_ATKplus >= 5) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 15;
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 10;
		}

		//----------------------------------------------------------------
		// 「アヴェンジャーハンターボウ」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_HUNTERBOW)) {
			if (n_A_Weapon_ATKplus >= 5) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 20;
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 20;
		}

		//----------------------------------------------------------------
		// 「アヴェンジャーハンドガン」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_HANDGUN)) {
			if (n_A_Weapon_ATKplus >= 5) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 20;
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 20;
		}

		//----------------------------------------------------------------
		// 「アヴェンジャーライフル」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_RIFLE)) {
			if (n_A_Weapon_ATKplus >= 5) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 35;
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 35;
		}

		//----------------------------------------------------------------
		// 「アヴェンジャーガトリングガン」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_GATLINGGUN)) {
			if (n_A_Weapon_ATKplus >= 5) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 25;
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 25;
		}

		//----------------------------------------------------------------
		// 「アヴェンジャーショットガン」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_SHOTGUN)) {
			if (n_A_Weapon_ATKplus >= 5) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 45;
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 45;
		}

		//----------------------------------------------------------------
		// 「アヴェンジャーグレネードガン」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_GRENADEGUN)) {
			if (n_A_Weapon_ATKplus >= 5) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 30;
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 30;
		}

		//----------------------------------------------------------------
		// 「アヴェンジャー風魔手裏剣」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_FUMASHURIKEN)) {
			if (n_A_Weapon_ATKplus >= 5) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 30;
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 30;
		}

		//----------------------------------------------------------------
		// 「アヴェンジャークレイモア」の、「虐殺Ｌｖ２」による効果
		// 「アヴェンジャーツーハンドアックス」の、「虐殺Ｌｖ２」による効果
		// 「アヴェンジャー風魔手裏剣」の、「虐殺Ｌｖ２」による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_CLAYMORE)
			|| EquipNumSearch(ITEM_ID_AVENGER_TWOHAND_AXE)
			|| EquipNumSearch(ITEM_ID_AVENGER_FUMASHURIKEN)) {
			if(n_A_Weapon_ATKplus == 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 16;
			if(n_A_Weapon_ATKplus == 8) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 25;
			if(n_A_Weapon_ATKplus == 9) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 36;
			if(n_A_Weapon_ATKplus >= 10) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 49;
		}

		//----------------------------------------------------------------
		// 「アヴェンジャーランス」の、「虐殺Ｌｖ１」による効果
		// 「アヴェンジャーブラッディロア」の、「虐殺Ｌｖ１」による効果
		// 「アヴェンジャージャマダハル」の、「虐殺Ｌｖ１」による効果
		// 「アヴェンジャーハンターボウ」の、「虐殺Ｌｖ１」による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_LANCE)
			|| EquipNumSearch(ITEM_ID_AVENGER_BLOODYROAR)
			|| EquipNumSearch(ITEM_ID_AVENGER_JAMADHAR)
			|| EquipNumSearch(ITEM_ID_AVENGER_HUNTERBOW)) {
			if(n_A_Weapon_ATKplus == 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 9;
			if(n_A_Weapon_ATKplus == 8) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 16;
			if(n_A_Weapon_ATKplus == 9) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 25;
			if(n_A_Weapon_ATKplus >= 10) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN] += 36;
		}



		//----------------------------------------------------------------
		// 「一碧剣」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (n_A_Equip[EQUIP_REGION_ID_ARMS] == ITEM_ID_IPPEKI_KEN) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_SOLID] += 10;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_DEMON] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_SOLID] += 15;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_DEMON] += 15;
			}
		}
		if (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == ITEM_ID_IPPEKI_KEN) {
			if (n_A_Weapon2_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_SOLID] += 10;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_DEMON] += 10;
			}
			if (n_A_Weapon2_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_SOLID] += 15;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_DEMON] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「一碧槍」の、過剰精錬による強化
		// 「一碧鎚」の、過剰精錬による強化
		// 「一碧弓」の、過剰精錬による強化
		// 「一碧銃」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_IPPEKI_YARI) > 0
			|| EquipNumSearch(ITEM_ID_IPPEKI_TSUCHI) > 0
			|| EquipNumSearch(ITEM_ID_IPPEKI_YUMI) > 0
			|| EquipNumSearch(ITEM_ID_IPPEKI_ZYU) > 0) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_SOLID] += 10;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_DEMON] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_SOLID] += 15;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_DEMON] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「一碧弓」の、矢装備による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_IPPEKI_YUMI) > 0 && n_A_Arrow == ARROW_ID_YA) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_SOLID] += 15;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_DEMON] += 15;
		}



		//----------------------------------------------------------------
		// 「死霊魔術師のニット帽」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SHIRYOMAZYUTSUSHINO_NITTOBO)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 10;
			if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 10;

			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_UNDEAD] += vartmp * itemCount;
		}



		//----------------------------------------------------------------
		// 「業風石　ゲラドリア　セット」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GOFUSEKI_GERADRIA)) > 0) {
			vartmp = 0;

			if (n_A_Weapon_ATKplus >= 7) {
				vartmp += 30;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				vartmp += 20;
			}

			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_INSECT] += vartmp * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_FISH] += vartmp * itemCount;
		}



		//----------------------------------------------------------------
		// 「深淵のドレス」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SHINENNO_DRESS)) > 0) {
			vartmp = 0;

			if (n_A_BODY_DEF_PLUS >= 5) vartmp += 10;
			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 15;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 15;

			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_UNDEAD] += vartmp * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_DEMON] += vartmp * itemCount;
		}



		//----------------------------------------------------------------
		// 「猟乱剣」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (n_A_Equip[EQUIP_REGION_ID_ARMS] == ITEM_ID_RYORAN_KEN) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_INSECT] += 10;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_INSECT] += 15;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER] += 15;
			}
		}
		if (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == ITEM_ID_RYORAN_KEN) {
			if (n_A_Weapon2_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_INSECT] += 10;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER] += 10;
			}
			if (n_A_Weapon2_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_INSECT] += 15;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「猟乱槍」の、過剰精錬による強化
		// 「猟乱鎚」の、過剰精錬による強化
		// 「猟乱弓」の、過剰精錬による強化
		// 「猟乱銃」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_RYORAN_YARI) > 0
			|| EquipNumSearch(ITEM_ID_RYORAN_TSUCHI) > 0
			|| EquipNumSearch(ITEM_ID_RYORAN_YUMI) > 0
			|| EquipNumSearch(ITEM_ID_RYORAN_ZYU) > 0) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_INSECT] += 10;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_INSECT] += 15;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「猟乱弓」の、矢装備による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_RYORAN_YUMI) > 0 && n_A_Arrow == ARROW_ID_YA) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_INSECT] += 15;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER] += 15;
		}



		//----------------------------------------------------------------
		// 「キングスガード」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KINGS_GUARD)) > 0) {
			vartmp = 0;

			if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 15;
			if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 15;

			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_UNDEAD] += vartmp * itemCount;
		}



		//----------------------------------------------------------------
		// 「勇者のブローチ」の、職業による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_YUSHANO_BROACH)) > 0) {
			if (IsSameJobClass(JOB_ID_RUNEKNIGHT) || IsSameJobClass(JOB_ID_ROYALGUARD)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ALL] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「勇者のブローチ」の、職業による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_YUSHANO_BROACH)) > 0) {
			if (IsSameJobClass(JOB_ID_ARCBISHOP) || IsSameJobClass(JOB_ID_SHURA)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ALL] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「勇者のブローチ」の、職業による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_YUSHANO_BROACH)) > 0) {
			if (IsSameJobClass(JOB_ID_MECHANIC) || IsSameJobClass(JOB_ID_GENETIC)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ALL] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョンハンターボウ」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_HUNTER_BOW)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ANIMAL] += 3 * n_A_Weapon_ATKplus * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「クリスタルブレイドネックレス　エンチャント強撃セット」の、職業による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_CRYSTAL_BLADE_NECKLACE_KYOGEKI)) > 0) {
			switch (GetLowerJobSeriesID(n_A_JOB)) {
			case JOB_SERIES_ID_NOVICE:
			case JOB_SERIES_ID_SWORDMAN:
			case JOB_SERIES_ID_ARCHER:
			case JOB_SERIES_ID_ACOLYTE:
			case JOB_SERIES_ID_MERCHANT:
			case JOB_SERIES_ID_TAEGKUON:
			case JOB_SERIES_ID_GUNSLINGER:
			case JOB_SERIES_ID_SUMMONER:
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ALL] += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「パラケルススコート」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_PARACELSUS_COAT)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ALL] += 7 * LearnedSkillSearch(SKILL_ID_CRAZY_WEED) * itemCount;
		}

		//----------------------------------------------------------------
		// 「ダークトライアド」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_DARK_TRIAD)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ALL] += 7 * LearnedSkillSearch(SKILL_ID_TRIANGLE_SHOT) * itemCount;
		}

		//----------------------------------------------------------------
		// 「光輝」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KOKI)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ALL] += 7 * LearnedSkillSearch(SKILL_ID_SHURASHINDAN) * itemCount;
		}

		//----------------------------------------------------------------
		// 「アサルトスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ASSAULT_SUIT)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ALL] += 7 * LearnedSkillSearch(SKILL_ID_RANGER_MAIN) * itemCount;
		}

		//----------------------------------------------------------------
		// 「デスブリンガー」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_DEATH_BRINGER)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ALL] += 7 * LearnedSkillSearch(SKILL_ID_COUNTER_SLASH) * itemCount;
		}

		//----------------------------------------------------------------
		// 「プラチナムアビトレイター」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_PLATINUM_ARBITRATOR)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ALL] += 14 * LearnedSkillSearch(SKILL_ID_PINGPOINT_ATTACK) * itemCount;
		}





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_PHYSICAL_DAMAGE_UP_RACE);
		if (confval != 0) {
			for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_SOLID; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_DRAGON; i++) {
				n_tok[i] += confval;
			}
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_DORAM] += confval;
		}

		// TODO: 四次対応
		for (idx = ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_SOLID; idx <= ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_DRAGON; idx++) {
			n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
		}
		for (idx = ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER; idx <= ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER; idx++) {
			n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
		}



		if (n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ALL] != 0) {
			for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_SOLID; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_DRAGON; i++) {
				n_tok[i] += n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ALL];
			}
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_PLAYER_DORAM] += n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_RACE_ALL];
		}



//================================================================================================================================
//================================================================================================================================
//====
//==== 物理攻撃時、△△サイズのモンスターに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL; idx <= ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		if(EquipNumSearch(1644)) n_tok[28] += n_A_Weapon_ATKplus;
		if(n_tok[260] != 0){
			n_tok[27] += n_tok[260];
			n_tok[28] += n_tok[260];
			n_tok[29] += n_tok[260];
		}



		//----------------------------------------------------------------
		// 「スナイピングシューズ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SNIPING_SHOES)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 5 * LearnedSkillSearch(SKILL_ID_WUG_RIDER) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 5 * LearnedSkillSearch(SKILL_ID_WUG_RIDER) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 5 * LearnedSkillSearch(SKILL_ID_WUG_RIDER) * itemCount;
		}



		//----------------------------------------------------------------
		// 「オウルバロンのマント　エクスキューショナーカード」の、過剰精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_AWL_BARRONNO_MANT_EXCUTIONER_CARD)) > 0) {
			if (n_A_SHOULDER_DEF_PLUS >= 8) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 25 * itemCount;
			}
		}



		//----------------------------------------------------------------
		// 「オウルバロンのマント　オーガトゥースカード」の、過剰精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_AWL_BARRONNO_MANT_ORGE_TOOTH_CARD)) > 0) {
			if (n_A_SHOULDER_DEF_PLUS >= 8) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 25 * itemCount;
			}
		}



		//----------------------------------------------------------------
		// 「オウルバロンのマント　ミスティルティンカード」の、過剰精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_AWL_BARRONNO_MANT_MISTILTINE_CARD)) > 0) {
			if (n_A_SHOULDER_DEF_PLUS >= 8) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 25 * itemCount;
			}
		}



		//----------------------------------------------------------------
		// 「よちよちウリボウスタイ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_YOCHIYOCHI_URIBO_SUTAI)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 2 * LearnedSkillSearch(SKILL_ID_MURENO_CHIKARA) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 2 * LearnedSkillSearch(SKILL_ID_MURENO_CHIKARA) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 2 * LearnedSkillSearch(SKILL_ID_MURENO_CHIKARA) * itemCount;
		}



		//----------------------------------------------------------------
		// 「隷属の首輪」の、素ＳＴＲと素ＬＵＫによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_REIZOKUNO_KUBIWA)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 4 * ROUNDDOWN((SU_STR + SU_LUK) / 50) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 4 * ROUNDDOWN((SU_STR + SU_LUK) / 50) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 4 * ROUNDDOWN((SU_STR + SU_LUK) / 50) * itemCount;
		}



		//----------------------------------------------------------------
		// 「グレースアニマルローブ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_ANIMAL_ROBE)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 7 * LearnedSkillSearch(SKILL_ID_MURENO_CHIKARA) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 7 * LearnedSkillSearch(SKILL_ID_MURENO_CHIKARA) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 7 * LearnedSkillSearch(SKILL_ID_MURENO_CHIKARA) * itemCount;
		}



		//----------------------------------------------------------------
		// 「グレースガトリングスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_GATLING_SUIT)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 7 * LearnedSkillSearch(SKILL_ID_PLATINUM_ALTER) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 7 * LearnedSkillSearch(SKILL_ID_PLATINUM_ALTER) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 7 * LearnedSkillSearch(SKILL_ID_PLATINUM_ALTER) * itemCount;
		}



		//----------------------------------------------------------------
		// 「太極の耳飾り(黄)」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_TAIKYOKUNO_MIMIKAZARI_KIIRO)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_MANGETSU_KYAKU) >= 10) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 15 * itemCount;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 15 * itemCount;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 15 * itemCount;
			}
		}



		//----------------------------------------------------------------
		// 「グロトネリーア」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GLOTONERIA)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 1 * LearnedSkillSearch(SKILL_ID_AUTO_SHADOW_SPELL) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 1 * LearnedSkillSearch(SKILL_ID_AUTO_SHADOW_SPELL) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 1 * LearnedSkillSearch(SKILL_ID_AUTO_SHADOW_SPELL) * itemCount;
		}



		//----------------------------------------------------------------
		// 「辰戌の腕輪」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_TATSUINUNO_UDEWA)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_SHURASHINDAN) >= 10) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 10 * itemCount;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 10 * itemCount;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 10 * itemCount;
			}
		}



		//----------------------------------------------------------------
		// 「インペリアル天地スーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_TENCHI_SUIT)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 4 * Math.floor(LearnedSkillSearch(SKILL_ID_SHURASHINDAN) / 2) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 4 * Math.floor(LearnedSkillSearch(SKILL_ID_SHURASHINDAN) / 2) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 4 * Math.floor(LearnedSkillSearch(SKILL_ID_SHURASHINDAN) / 2) * itemCount;
		}



		//----------------------------------------------------------------
		// 「グレース天地スーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_TENCHI_SUIT)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 7 * Math.floor(LearnedSkillSearch(SKILL_ID_SHURASHINDAN) / 2) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 7 * Math.floor(LearnedSkillSearch(SKILL_ID_SHURASHINDAN) / 2) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 7 * Math.floor(LearnedSkillSearch(SKILL_ID_SHURASHINDAN) / 2) * itemCount;
		}



		//----------------------------------------------------------------
		// 「ロードオブロイヤルズ」の、素ＳＴＲと素ＩＮＴによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_LORD_OF_ROYALS)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 4 * ROUNDDOWN((SU_STR + SU_INT) / 50) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 4 * ROUNDDOWN((SU_STR + SU_INT) / 50) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 4 * ROUNDDOWN((SU_STR + SU_INT) / 50) * itemCount;
		}



		//----------------------------------------------------------------
		// 「パラケルススグローブ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_PARACELSUS_GLOVE)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_FIRE_EXPANSION) >= 5) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 10 * itemCount;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 10 * itemCount;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 10 * itemCount;
			}
		}



		//----------------------------------------------------------------
		// 「インペリアルカルティベイションコート」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_IMPERIAL_CULTIVATION_COAT)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 4 * LearnedSkillSearch(SKILL_ID_FIRE_EXPANSION) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 4 * LearnedSkillSearch(SKILL_ID_FIRE_EXPANSION) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 4 * LearnedSkillSearch(SKILL_ID_FIRE_EXPANSION) * itemCount;
		}



		//----------------------------------------------------------------
		// 「グレースカルティベイションコート」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_GRACE_CULTIVATION_COAT)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 7 * LearnedSkillSearch(SKILL_ID_FIRE_EXPANSION) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 7 * LearnedSkillSearch(SKILL_ID_FIRE_EXPANSION) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 7 * LearnedSkillSearch(SKILL_ID_FIRE_EXPANSION) * itemCount;
		}



		//----------------------------------------------------------------
		// 「夢見る赤羊」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_YUMEMIRU_AKA_HITSUZI)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 5 * LearnedSkillSearch(SKILL_ID_WUG_RIDER) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 5 * LearnedSkillSearch(SKILL_ID_WUG_RIDER) * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 5 * LearnedSkillSearch(SKILL_ID_WUG_RIDER) * itemCount;
		}



		//----------------------------------------------------------------
		// 「サンクトゥス」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SANCTUS)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_SENRYU_SHOTEN) >= 10) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 15 * itemCount;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 15 * itemCount;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 15 * itemCount;
			}
		}



		//----------------------------------------------------------------
		// 「携帯式サポートシステム」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KETAISHIKI_SUPPORT_SYSTEM)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_NUTRAL_BARRIER) >= 3) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL] += 15 * itemCount;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_MEDIUM] += 15 * itemCount;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE] += 15 * itemCount;
			}
		}






		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_PHYSICAL_DAMAGE_UP_SIZE);
		if (confval != 0) {
			for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE; i++) {
				n_tok[i] += confval;
			}
		}

		// TODO: 四次対応
		for (idx = ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_SMALL; idx <= ITEM_SP_PHYSICAL_DAMAGE_UP_SIZE_LARGE; idx++) {
			n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== 公式サイトで「遠距離物理攻撃 + ◯%」と表記される
//==== 遠距離物理攻撃で与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================
	{
		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_LONGRANGE_DAMAGE_UP; idx <= ITEM_SP_LONGRANGE_DAMAGE_UP; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		// 弓装備時、遠距離物理攻撃で与えるダメージ増加
		if (n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP_ONLY_BOW] > 0) {
			if (n_A_WeaponType == ITEM_KIND_BOW) {
				n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP_ONLY_BOW];
			}
		}

		if(EquipNumSearch(ITEM_ID_DAICHINO_YUMI) && n_A_Arrow == ARROW_ID_GANSEKINO_YA) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 25;
		if(EquipNumSearch(ITEM_ID_MOERU_YUMI) && n_A_Arrow == ARROW_ID_HONOONO_YA) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 25;
		if(EquipNumSearch(ITEM_ID_HYOTENNO_YUMI) && n_A_Arrow == ARROW_ID_SUISHONO_YA) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 25;
		if(EquipNumSearch(ITEM_ID_HAYATENO_YUMI) && n_A_Arrow == ARROW_ID_KAZENO_YA) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 25;
		if(EquipNumSearch(ITEM_ID_ORC_ARCHER_YUMI) && n_A_Arrow == ARROW_ID_KOTETSUNO_YA) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 50;
		if(EquipNumSearch(ITEM_SET_ID_SENCHO_BOUSHI_AND_PIPE)) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += n_A_HEAD_DEF_PLUS;
		if(EquipNumSearch(ITEM_ID_SNIPER_GOGGLE) && SU_AGI >= 120) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 4;
		if(EquipNumSearch(ITEM_ID_HUNTER_BOW) && n_A_Arrow == ARROW_ID_KARYUDONO_YA) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 50;
		if(EquipNumSearch(ITEM_ID_ELVEN_BOW) && n_A_Arrow == ARROW_ID_ELFNO_YA) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 50;
		if(EquipNumSearch(ITEM_ID_RUDRANO_YUMI) && n_A_Arrow == ARROW_ID_ORIDEOKONNO_YA) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 50;
		if(EquipNumSearch(ITEM_ID_HYPPATSUHYAKUCHUNO_OMAMORI) && SU_DEX >= 100){
			var wx = EquipNumSearch(ITEM_ID_HYPPATSUHYAKUCHUNO_OMAMORI);
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 1 * wx;
			if(SU_DEX >= 120) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 2 * wx;
		}
		if(EquipNumSearch(ITEM_ID_SHIRAHANO_SUIT)) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += n_A_BODY_DEF_PLUS * 2;
		if(n_A_BODY_DEF_PLUS >= 7 && n_A_SHOULDER_DEF_PLUS >= 7 && n_A_SHOES_DEF_PLUS >= 7 && EquipNumSearch(ITEM_SET_ID_SHIRAHANO_SUIT_ARTIFACT)) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 15;
		if(n_A_BODY_DEF_PLUS >= 7 && n_A_SHOULDER_DEF_PLUS >= 7 && n_A_SHOES_DEF_PLUS >= 7 && EquipNumSearch(ITEM_SET_ID_KUROHANO_SUIT_ARTIFACT)) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] -= 10;
		if(n_A_HEAD_DEF_PLUS >= 5 && EquipNumSearch(1634)){
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 3;
			if(n_A_HEAD_DEF_PLUS >= 7) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 5;
		}
		if(EquipNumSearch(1695)) if(GetLowerJobSeriesID(n_A_JOB)==4) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 10;
		if(n_A_BaseLV >= 100 && EquipNumSearch(1764)){
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 1;
			if(n_A_BaseLV >= 150) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 1;
		}

		// 技巧の時空ブーツ
		if(SU_DEX >= 120 && EquipNumSearch(1921)) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 5;
		}
		if(SU_DEX >= 120 && EquipNumSearch(ITEM_ID_GIKONO_ZIKU_BOOTS_S1)) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 5;
		}

		if(SU_DEX >= 110 && EquipNumSearch(1950)) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 1 * EquipNumSearch(1950);
		if(n_A_Weapon_ATKplus >= 7 && EquipNumSearch(2024)) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 5;
		if(n_A_HEAD_DEF_PLUS >= 6 && TimeItemNumSearch(64) && EquipNumSearch(2085)) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += (n_A_HEAD_DEF_PLUS - 5);
		if(CardNumSearch(739)) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 1 * ROUNDDOWN(SU_DEX / 10);
		if(EquipNumSearch(2355)){
			if(n_A_BODY_DEF_PLUS >= 8) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 2;
			if(n_A_BODY_DEF_PLUS >= 9) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 3;
			if(n_A_Arrow == ARROW_ID_HONOONO_YA && EquipNumSearch(2356)) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 20;
			if(n_A_Arrow == ARROW_ID_SUISHONO_YA && EquipNumSearch(2357)) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 20;
			if(n_A_Arrow == ARROW_ID_GANSEKINO_YA && EquipNumSearch(2358)) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 20;
			if(n_A_Arrow == ARROW_ID_KAZENO_YA && EquipNumSearch(2359)) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 20;
		}
		if(EquipNumSearch(2367)){
			if(n_A_SHOES_DEF_PLUS >= 8) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += (n_A_SHOES_DEF_PLUS - 7);
		}

		//----------------------------------------------------------------
		// 「戦死者のマント」の、純粋なＤＥＸが１３０の時
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_SENSHISHANO_MANT)){
			if (SU_DEX >= 130) {
				if (EquipNumSearchFurubitaSet() > 0) {
					n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 10;
				} else {
					n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 5;
				}
			}
		}

		//----------------------------------------------------------------
		// 「天狗の巻物セット」の、強化
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_SET_ID_TENGUNO_MAKIMONO_KARASUTENGU)) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 1;
			if (SU_STR >= 108) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 1;
			if (SU_STR >= 120) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 1;
		}

		//----------------------------------------------------------------
		// 「元素のタオル」の、＋８以上精錬による強化
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_GENSONO_TOWEL)) {
			if(n_A_SHOULDER_DEF_PLUS >= 8) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 2;
			if(n_A_SHOULDER_DEF_PLUS >= 9) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 3;
		}

		//----------------------------------------------------------------
		// 「パワードメイル」の、過剰精錬による強化
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_POWERED_MAIL)) {
			if(n_A_BODY_DEF_PLUS >= 5) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 2 * (n_A_BODY_DEF_PLUS - 4);
		}

		//----------------------------------------------------------------
		// 「ギガントブーツ　ボウセット」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_GIGANT_BOOTS_GIGANT_BOW)) {
			if (n_A_SHOES_DEF_PLUS >= 7) {
				n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 3 * ROUNDDOWN(SU_STR / 10);
			}
		}

		//----------------------------------------------------------------
		// 「フェアリーフのギリ粉」の、素ＤＥＸによる強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_FAIRLEAFNO_GIRIKO)) {
			if (SU_DEX >= 100) {
				n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 5;
			}
		}


		//----------------------------------------------------------------
		// 「巨人の加護　ギガントボウセット」の、素ＳＴＲによる強化
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_SET_ID_KYOZINNO_KAGO_GIGANT_BOW)) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 2 * ROUNDDOWN(SU_STR / 10);
		}

		//----------------------------------------------------------------
		// 「スナイピングベール」の、過剰精錬による強化
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_SNIPING_VEIL)) {
			if (n_A_SHOULDER_DEF_PLUS >= 7) {
				n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 3;
			}
			if (n_A_SHOULDER_DEF_PLUS >= 9) {
				n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 3;
			}
		}

		//----------------------------------------------------------------
		// 「共和国の帽子」の、過剰精錬による強化
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_KYOWAKOKUNO_BOSHI)) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 4 * ROUNDDOWN(n_A_HEAD_DEF_PLUS / 3);
		}

		//----------------------------------------------------------------
		// 「メンブリッツマント」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_MENBRITZ_MANT)) > 0) {
			vartmp = 0;

			if (n_A_SHOULDER_DEF_PLUS >= 5) vartmp += 1 * ROUNDDOWN(SU_DEX / 60);
			if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 1 * ROUNDDOWN(SU_DEX / 10);

			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「メンブリッツマント　メンブリッツカードセット」の、素ＤＥＸによる効果（ペナルティ）
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_MENBRITZ_MANT_MENBRITZ_CARD)) > 0) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += -1 * ROUNDDOWN(SU_DEX / 10) * itemCount;
		}

		//----------------------------------------------------------------
		// 「インペリアルグローブ　インペリアルフェザーセット」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_IMPERIAL_GLOVE_IMPERIAL_FEATHER)) > 0) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 2 * LearnedSkillSearch(SKILL_ID_OVER_BLAND) * itemCount;
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 2 * LearnedSkillSearch(SKILL_ID_CANNON_SPEAR) * itemCount;
		}

		//----------------------------------------------------------------
		// 「灰羽のブーツ」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_HAIHANENO_BOOTS)) > 0) {
			vartmp = 0;

			if (n_A_SHOES_DEF_PLUS >= 5) vartmp += 3;
			if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 5;

			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「黄色い猫じゃらしの模型」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_KIROI_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_KIROI_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 3 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 3 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「虹色のスカーフ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIZIIRONO_SCARF)) > 0) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 2 * LearnedSkillSearch(SKILL_ID_AIMED_BOLT) * itemCount;
		}

		//----------------------------------------------------------------
		// 「ファフニールスケイル」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_FAFNIR_SCALE)) > 0) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 2 * LearnedSkillSearch(SKILL_ID_FIRE_DRAGON_BREATH) * itemCount;
		}

		//----------------------------------------------------------------
		// 「パワフルAスケルトンカード」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_POWERFUL_A_SKELETON)) > 0) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 1 * ROUNDDOWN(n_A_BaseLV / 20) * cardCount;
		}

		//----------------------------------------------------------------
		// 「レンジャーセシル(MVP)カード」の、職業による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_RANGER_CECIL_MVP)) > 0) {
			if (IsSameJobClass(JOB_ID_RANGER)) {
				n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 15 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「キックステップカード」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_ID_KICK_STEP)) {
			if (n_A_SHOES_DEF_PLUS >= 7) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 3;
			if (n_A_SHOES_DEF_PLUS >= 9) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 2;
		}

		//----------------------------------------------------------------
		// 「獄エンチャント」の、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_ID_GOKU)) {
			// 職業限定の効果
			if (IsSameJobClass(JOB_ID_SHURA)) {
				n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 10;
			}
		}

		//----------------------------------------------------------------
		// 「死のニーヴ(技巧)」の、精錬による効果
		//----------------------------------------------------------------
		cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_GIKO, CARD_REGION_ID_ARMS_RIGHT_ANY);
		cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_GIKO, CARD_REGION_ID_ARMS_LEFT_ANY);
		cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_GIKO, CARD_REGION_ID_HEAD_TOP_ANY);
		cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_GIKO, CARD_REGION_ID_SHIELD_ANY);
		cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_GIKO, CARD_REGION_ID_BODY_ANY);
		cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_GIKO, CARD_REGION_ID_SHOULDER_ANY);
		cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_GIKO, CARD_REGION_ID_SHOES_ANY);
		if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
			+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

			// 右手武器へのエンチャント
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 1;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 1;
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += vartmp * cardCountRight

			// 左手武器へのエンチャント
			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 1;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 1;
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += vartmp * cardCountLeft

			// 頭防具へのエンチャント
			vartmp = 0;
			if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 1;
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += vartmp * cardCountHeadTop

			// 盾防具へのエンチャント
			vartmp = 0;
			if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 1;
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += vartmp * cardCountShield

			// 体防具へのエンチャント
			vartmp = 0;
			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 1;
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += vartmp * cardCountBody

			// 肩防具へのエンチャント
			vartmp = 0;
			if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 1;
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += vartmp * cardCountShoulder

			// 靴防具へのエンチャント
			vartmp = 0;
			if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 1;
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += vartmp * cardCountShoes

			// アクセサリへのエンチャント
			// 精錬できないので処理不要
		}

		if(CardNumSearch(829)){
			if(n_A_HEAD_DEF_PLUS >= 7) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 2 * CardNumSearch(829);
			if(n_A_HEAD_DEF_PLUS >= 9) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 1 * CardNumSearch(829);
		}
		if(SU_STR >= 108 && EquipNumSearch(2395)){
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 2;
			if(SU_STR >= 120) n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 3;
		}

		//----------------------------------------------------------------
		// 「リングオブヴィーナス」の、素ＤＥＸによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_RING_OF_VENUS, EQUIP_REGION_ID_ACCESSARY_1)) > 0) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 1 * Math.floor(SU_DEX / 10) * itemCount;
		}

		//----------------------------------------------------------------
		// 「暴威のマフラー」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_BOINO_MUFFLER)) > 0) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 4 * LearnedSkillSearch(SKILL_ID_FRIGNO_UTA) * itemCount;
		}

		//----------------------------------------------------------------
		// 「アーヌルス イラ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_ANULUS_IRA)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_SHURASHINDAN) >= 10) {
				n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「グレースクルシフォームスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_CRUCIFORM_SUIT)) > 0) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 12 * LearnedSkillSearch(SKILL_ID_HAPPO_KUNAI) * itemCount;
		}

		//----------------------------------------------------------------
		// 「インペリアルレインストームスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_RAINSTORM_SUIT)) > 0) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 4 * LearnedSkillSearch(SKILL_ID_FRIGNO_UTA) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレースレインストームスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_RAINSTORM_SUIT)) > 0) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 12 * LearnedSkillSearch(SKILL_ID_FRIGNO_UTA) * itemCount;
		}

		//----------------------------------------------------------------
		// 「ファフニールヘルム」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_FAFNIR_HELM)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_WATER_DRAGON_BREATH) >= 10) {
				if (LearnedSkillSearch(SKILL_ID_FIRE_DRAGON_BREATH) >= 10) {
					n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 50 * itemCount;
				}
			}
		}

		//----------------------------------------------------------------
		// 「改良型パワードスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KAIRYOGATA_POWERED_SUIT)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_NUTRAL_BARRIER) >= 3) {
				n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 70 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ツインヘッド・ドラゴンメイル」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_TWIN_HEAD_DRAGON_MAIL)) > 0) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 7 * LearnedSkillSearch(SKILL_ID_FIRE_DRAGON_BREATH) * itemCount;
		}

		//----------------------------------------------------------------
		// 「ツインヘッド・ドラゴンブーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_TWIN_HEAD_DRAGON_BOOTS)) > 0) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 4 * LearnedSkillSearch(SKILL_ID_FIRE_DRAGON_BREATH) * itemCount;
		}

		//----------------------------------------------------------------
		// 「ゾディアック　天秤宮のダイアデム」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_TENBINKYUNO_DIADEM)) {
			if (IsSameJobClass(JOB_ID_RUNEKNIGHT)) {
				n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 2 * n_A_HEAD_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　天秤宮のメイル」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_TENBINKYUNO_MAIL)) {
			if (IsSameJobClass(JOB_ID_RUNEKNIGHT)) {
				n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「剛勇無双の籠手＋剛勇無双の貫セット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GOYUMUSONO_KOTE_GOYUMUSONO_KACCHU)) > 0) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 2 * n_A_BODY_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// レンジャー　アンリミット
		// PvP, GvG 等では効果を発揮しない（YEは使用可能の模様）
		//----------------------------------------------------------------
		switch (n_B_TAISEI[MOB_CONF_PLAYER_ID_SENTO_AREA]) {
		case MOB_CONF_PLAYER_ID_SENTO_AREA_NONE:
		case MOB_CONF_PLAYER_ID_SENTO_AREA_MH:
		case MOB_CONF_PLAYER_ID_SENTO_AREA_YE:
		case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_GVG_TE:
		case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_COLOSSEUM:
		case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_SHINKIRO:

			// カラミティゲイル状態では無い場合のみ処理する
			if (UsedSkillSearch(SKILL_ID_CALAMITY_GALE) == 0) {
				sklLv = UsedSkillSearch(SKILL_ID_UNLIMIT);
				if (sklLv > 0) {
					// 特定の戦闘エリアでの補正
					switch (n_B_TAISEI[MOB_CONF_PLAYER_ID_SENTO_AREA]) {
						case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_COLOSSEUM:
							n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 250 + 20 * sklLv;
							break;
						default:
							n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 50 * sklLv;
							break;
					}
				}
			}
		}

		//----------------------------------------------------------------
		// ウィンドホーク　カラミティゲイル
		// PvP, GvG 等では効果を発揮しない（YEは使用可能の模様）
		//----------------------------------------------------------------
		switch (n_B_TAISEI[MOB_CONF_PLAYER_ID_SENTO_AREA]) {
			case MOB_CONF_PLAYER_ID_SENTO_AREA_NONE:
			case MOB_CONF_PLAYER_ID_SENTO_AREA_MH:
			case MOB_CONF_PLAYER_ID_SENTO_AREA_YE:
			case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_GVG_TE:
			case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_COLOSSEUM:
			case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_SHINKIRO:
	
				sklLv = UsedSkillSearch(SKILL_ID_CALAMITY_GALE);
				if (sklLv > 0) {
	
					// 特定の戦闘エリアでの補正
					switch (n_B_TAISEI[MOB_CONF_PLAYER_ID_SENTO_AREA]) {
	
					case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_COLOSSEUM:
						//n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 250 + 20 * 5;//アンリミットLV.5発動状態にする。
						break;
	
					default:
						n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 50 * 5;//アンリミットLV.5発動状態にする。
						break;
	
					}
				}
			}

		/** 三次職支援設定「ダンスウィズウォーグ」の遠距離物理攻撃 + 効果 */
		if (g_confDataSanzi[CCharaConfSanzi.CONF_ID_DANCE_WITH_WUG] > 0) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 5 * g_confDataSanzi[CCharaConfSanzi.CONF_ID_DANCE_WITH_WUG];
		}

		//----------------------------------------------------------------
		// 「三次職支援　アクラウスダッシュ」の効果（サモナー限定）
		//----------------------------------------------------------------
		if (IsSameJobClass(JOB_ID_SUMMONER)) {
			switch (g_confDataSanzi[CCharaConfSanzi.CONF_ID_ARCLOUSE_DASH]) {
			case 1:
				n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 5;
				break;
			case 2:
			case 3:
				n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 10;
				break;
			case 4:
			case 5:
				n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 15;
				break;
			}
		}

		//----------------------------------------------------------------
		// 「サモナー　生命の力」の、スキル習得数による効果
		//----------------------------------------------------------------
		if (Math.max(LearnedSkillSearch(SKILL_ID_SEIMEINO_CHIKARA), UsedSkillSearch(SKILL_ID_SEIMEINO_CHIKARA)) > 0) {
			let summoner_skill_animal_sum = 0;
			summoner_skill_animal_sum += LearnedSkillSearch(SKILL_ID_CARROT_BEAT);
			summoner_skill_animal_sum += LearnedSkillSearch(SKILL_ID_TAROUNO_KIZU);
			summoner_skill_animal_sum += LearnedSkillSearch(SKILL_ID_ARCLOUSE_DASH);
			summoner_skill_animal_sum += LearnedSkillSearch(SKILL_ID_PIKKI_TSUKI);
			summoner_skill_animal_sum += LearnedSkillSearch(SKILL_ID_KEIKAI);
			summoner_skill_animal_sum += LearnedSkillSearch(SKILL_ID_MURENO_CHIKARA);
			summoner_skill_animal_sum += LearnedSkillSearch(SKILL_ID_SAVAGENO_TAMASHI);
			if (Math.max(summoner_skill_animal_sum, UsedSkillSearch(SKILL_ID_ANIMAL_KEI_SHUTOKU_LEVEL_GOKEI)) >= 20) {
				n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += 10;
			}
		}

		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_LONGRANGE_DAMAGE_UP);
		if (confval != 0) {
			n_tok[ITEM_SP_LONGRANGE_DAMAGE_UP] += confval;
		}

		// TODO: 四次対応
		for (idx = ITEM_SP_LONGRANGE_DAMAGE_UP; idx <= ITEM_SP_LONGRANGE_DAMAGE_UP; idx++) {
			n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
		}
	}

//================================================================================================================================
//================================================================================================================================
//====
//==== 物理攻撃時、△△属性モンスターに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY; idx <= ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		if(n_A_SHIELD_DEF_PLUS >= 1){
			if(EquipNumSearch(2205)) n_tok[40] += n_A_SHIELD_DEF_PLUS;
			if(EquipNumSearch(1509)) n_tok[41] += n_A_SHIELD_DEF_PLUS;
			if(EquipNumSearch(1511)) n_tok[48] += n_A_SHIELD_DEF_PLUS;
			if(EquipNumSearch(1513)) n_tok[43] += n_A_SHIELD_DEF_PLUS;
			if(EquipNumSearch(1515)) n_tok[42] += n_A_SHIELD_DEF_PLUS;
			if(EquipNumSearch(1517)) n_tok[47] += n_A_SHIELD_DEF_PLUS;
			if(EquipNumSearch(1519)) n_tok[45] += n_A_SHIELD_DEF_PLUS;
			if(EquipNumSearch(1521)) n_tok[49] += n_A_SHIELD_DEF_PLUS;
			if(EquipNumSearch(1523)) n_tok[46] += n_A_SHIELD_DEF_PLUS;
			if(EquipNumSearch(2132)) n_tok[44] += n_A_SHIELD_DEF_PLUS;
		}
		if(n_A_HEAD_DEF_PLUS >= 7 && EquipNumSearch(1815)) n_tok[41] += 3;
		if(n_A_HEAD_DEF_PLUS >= 7 && EquipNumSearch(1978)){
			n_tok[43] += 10;
			if(n_A_HEAD_DEF_PLUS >= 9) n_tok[43] += 5;
		}
		if(n_A_BODY_DEF_PLUS >= 5){
			for(var i=0;i<=3;i++) if(EquipNumSearch(2328 + i)) n_tok[41 + i] += (n_A_BODY_DEF_PLUS - 4);
		}
		if(n_A_SHOES_DEF_PLUS >= 5 && EquipNumSearch(2503)){
			for(var i=40;i<=44;i++) n_tok[i] += 5;
			if(n_A_SHOES_DEF_PLUS >= 7){
				for(var i=40;i<=44;i++) n_tok[i] += 10;
			}
		}

		// 全属性合算は、この位置から動かしてはダメ
		// （データ移行関連で、CalcData 出力の整合性をとるために、後から設定しているので、重複加算になってしまう）
		if(n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_ALL] != 0){
			for(var i=40;i<=49;i++) n_tok[i] += n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_ALL];
		}

		//----------------------------------------------------------------
		// 「迅雷剣」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (n_A_Equip[EQUIP_REGION_ID_ARMS] == ITEM_ID_ZINRAI_KEN) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 15;
			}
		}
		if (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == ITEM_ID_ZINRAI_KEN) {
			if (n_A_Weapon2_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 10;
			}
			if (n_A_Weapon2_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「迅雷槍」の、過剰精錬による強化
		// 「迅雷鎚」の、過剰精錬による強化
		// 「迅雷弓」の、過剰精錬による強化
		// 「迅雷銃」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_ZINRAI_YARI) > 0
			|| EquipNumSearch(ITEM_ID_ZINRAI_TSUCHI) > 0
			|| EquipNumSearch(ITEM_ID_ZINRAI_YUMI) > 0
			|| EquipNumSearch(ITEM_ID_ZINRAI_ZYU) > 0) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「迅雷弓」の、矢装備による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_ZINRAI_YUMI) > 0 && n_A_Arrow == ARROW_ID_YA) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 15;
		}

		//----------------------------------------------------------------
		// 「無双剣」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (n_A_Equip[EQUIP_REGION_ID_ARMS] == ITEM_ID_MUSO_KEN) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 10;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 15;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 15;
			}
		}
		if (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == ITEM_ID_MUSO_KEN) {
			if (n_A_Weapon2_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 10;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 10;
			}
			if (n_A_Weapon2_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 15;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「無双槍」の、過剰精錬による強化
		// 「無双鎚」の、過剰精錬による強化
		// 「無双弓」の、過剰精錬による強化
		// 「無双銃」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_MUSO_YARI) > 0
			|| EquipNumSearch(ITEM_ID_MUSO_TSUCHI) > 0
			|| EquipNumSearch(ITEM_ID_MUSO_YUMI) > 0
			|| EquipNumSearch(ITEM_ID_MUSO_ZYU) > 0) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 10;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 15;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「無双弓」の、矢装備による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_MUSO_YUMI) > 0 && n_A_Arrow == ARROW_ID_YA) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 15;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 15;
		}

		//----------------------------------------------------------------
		// 「ガイアシールド」の、精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_GAIA_SHIELD) > 0) {
			if (n_A_SHIELD_DEF_PLUS >= 6) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 10;
			}
		}

		//----------------------------------------------------------------
		// 「一碧剣」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (n_A_Equip[EQUIP_REGION_ID_ARMS] == ITEM_ID_IPPEKI_KEN) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 15;
			}
		}
		if (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == ITEM_ID_IPPEKI_KEN) {
			if (n_A_Weapon2_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 10;
			}
			if (n_A_Weapon2_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「一碧槍」の、過剰精錬による強化
		// 「一碧鎚」の、過剰精錬による強化
		// 「一碧弓」の、過剰精錬による強化
		// 「一碧銃」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_IPPEKI_YARI) > 0
			|| EquipNumSearch(ITEM_ID_IPPEKI_TSUCHI) > 0
			|| EquipNumSearch(ITEM_ID_IPPEKI_YUMI) > 0
			|| EquipNumSearch(ITEM_ID_IPPEKI_ZYU) > 0) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「一碧弓」の、矢装備による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_IPPEKI_YUMI) > 0 && n_A_Arrow == ARROW_ID_YA) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 15;
		}

		//----------------------------------------------------------------
		// 「業風石　ゲラドリア　セット」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GOFUSEKI_GERADRIA)) > 0) {
			vartmp = 0;

			if (n_A_Weapon_ATKplus >= 7) {
				vartmp += 30;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				vartmp += 20;
			}

			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += vartmp * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WIND] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「アネモスシールド」の、精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_ANEMOS_SHIELD) > 0) {
			if (n_A_SHIELD_DEF_PLUS >= 6) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 10;
			}
		}

		//----------------------------------------------------------------
		// 「深淵のドレス」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SHINENNO_DRESS)) > 0) {
			vartmp = 0;

			if (n_A_BODY_DEF_PLUS >= 5) vartmp += 10;
			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 15;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 15;

			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_DARK] += vartmp * itemCount;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「猟乱剣」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (n_A_Equip[EQUIP_REGION_ID_ARMS] == ITEM_ID_RYORAN_KEN) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 10;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 15;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 15;
			}
		}
		if (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == ITEM_ID_RYORAN_KEN) {
			if (n_A_Weapon2_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 10;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 10;
			}
			if (n_A_Weapon2_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 15;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「猟乱槍」の、過剰精錬による強化
		// 「猟乱鎚」の、過剰精錬による強化
		// 「猟乱弓」の、過剰精錬による強化
		// 「猟乱銃」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_RYORAN_YARI) > 0
			|| EquipNumSearch(ITEM_ID_RYORAN_TSUCHI) > 0
			|| EquipNumSearch(ITEM_ID_RYORAN_YUMI) > 0
			|| EquipNumSearch(ITEM_ID_RYORAN_ZYU) > 0) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 10;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 15;
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「猟乱弓」の、矢装備による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_RYORAN_YUMI) > 0 && n_A_Arrow == ARROW_ID_YA) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 15;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 15;
		}

		//----------------------------------------------------------------
		// 「キングスガード」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KINGS_GUARD)) > 0) {
			vartmp = 0;

			if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 15;
			if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 15;

			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_DARK] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「ポイズンスピア」の、精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_POISON_SPEAR) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 8 * n_A_Weapon_ATKplus;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 8 * n_A_Weapon_ATKplus;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 8 * n_A_Weapon_ATKplus;
		}

		//----------------------------------------------------------------
		// 「鉱員のベスト」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KOINNNO_VEST)) > 0) {
			vartmp = 0;

			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 10;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 15;

			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WIND] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「月食の装束　ハティーカードセット」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GESSHOKUNO_SOUSHOKU_HATI_CARD)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 5 * n_A_BODY_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「淤加美神の羽衣　クトルラナックスカードセット」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_OKAMINOKAMINO_HAKOROMO_KTULLANUX)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 5 * n_A_BODY_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「ゴピニクカード」の、素ステータスによる強化
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_GOPINICH)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 3 * Math.floor((SU_STR + SU_INT + SU_DEX) / 10) * cardCount;
		}

		//----------------------------------------------------------------
		// 「オークロードの鎧　オークロードカードセット」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_ORCLORDNO_YOROI_ORCLORD_CARD)) > 0) {
			if (n_A_BaseLV <= 99) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_DARK] += 3 * n_A_BODY_DEF_PLUS * itemCount;
			}
			else {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_DARK] += 10 * n_A_BODY_DEF_PLUS * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「汚染されたダークロードカード」の、素ステータスによる強化
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_OSEN_SARETA_DARK_LORD)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY] += 3 * Math.floor((SU_STR + SU_INT + SU_DEX) / 10) * cardCount;
		}

		//----------------------------------------------------------------
		// 「淤加美神の羽衣　封印されたクトルラナックスカードセット」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_OKAMINOKAMINO_HAKOROMO_FUINSARETA_KTULLANUX)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 3 * n_A_BODY_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「覚醒淤加美神の羽衣　クトルラナックスカードセット」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSEI_OKAMINOKAMINO_HAKOROMO_KTULLANUX)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 8 * n_A_BODY_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「覚醒淤加美神の羽衣　封印されたクトルラナックスカードセット」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSEI_OKAMINOKAMINO_HAKOROMO_FUINSARETA_KTULLANUX)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 5 * n_A_BODY_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「インペリアルアーティススーツ」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_ARTIS_SUIT)) > 0) {
			for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; i++) {
				n_tok[i] += 2 * LearnedSkillSearch(SKILL_ID_BUKI_KENKYU) * itemCount;
			}

			// 全属性は先に合算しているので、CalcData 出力のためだけの設定
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_ALL] += 2 * LearnedSkillSearch(SKILL_ID_BUKI_KENKYU) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレースアーティススーツ」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_ARTIS_SUIT)) > 0) {
			for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; i++) {
				n_tok[i] += 4 * LearnedSkillSearch(SKILL_ID_BUKI_KENKYU) * itemCount;
			}

			// 全属性は先に合算しているので、CalcData 出力のためだけの設定
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_ALL] += 4 * LearnedSkillSearch(SKILL_ID_BUKI_KENKYU) * itemCount;
		}

		//----------------------------------------------------------------
		// 「インペリアルメナススーツ」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_MENUS_SUIT)) > 0) {
			for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; i++) {
				n_tok[i] += 4 * Math.floor(LearnedSkillSearch(SKILL_ID_KEN_SHUREN) / 2) * itemCount;
			}

			// 全属性は先に合算しているので、CalcData 出力のためだけの設定
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_ALL] += 4 * Math.floor(LearnedSkillSearch(SKILL_ID_KEN_SHUREN) / 2) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレースメナススーツ」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_MENUS_SUIT)) > 0) {
			for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; i++) {
				n_tok[i] += 7 * Math.floor(LearnedSkillSearch(SKILL_ID_KEN_SHUREN) / 2) * itemCount;
			}

			// 全属性は先に合算しているので、CalcData 出力のためだけの設定
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_ALL] += 7 * Math.floor(LearnedSkillSearch(SKILL_ID_KEN_SHUREN) / 2) * itemCount;
		}

		//----------------------------------------------------------------
		// 「インペリアルコンフィデンシャルメイル」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_IMPERIAL_CONFIDENCIAL_MAIL)) > 0) {
			for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; i++) {
				n_tok[i] += 4 * LearnedSkillSearch(SKILL_ID_WIND_CUTTER) * itemCount;
			}

			// 全属性は先に合算しているので、CalcData 出力のためだけの設定
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_ALL] += 4 * LearnedSkillSearch(SKILL_ID_WIND_CUTTER) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレースコンフィデンシャルメイル」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_GRACE_CONFIDENCIAL_MAIL)) > 0) {
			for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; i++) {
				n_tok[i] += 7 * LearnedSkillSearch(SKILL_ID_WIND_CUTTER) * itemCount;
			}

			// 全属性は先に合算しているので、CalcData 出力のためだけの設定
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_ALL] += 7 * LearnedSkillSearch(SKILL_ID_WIND_CUTTER) * itemCount;
		}

		//----------------------------------------------------------------
		// 「ウルフオフィサーハット」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_WOLF_OFFICER_HAT)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_RANGER_MAIN) >= 10) {
				for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; i++) {
					n_tok[i] += 25 * itemCount;
				}

				// 全属性は先に合算しているので、CalcData 出力のためだけの設定
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_ALL] += 25 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「覚醒フルフォース　ドッペルゲンガーカードセット」の、ベースレベルと精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSE_FULL_FORCE_DOPPELGANGER_CARD)) > 0) {
			var valWork = 0;

			if (n_A_BaseLV <= 99) {
				valWork = 4 * n_A_Weapon_ATKplus * itemCount;
			}
			else {
				valWork = 10 * n_A_Weapon_ATKplus * itemCount;
			}

			for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; i++) {
				n_tok[i] += valWork;
			}

			// 全属性は先に合算しているので、CalcData 出力のためだけの設定
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_ALL] += valWork;
		}

		//----------------------------------------------------------------
		// 「覚醒オークロードの鎧　オークロードカードセット」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSE_ORCLORDNO_YOROI_ORCLORD_CARD)) > 0) {
			if (n_A_BaseLV <= 99) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_DARK] += 5 * n_A_BODY_DEF_PLUS * itemCount;
			}
			else {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_DARK] += 13 * n_A_BODY_DEF_PLUS * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「覚醒オークロードの鎧　封印されたオークロードカードセット」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSE_ORCLORDNO_YOROI_FUINSARETA_ORCLORD_CARD)) > 0) {
			if (n_A_BaseLV <= 99) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_DARK] += 3 * n_A_BODY_DEF_PLUS * itemCount;
			}
			else {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_DARK] += 10 * n_A_BODY_DEF_PLUS * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「封印された汚染されたダークロードカード」の、素ステータスによる強化
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_FUINSARETA_OSEN_SARETA_DARK_LORD)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY] += 1 * Math.floor((SU_STR + SU_INT + SU_DEX) / 20) * cardCount;
		}

		//----------------------------------------------------------------
		// 「オークロードの鎧　封印されたオークロードカードセット」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_ORCLORDNO_YOROI_FUINSARETA_ORCLORD_CARD)) > 0) {
			if (n_A_BaseLV <= 99) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_DARK] += 1 * n_A_BODY_DEF_PLUS * itemCount;
			}
			else {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_DARK] += 3 * n_A_BODY_DEF_PLUS * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「英雄の凱歌　封印された汚染されたダークロードカードセット」の、素ステータスによる強化
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_SET_ID_ENCHANT_EIYUNO_GAIKA_FUINSARETA_OSEN_SARETA_DARK_LORD)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY] += 1 * Math.floor((SU_STR + SU_INT + SU_DEX) / 20) * cardCount;
		}

		//----------------------------------------------------------------
		// 「ミリタリーグローブ」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_MILITARY_GLOVE)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_FAW_SILVER_SNIPER) >= 5) {
				var valWork = 10 * itemCount;

				for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; i++) {
					n_tok[i] += valWork;
				}

				// 全属性は先に合算しているので、CalcData 出力のためだけの設定
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_ALL] += valWork;
			}
		}

		//----------------------------------------------------------------
		// 「鬼神の盟友」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KISHINNO_MEIYU)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_SHURASHINDAN) >= 10) {
				var valWork = 25 * itemCount;

				for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; i++) {
					n_tok[i] += valWork;
				}

				// 全属性は先に合算しているので、CalcData 出力のためだけの設定
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_ALL] += valWork;
			}
		}

		//----------------------------------------------------------------
		// 「封印されたゴピニクカード」の、素ステータスによる強化
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_FUINSARETA_GOPINICH)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 1 * Math.floor((SU_STR + SU_INT + SU_DEX) / 10) * cardCount;
		}

		//----------------------------------------------------------------
		// 「月食の装束　封印されたハティーカードセット」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GESSHOKUNO_SOUSHOKU_FUINSARETA_HATI)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 2 * n_A_BODY_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「レッドペッパーラムダカード」の、素ステータスによる強化
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_RED_PEPPER_LAMBDA)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 3 * Math.floor((SU_STR + SU_INT + SU_DEX) / 10) * cardCount;
		}

		//----------------------------------------------------------------
		// 「妖魔のささやき」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_YOMANO_SASAYAKI)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_WEAPON_CRUSH) >= 5) {
				var valWork = 25 * itemCount;

				for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; i++) {
					n_tok[i] += valWork;
				}

				// 全属性は先に合算しているので、CalcData 出力のためだけの設定
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_ALL] += valWork;
			}
		}





		//----------------------------------------------------------------
		// 影狼・朧スキル「符」の効果
		//----------------------------------------------------------------
		if (UsedSkillSearch(SKILL_ID_FU_COUNT_OF_FU) >= 10) {
			switch (UsedSkillSearch(SKILL_ID_FU_ELEMENT_OF_FU)) {
			case ELM_ID_WATER:
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 30;
				break;
			case ELM_ID_EARTH:
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 30;
				break;
			case ELM_ID_FIRE:
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 30;
				break;
			case ELM_ID_WIND:
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 30;
				break;
			}
		}

		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_PHYSICAL_DAMAGE_UP_MONSTER_ELM);
		if (confval != 0) {
			for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; i++) {
				n_tok[i] += confval;
			}
		}

		// TODO: 四次対応
		for (idx = ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_VANITY; idx <= ITEM_SP_PHYSICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; idx++) {
			n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
		}		





//================================================================================================================================
//================================================================================================================================
//====
//==== 物理攻撃時、ボスモンスターに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_PHYSICAL_DAMAGE_UP_BOSS; idx <= ITEM_SP_PHYSICAL_DAMAGE_UP_BOSS; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		if(SU_STR >= 120 && EquipNumSearch(348)) n_tok[26] += 10 * EquipNumSearch(348);
		if(n_A_HEAD_DEF_PLUS >= 5 && EquipNumSearch(1402)) n_tok[26] += (n_A_HEAD_DEF_PLUS - 4);
		if(n_A_HEAD_DEF_PLUS >= 7 && EquipNumSearch(1409)) n_tok[26] += 5;
		if(n_A_BaseLV >= 100 && EquipNumSearch(1762)) n_tok[26] += 1;

		//----------------------------------------------------------------
		// 「ギガントブーツ　アックスセット」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_GIGANT_BOOTS_GIGANT_AXE)) {
			if (n_A_SHOES_DEF_PLUS >= 7) {
				if (n_A_Weapon_ATKplus >= 7) n_tok[26] += 20;
				if (n_A_Weapon_ATKplus >= 9) n_tok[26] += 30;
			}
		}

		//----------------------------------------------------------------
		// 「ギガントブーツ　ボウセット」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_GIGANT_BOOTS_GIGANT_BOW)) {
			if (n_A_SHOES_DEF_PLUS >= 7) {
				if (n_A_Weapon_ATKplus >= 7) n_tok[26] += 20;
				if (n_A_Weapon_ATKplus >= 9) n_tok[26] += 30;
			}
		}

		//----------------------------------------------------------------
		// 「炎竜の鎧」の、精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_ENRYUNO_YOROI)) {
			if (n_A_BODY_DEF_PLUS >= 7) n_tok[26] += 10;
			if (n_A_BODY_DEF_PLUS >= 9) n_tok[26] += 10;
		}

		//----------------------------------------------------------------
		// 「業風石　ゲラドリア　セット」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GOFUSEKI_GERADRIA)) > 0) {
			vartmp = 0;

			if (n_A_Weapon_ATKplus >= 7) {
				vartmp += 30;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				vartmp += 20;
			}

			n_tok[26] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「ブリュンヒルデのダイアデム」の、精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_BRUNHILDNO_DIADEM)) {
			if (n_A_HEAD_DEF_PLUS >= 6) n_tok[26] += 15;
			if (n_A_HEAD_DEF_PLUS >= 8) n_tok[26] += 15;
		}

		//----------------------------------------------------------------
		// 「巨人の加護　ギガントアックスセット」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_KYOZINNO_KAGO_GIGANT_AXE)) {
			if (n_A_Weapon_ATKplus >= 7) n_tok[26] += 5;
			if (n_A_Weapon_ATKplus >= 9) n_tok[26] += 10;
		}

		//----------------------------------------------------------------
		// 「巨人の加護　ギガントボウセット」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_KYOZINNO_KAGO_GIGANT_BOW)) {
			if (n_A_Weapon_ATKplus >= 7) n_tok[26] += 5;
			if (n_A_Weapon_ATKplus >= 9) n_tok[26] += 10;
		}

		//----------------------------------------------------------------
		// 「巨人の加護　ギガントランスセット」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_KYOZINNO_KAGO_GIGANT_LANCE)) {
			if (n_A_Weapon_ATKplus >= 7) n_tok[26] += 5;
			if (n_A_Weapon_ATKplus >= 9) n_tok[26] += 10;
		}

		//----------------------------------------------------------------
		// 「スカラバハイヒール　エルヴンボウセット」の、精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearchMIG(ITEM_SET_ID_SCARABA_HIGHHEEL_ELVEN_BOW) > 0) {
			if (n_A_SHOES_DEF_PLUS >= 7) {
				if (n_A_Weapon_ATKplus >= 8) n_tok[26] += 20;
				if (n_A_Weapon_ATKplus >= 10) n_tok[26] += 30;
			}
		}

		//----------------------------------------------------------------
		// 「スカラバハイヒール　カルガメイスセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_SET_ID_SCARABA_HIGHHEEL_CARGA_MACE)) > 0) {
			vartmp = 0;

			if (n_A_Weapon_ATKplus >= 7)  vartmp += 20;
			if (n_A_Weapon_ATKplus >= 9)  vartmp += 30;

			n_tok[26] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「スカラバハイヒール　ドゥルガーセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_SET_ID_SCARABA_HIGHHEEL_DULLGER)) > 0) {
			vartmp = 0;

			if (n_A_Weapon_ATKplus >= 7)  vartmp += 20;
			if (n_A_Weapon_ATKplus >= 9)  vartmp += 30;

			n_tok[26] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「悪魔の手」の、スキル習得による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AKUMANO_TE)) {
			if (LearnedSkillSearch(SKILL_ID_BAKKISANDAN) >= 5) {
				n_tok[26] += 50;
			}
		}

		//----------------------------------------------------------------
		// 「不死の軍団認識票　リンディーホップセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FUSHINO_GUNDAN_NINSHIKIHYO_LINDY_HOP)) > 0) {
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[26] += 25 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ワークキャップ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_WORK_CAP)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_FAW_MAGIC_DECOY) >= 5) {
				n_tok[26] += 50 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ブラックフェザー」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_BLACK_FEATHER)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_INVISIBILITY) >= 5) {
				n_tok[26] += 50 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ジェジェキャップ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_JEJECAP)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_FIRE_EXPANSION) >= 5) {
				n_tok[26] += 50 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「リングオブジュピター」の、素ＬＵＫによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_RING_OF_JUPITER, EQUIP_REGION_ID_ACCESSARY_1)) > 0) {
			if (SU_LUK >= 125) {
				n_tok[26] += 15 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ペタルの尻尾　リス耳フード帽セット」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_PETALNO_SHIPPO_RISUMIMI_HOOD_BO)) {
			if (n_A_HEAD_DEF_PLUS >= 6) n_tok[26] += 10;
			if (n_A_HEAD_DEF_PLUS >= 8) n_tok[26] += 15;
		}

		//----------------------------------------------------------------
		// 「ジャスパーサークレット」の、スキル習得による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_ZYASPER_CIRCLET)) {
			if (LearnedSkillSearch(SKILL_ID_IGNITION_BREAK) >= 5) {
				n_tok[26] += 50;
			}
		}

		//----------------------------------------------------------------
		// 「不死鳥のリング」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_FUSHICHONO_RING)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_MOON_SLUSHER) >= 5) {
				n_tok[26] += 15 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ジャスパーリング」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_ZYASPER_RING)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_WIND_CUTTER) >= 5) {
				n_tok[26] += 15 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「リングオブケリュネイア」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_RING_OF_CERYNEIA)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_AIMED_BOLT) >= 10) {
				n_tok[26] += 15 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「トラベラーリング」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_TRAVELER_RING)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_SEVERE_RAINSTORM) >= 5) {
				n_tok[26] += 15 * itemCount;
			}
		}







		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_PHYSICAL_DAMAGE_UP_BOSS_AND_NOT_BOSS);
		if (confval != 0) {
			n_tok[26] += confval;
		}



//================================================================================================================================
//================================================================================================================================
//====
//==== 物理攻撃時、一般モンスターに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_PHYSICAL_DAMAGE_UP_NOTBOSS; idx <= ITEM_SP_PHYSICAL_DAMAGE_UP_NOTBOSS; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_PHYSICAL_DAMAGE_UP_BOSS_AND_NOT_BOSS);
		if (confval != 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_NOTBOSS] += confval;
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== 物理攻撃で与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		if(GetHigherJobSeriesID(n_A_JOB)==14) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * CardNumSearch(479);
		if(n_A_Weapon_ATKplus >= 9 && EquipNumSearch(1101)) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += n_A_Weapon_ATKplus;
		if(n_A_BODY_DEF_PLUS >= 7 && n_A_SHOULDER_DEF_PLUS >= 7 && n_A_SHOES_DEF_PLUS >= 7){
			if(EquipNumSearch(1585) || EquipNumSearch(1596)) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5;
		}

		if(EquipNumSearch(1643)) {
			switch (n_A_Arrow) {
			case ARROW_ID_CURSE_ARROW:
			case ARROW_ID_SILENCE_ARROW:
			case ARROW_ID_SLEEP_ARROW:
			case ARROW_ID_FLASH_ARROW:
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 50;
			}
		}

		if(EquipNumSearch(1695)) if(GetLowerJobSeriesID(n_A_JOB)==1 || GetLowerJobSeriesID(n_A_JOB)==2 || GetLowerJobSeriesID(n_A_JOB)==6) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 8;
		if(EquipNumSearch(1741)) if(n_A_SHIELD_DEF_PLUS >= 5) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += n_A_SHIELD_DEF_PLUS - 4;
		if(EquipNumSearch(1802)) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += n_A_Weapon_ATKplus;
		if(SU_STR >= 110 && EquipNumSearch(1946)) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 1 * EquipNumSearch(1946);
		if(SU_AGI >= 110 && CardNumSearch(710)) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 7;
		if(CardNumSearch(828)){
			if(n_A_HEAD_DEF_PLUS >= 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 1 * CardNumSearch(828);
			if(n_A_HEAD_DEF_PLUS >= 9) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 1 * CardNumSearch(828);
		}
		if(SU_STR >= 108 && EquipNumSearch(2395)){
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 1;
			if(SU_STR >= 120) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2;
		}
		if(EquipNumSearch(2441)) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += ROUNDDOWN((n_A_SHOES_DEF_PLUS + n_A_HEAD_DEF_PLUS) / 2);
		if(EquipNumSearch(2462)) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += n_A_HEAD_DEF_PLUS;
		if(n_A_HEAD_DEF_PLUS >= 5 && EquipNumSearch(2512)){
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2;
			if(n_A_HEAD_DEF_PLUS >= 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3;
			if(n_A_HEAD_DEF_PLUS >= 9) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4;
		}
		if(n_A_card[CARD_REGION_ID_HEAD_TOP] == 894) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += ROUNDDOWN(n_A_HEAD_DEF_PLUS / 2);
		if(EquipNumSearch(2541)) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2 * n_A_BODY_DEF_PLUS;
		if(n_A_PassSkill7[41]){
			if(n_A_PassSkill7[41] == 1) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5;
			if(n_A_PassSkill7[41] == 2) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10;
		}

		//----------------------------------------------------------------
		// 「戦死者のマント」の、純粋なＳＴＲが１３０の時
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_SENSHISHANO_MANT)){
			if (SU_STR >= 130) {
				if (EquipNumSearchFurubitaSet() > 0) {
					n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10;
				} else {
					n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5;
				}
			}
		}

		//----------------------------------------------------------------
		// 「天狗の巻物セット」の、強化
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_SET_ID_TENGUNO_MAKIMONO_KARASUTENGU)) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 1;
			if (SU_STR >= 108) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2;
			if (SU_STR >= 120) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3;
		}

		//----------------------------------------------------------------
		// 「拳闘士のグローブ」の、純粋なＳＴＲが１００以上の時
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_KENTOSHINO_GLOVE)){
			if (SU_STR >= 100) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5;
			}
		}

		//----------------------------------------------------------------
		// 「ダークハンド」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_DARK_HAND)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「リンディーホップ」の、過剰精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_LINDY_HOP, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_LINDY_HOP, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {

			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 25;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 25;
			}

			if (n_A_Weapon2_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 25;
			}
			if (n_A_Weapon2_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 25;
			}
		}

		//----------------------------------------------------------------
		// 「暴徒のスカーフ　グラスセット」の、素ＳＴＲと素ＬＵＫによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_GLASS)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 6 * ROUNDDOWN((SU_STR + SU_LUK) / 80) * itemCount;
		}

		//----------------------------------------------------------------
		// 「暴徒のスカーフ　サングラスセット」の、素ＳＴＲと素ＬＵＫによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_SUNGLASS)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 6 * ROUNDDOWN((SU_STR + SU_LUK) / 80) * itemCount;
		}

		//----------------------------------------------------------------
		// 「エーギルリング　ヘルムセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_AEGIR_RING_AEGIR_HELM)) > 0) {
			if (n_A_HEAD_DEF_PLUS >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

/*
		//----------------------------------------------------------------
		// 「執行者のシューズ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SHIKKOUSHANO_SHOES)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * LearnedSkillSearch(SKILL_ID_WEAPON_CRUSH) * itemCount;
		}
*/

		//----------------------------------------------------------------
		// 「ドレイクコート」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_DRAKE_COAT)) > 0) {
			vartmp = 0;

			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 3;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 4;

			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += vartmp * itemCount;
		}


		//----------------------------------------------------------------
		// 「怨恨の白の騎士カード」の、武器種類による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_ENKONNO_SHIRONO_KISHI)) > 0) {
			if ((n_A_WeaponType == ITEM_KIND_SWORD_2HAND)
				|| (n_A_WeaponType == ITEM_KIND_SPEAR_2HAND)
				|| (n_A_WeaponType == ITEM_KIND_AXE_2HAND)) {

				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * cardCount;

				if (n_A_Weapon_ATKplus >= 10) {
					n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * cardCount;
				}
			}
		}

		//----------------------------------------------------------------
		// 「魔眼のアムダライスカード」の、精錬による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_MAGANNO_AMDARAIS)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += n_A_BODY_DEF_PLUS * cardCount;
		}

		//----------------------------------------------------------------
		// 「怨恨のカーリッツバーグカード」の、精錬による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_ENKONNO_KHALITZBURG, CARD_REGION_ID_HEAD_TOP_ANY)) > 0) {
			if (n_A_HEAD_DEF_PLUS >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「パワフルアムダライスカード」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_POWERFUL_AMDARAIS)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 1 * ROUNDDOWN(n_A_BaseLV / 20) * cardCount;
		}

		//----------------------------------------------------------------
		// 「栄光の証」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_EIKONO_AKASHI)) > 0) {
			if (n_A_BaseLV >= 150) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ゴーストリングスーツ」の、過剰精錬よる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_GHOSTRING_SUITS)) > 0) {
			if (n_A_BODY_DEF_PLUS >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴクレイモア」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_CRAYMORE)) > 0) {
			if (n_A_BaseLV >= 175) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴグレイヴ」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_GRAVE)) > 0) {
			if (n_A_BaseLV >= 175) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴジャマダハル」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_ZYAMADAHAR)) > 0) {
			if (n_A_BaseLV >= 175) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴウィザードスタッフ」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_WIZARD_STUFF)) > 0) {
			if (n_A_BaseLV >= 175) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴアークワンド」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_ARCWAND)) > 0) {
			if (n_A_BaseLV >= 175) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴホーリーステッキ」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_HOLYSTICK)) > 0) {
			if (n_A_BaseLV >= 175) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴディバインクロス」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_DIVINE_CROSS)) > 0) {
			if (n_A_BaseLV >= 175) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴギロチン」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_GUILLOTINE)) > 0) {
			if (n_A_BaseLV >= 175) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴバスター」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_BASTER)) > 0) {
			if (n_A_BaseLV >= 175) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴ風魔手裏剣」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_FUMA_SHURIKEN)) > 0) {
			if (n_A_BaseLV >= 175) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴシーフボウ」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_THIEF_BOW)) > 0) {
			if (n_A_BaseLV >= 175) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴハンターボウ」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_HUNTER_BOW)) > 0) {
			if (n_A_BaseLV >= 175) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴクロスボウ」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_CROSS_BOW)) > 0) {
			if (n_A_BaseLV >= 175) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ニーヴライフル」の、ベースレベルよる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIEVE_RIFLE)) > 0) {
			if (n_A_BaseLV >= 175) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「Y.S.F.0.1.プレート」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_YSF01_PLATE)) > 0) {
			if (n_A_BODY_DEF_PLUS >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 15 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「天狗の下駄」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_TENGUNO_GETA)) > 0) {
			if (sklLv = LearnedSkillSearch(SKILL_ID_TENKETSU_MOKU)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * sklLv * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「英雄の指輪　達人の槌セット」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_EIYUNO_YUBIWA_TATSUZINNO_TSUCHI_YUSHANO_KUTSU)) > 0) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 15 * itemCount;
			}
		}
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_EIYUNO_YUBIWA_TATSUZINNO_TSUCHI_S2_YUSHANO_KUTSU)) > 0) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 15 * itemCount;
			}
		}


		//----------------------------------------------------------------
		// 「ニーヴバレッタ　ニーヴ武器セット」の、素ＳＴＲによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_NIEVE_VALLETTA_NIEVE_ARMS)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 1 * ROUNDDOWN(SU_STR / 10) * itemCount;
		}

		//----------------------------------------------------------------
		// 「神喰らいの龍槍」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KAMIKURAINO_RYUSO)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2 * n_A_Weapon_ATKplus * itemCount;
		}

		//----------------------------------------------------------------
		// 「繊細な猫じゃらしの模型」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_SENSAINA_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_SENSAINA_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 5;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 10;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += vartmp * itemCountRight;

			vartmp = 0;
			vartmp += 2 * n_A_Weapon2_ATKplus;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 5;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 10;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「精巧な猫じゃらしの模型」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_SEIKONA_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_SEIKONA_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 20;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 40;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += vartmp * itemCountRight;

			vartmp = 0;
			vartmp += 2 * n_A_Weapon2_ATKplus;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 20;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 40;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「新鮮な草のネックレス」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SHINSENNA_KUSANO_NECKLACE)) > 0) {

			sklLv = 0;

			sklLv += LearnedSkillSearch(SKILL_ID_PIKKI_TSUKI);
			sklLv += LearnedSkillSearch(SKILL_ID_ARCLOUSE_DASH);
			sklLv += LearnedSkillSearch(SKILL_ID_TAROUNO_KIZU);
			sklLv += LearnedSkillSearch(SKILL_ID_CARROT_BEAT);
			sklLv += LearnedSkillSearch(SKILL_ID_KEIKAI);
			sklLv += LearnedSkillSearch(SKILL_ID_MURENO_CHIKARA);
			sklLv += LearnedSkillSearch(SKILL_ID_SAVAGENO_TAMASHI);

			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2 * ROUNDDOWN(sklLv / 5) * itemCount;
		}

		//----------------------------------------------------------------
		// 「不死の軍団認識票　ジュリエットディレイチェルセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FUSHINO_GUNDAN_NINSHIKIHYO_JULIET_DE_RACHEL)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * n_A_Weapon_ATKplus * itemCount;
		}

		//----------------------------------------------------------------
		// 「吸血鬼のしもべ」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KYUKETSUKINO_SHIMOBE)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「フローズヴィトニルの鎖　ヴァナルガンドの兜セット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FROZVITNIRNO_KUSARI_VANARGANDNO_KABUTO)) > 0) {
			if (n_A_HEAD_DEF_PLUS >= 6) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
			if (n_A_HEAD_DEF_PLUS >= 8) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「インペリアルブーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_IMPERIAL_BOOTS)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * LearnedSkillSearch(SKILL_ID_DEBOTION) * itemCount;
		}

		//----------------------------------------------------------------
		// 「フルフォース　ドッペルゲンガーカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FULL_FORCE_DOPPELGANGER_CARD)) > 0) {
			if (n_A_BaseLV <= 99) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * n_A_Weapon_ATKplus * itemCount;
			}
			else {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * n_A_Weapon_ATKplus * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョン熱血連撃セット」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_ILLUSION_NEKKETSU_HACHIMAKI_ILLUSION_RENGEKINO_TSUME)) > 0) {

			sklLv = 0;

			sklLv += LearnedSkillSearch(SKILL_ID_GOHO);
			sklLv += LearnedSkillSearch(SKILL_ID_SORYUKYAKU);
			sklLv += LearnedSkillSearch(SKILL_ID_DAITENHOSUI);
			sklLv += LearnedSkillSearch(SKILL_ID_TENRACHIMO);

			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * ROUNDDOWN(sklLv / 6) * itemCount;
		}

		//----------------------------------------------------------------
		// 「エンチャント　死のニーヴ(腕力)」の、精錬による効果
		//----------------------------------------------------------------
		cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_WANRYOKU, CARD_REGION_ID_ARMS_RIGHT_ANY);
		cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_WANRYOKU, CARD_REGION_ID_ARMS_LEFT_ANY);
		cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_WANRYOKU, CARD_REGION_ID_HEAD_TOP_ANY);
		cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_WANRYOKU, CARD_REGION_ID_SHIELD_ANY);
		cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_WANRYOKU, CARD_REGION_ID_BODY_ANY);
		cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_WANRYOKU, CARD_REGION_ID_SHOULDER_ANY);
		cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_WANRYOKU, CARD_REGION_ID_SHOES_ANY);
		if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
			+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

			// 右手武器へのエンチャント
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 1;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 1;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += vartmp * cardCountRight

			// 左手武器へのエンチャント
			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 1;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 1;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += vartmp * cardCountLeft

			// 頭防具へのエンチャント
			vartmp = 0;
			if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 1;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += vartmp * cardCountHeadTop

			// 盾防具へのエンチャント
			vartmp = 0;
			if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 1;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += vartmp * cardCountShield

			// 体防具へのエンチャント
			vartmp = 0;
			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 1;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += vartmp * cardCountBody

			// 肩防具へのエンチャント
			vartmp = 0;
			if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 1;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += vartmp * cardCountShoulder

			// 靴防具へのエンチャント
			vartmp = 0;
			if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 1;
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += vartmp * cardCountShoes

			// アクセサリへのエンチャント
			// 精錬できないので処理不要
		}

		//----------------------------------------------------------------
		// 「ギロチンクロスエレメス(MVP)カード」の、職業による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_GUILLOTINE_CROSS_ELEMES_MVP)) > 0) {
			if (IsSameJobClass(JOB_ID_GILOTINCROSS)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 15 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「メカニックハワード(MVP)カード」の、職業による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_MECHANIC_HAWARD_MVP)) > 0) {
			if (IsSameJobClass(JOB_ID_MECHANIC)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 15 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「ルーンナイトセイレン(MVP)カード」の、職業による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_RUNE_KNIGHT_SEIREN_MVP)) > 0) {
			if (IsSameJobClass(JOB_ID_RUNEKNIGHT)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 15 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「ジェネティックエミュール(MVP)カード」の、職業による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_GENETIC_EMUR_MVP)) > 0) {
			if (IsSameJobClass(JOB_ID_GENETIC)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 15 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「シャドウチェイサーガーティ(MVP)カード」の、職業による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_SHADOW_CHASER_GARTY_MVP)) > 0) {
			if (IsSameJobClass(JOB_ID_SHADOWCHASER)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「修羅チェン(MVP)カード」の、職業による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_SHURA_CHENG_MVP)) > 0) {
			if (IsSameJobClass(JOB_ID_SHURA)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「ロイヤルガードランデル(MVP)カード」の、職業による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_ROYAL_GUARD_RANDEL_MVP)) > 0) {
			if (IsSameJobClass(JOB_ID_ROYALGUARD)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「クラップカード」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_ID_CRAP)) {
			if (n_A_SHOES_DEF_PLUS >= 7) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3;
			if (n_A_SHOES_DEF_PLUS >= 9) n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2;
		}

		//----------------------------------------------------------------
		// 「エンチャント　強撃1」の、精錬による効果
		//----------------------------------------------------------------
		cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_1, CARD_REGION_ID_ARMS_RIGHT_ANY);
		cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_1, CARD_REGION_ID_ARMS_LEFT_ANY);
		cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_1, CARD_REGION_ID_HEAD_TOP_ANY);
		cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_1, CARD_REGION_ID_SHIELD_ANY);
		cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_1, CARD_REGION_ID_BODY_ANY);
		cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_1, CARD_REGION_ID_SHOULDER_ANY);
		cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_1, CARD_REGION_ID_SHOES_ANY);
		if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
			+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

			// 右手武器へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2 * n_A_Weapon_ATKplus * cardCountRight

			// 左手武器へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2 * n_A_Weapon2_ATKplus * cardCountLeft

			// 頭防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2 * n_A_HEAD_DEF_PLUS * cardCountHeadTop

			// 盾防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2 * n_A_SHIELD_DEF_PLUS * cardCountShield

			// 体防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2 * n_A_BODY_DEF_PLUS * cardCountBody

			// 肩防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2 * n_A_SHOULDER_DEF_PLUS * cardCountShoulder

			// 靴防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2 * n_A_SHOES_DEF_PLUS * cardCountShoes

			// アクセサリへのエンチャント
			// 精錬できないので処理不要
		}

		//----------------------------------------------------------------
		// 「エンチャント　強撃1」の、精錬による効果
		//----------------------------------------------------------------
		cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_2, CARD_REGION_ID_ARMS_RIGHT_ANY);
		cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_2, CARD_REGION_ID_ARMS_LEFT_ANY);
		cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_2, CARD_REGION_ID_HEAD_TOP_ANY);
		cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_2, CARD_REGION_ID_SHIELD_ANY);
		cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_2, CARD_REGION_ID_BODY_ANY);
		cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_2, CARD_REGION_ID_SHOULDER_ANY);
		cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_2, CARD_REGION_ID_SHOES_ANY);
		if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
			+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

			// 右手武器へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * n_A_Weapon_ATKplus * cardCountRight

			// 左手武器へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * n_A_Weapon2_ATKplus * cardCountLeft

			// 頭防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * n_A_HEAD_DEF_PLUS * cardCountHeadTop

			// 盾防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * n_A_SHIELD_DEF_PLUS * cardCountShield

			// 体防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * n_A_BODY_DEF_PLUS * cardCountBody

			// 肩防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * n_A_SHOULDER_DEF_PLUS * cardCountShoulder

			// 靴防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * n_A_SHOES_DEF_PLUS * cardCountShoes

			// アクセサリへのエンチャント
			// 精錬できないので処理不要
		}

		//----------------------------------------------------------------
		// 「エンチャント　強撃1」の、精錬による効果
		//----------------------------------------------------------------
		cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_3, CARD_REGION_ID_ARMS_RIGHT_ANY);
		cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_3, CARD_REGION_ID_ARMS_LEFT_ANY);
		cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_3, CARD_REGION_ID_HEAD_TOP_ANY);
		cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_3, CARD_REGION_ID_SHIELD_ANY);
		cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_3, CARD_REGION_ID_BODY_ANY);
		cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_3, CARD_REGION_ID_SHOULDER_ANY);
		cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_3, CARD_REGION_ID_SHOES_ANY);
		if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
			+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

			// 右手武器へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 6 * n_A_Weapon_ATKplus * cardCountRight

			// 左手武器へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 6 * n_A_Weapon2_ATKplus * cardCountLeft

			// 頭防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 6 * n_A_HEAD_DEF_PLUS * cardCountHeadTop

			// 盾防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 6 * n_A_SHIELD_DEF_PLUS * cardCountShield

			// 体防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 6 * n_A_BODY_DEF_PLUS * cardCountBody

			// 肩防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 6 * n_A_SHOULDER_DEF_PLUS * cardCountShoulder

			// 靴防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 6 * n_A_SHOES_DEF_PLUS * cardCountShoes

			// アクセサリへのエンチャント
			// 精錬できないので処理不要
		}

		//----------------------------------------------------------------
		// 「エンチャント　強撃1」の、精錬による効果
		//----------------------------------------------------------------
		cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_4, CARD_REGION_ID_ARMS_RIGHT_ANY);
		cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_4, CARD_REGION_ID_ARMS_LEFT_ANY);
		cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_4, CARD_REGION_ID_HEAD_TOP_ANY);
		cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_4, CARD_REGION_ID_SHIELD_ANY);
		cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_4, CARD_REGION_ID_BODY_ANY);
		cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_4, CARD_REGION_ID_SHOULDER_ANY);
		cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_4, CARD_REGION_ID_SHOES_ANY);
		if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
			+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

			// 右手武器へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 8 * n_A_Weapon_ATKplus * cardCountRight

			// 左手武器へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 8 * n_A_Weapon2_ATKplus * cardCountLeft

			// 頭防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 8 * n_A_HEAD_DEF_PLUS * cardCountHeadTop

			// 盾防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 8 * n_A_SHIELD_DEF_PLUS * cardCountShield

			// 体防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 8 * n_A_BODY_DEF_PLUS * cardCountBody

			// 肩防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 8 * n_A_SHOULDER_DEF_PLUS * cardCountShoulder

			// 靴防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 8 * n_A_SHOES_DEF_PLUS * cardCountShoes

			// アクセサリへのエンチャント
			// 精錬できないので処理不要
		}

		//----------------------------------------------------------------
		// 「エンチャント　強撃5」の、精錬による効果
		//----------------------------------------------------------------
		cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_5, CARD_REGION_ID_ARMS_RIGHT_ANY);
		cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_5, CARD_REGION_ID_ARMS_LEFT_ANY);
		cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_5, CARD_REGION_ID_HEAD_TOP_ANY);
		cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_5, CARD_REGION_ID_SHIELD_ANY);
		cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_5, CARD_REGION_ID_BODY_ANY);
		cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_5, CARD_REGION_ID_SHOULDER_ANY);
		cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_KYOGEKI_5, CARD_REGION_ID_SHOES_ANY);
		if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
			+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

			// 右手武器へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * n_A_Weapon_ATKplus * cardCountRight

			// 左手武器へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * n_A_Weapon2_ATKplus * cardCountLeft

			// 頭防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * n_A_HEAD_DEF_PLUS * cardCountHeadTop

			// 盾防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * n_A_SHIELD_DEF_PLUS * cardCountShield

			// 体防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * n_A_BODY_DEF_PLUS * cardCountBody

			// 肩防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * n_A_SHOULDER_DEF_PLUS * cardCountShoulder

			// 靴防具へのエンチャント
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * n_A_SHOES_DEF_PLUS * cardCountShoes

			// アクセサリへのエンチャント
			// 精錬できないので処理不要
		}

		//----------------------------------------------------------------
		// 「トップラウンドライダーカード」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (cardcount = CardNumSearch(CARD_ID_TOP_ROUND_RIDER)) {
			switch (n_A_WeaponType) {
			case ITEM_KIND_HANDGUN:
			case ITEM_KIND_RIFLE:
			case ITEM_KIND_GATLINGGUN:
			case ITEM_KIND_SHOTGUN:
			case ITEM_KIND_GRENADEGUN:
				// 銃系統のみの効果
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * cardcount;
				if (n_A_Weapon_ATKplus >= 10) {
					n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * cardcount;
				}
				break;
			}
		}

		//----------------------------------------------------------------
		// 「ラウンドライダーカード」の、素ＤＥＸによる効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_ROUND_RIDER)) > 0) {
			if (SU_DEX >= 120) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「マッドドレインリアーカード」の、精錬による効果
		//----------------------------------------------------------------
		if (cardcount = CardNumSearch(CARD_ID_MAT_DRAINRIER)) {
			switch (n_A_WeaponType) {
			case ITEM_KIND_KATAR:
				// カタールのみの効果
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * cardcount;
				if (n_A_Weapon_ATKplus >= 10) {
					n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * cardcount;
				}
				break;
			}
		}

		//----------------------------------------------------------------
		// 「フロンティアブーツ　物影セット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FRONTIER_BOOTS_MONOKAGE)) > 0) {
			if (n_A_SHOES_DEF_PLUS >= 7) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 30 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ジャガーノート」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_JAGUAR_NOTE)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * LearnedSkillSearch(SKILL_ID_FIRE_RAIN) * itemCount;
		}

		//----------------------------------------------------------------
		// 「竜殺しの長剣」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_RYUGOROSHINO_CHOKEN, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_RYUGOROSHINO_CHOKEN, EQUIP_REGION_ID_ARMS_LEFT);
		if (itemCountRight > 0) {
			if (n_A_BaseLV <= 99) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3 * n_A_Weapon_ATKplus * itemCountRight;
			}
			else {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * n_A_Weapon_ATKplus * itemCountRight;
			}
		}
		if (itemCountLeft > 0) {
			if (n_A_BaseLV <= 99) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3 * n_A_Weapon2_ATKplus * itemCountLeft;
			}
			else {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * n_A_Weapon2_ATKplus * itemCountLeft;
			}
		}

		//----------------------------------------------------------------
		// 「リングオブヴィーナス」の、素ＡＧＩによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_RING_OF_VENUS, EQUIP_REGION_ID_ACCESSARY_2)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 1 * Math.floor(SU_AGI / 10) * itemCount;
		}

		//----------------------------------------------------------------
		// 「追撃者のシューズ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_TSUIGEKISHANO_SHOES)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2 * LearnedSkillSearch(SKILL_ID_FATAL_MENUS) * itemCount;
		}

		//----------------------------------------------------------------
		// 「試験管ブーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SHIKENKAN_BOOTS)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * LearnedSkillSearch(SKILL_ID_FIRE_EXPANSION) * itemCount;
		}

		//----------------------------------------------------------------
		// 「パープルピタヤカード」の、精錬による効果
		//----------------------------------------------------------------
		if (cardcount = CardNumSearch(CARD_ID_PURPLE_PITAYA)) {
			switch (n_A_WeaponType) {
			case ITEM_KIND_FUMA:
				// 風魔手裏剣のみの効果
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * cardcount;
				if (n_A_Weapon_ATKplus >= 10) {
					n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * cardcount;
				}
				break;
			}
		}

		//----------------------------------------------------------------
		// 「インペリアルアニマルローブ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_ANIMAL_ROBE)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * LearnedSkillSearch(SKILL_ID_MURENO_CHIKARA) * itemCount;
		}

		//----------------------------------------------------------------
		// 「インペリアルガトリングスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_GATLING_SUIT)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * LearnedSkillSearch(SKILL_ID_PLATINUM_ALTER) * itemCount;
		}

		//----------------------------------------------------------------
		// 「インペリアルクルシフォームスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_CRUCIFORM_SUIT)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * LearnedSkillSearch(SKILL_ID_HAPPO_KUNAI) * itemCount;
		}

		//----------------------------------------------------------------
		// 「深海のデビアスカード」の、素ＳＴＲ、素ＶＩＴ、素ＤＥＸによる効果
		//----------------------------------------------------------------
		if ((cardcount = CardNumSearch(CARD_ID_SHINKAINO_DEVIAS)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2 * ROUNDDOWN((SU_STR + SU_VIT + SU_DEX) / 25) * cardcount;
		}

		//----------------------------------------------------------------
		// 「覚醒フルフォース　封印されたドッペルゲンガーカードセット」の、ベースレベルと精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSE_FULL_FORCE_FUINSARETA_DOPPELGANGER_CARD)) > 0) {
			var valWork = 0;

			if (n_A_BaseLV <= 99) {
				valWork = 4 * n_A_Weapon_ATKplus * itemCount;
			}
			else {
				valWork = 10 * n_A_Weapon_ATKplus * itemCount;
			}

			// 全属性は先に合算しているので、CalcData 出力のためだけの設定
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += valWork;
		}

		//----------------------------------------------------------------
		// 「フルフォース　封印されたドッペルゲンガーカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FULL_FORCE_FUINSARETA_DOPPELGANGER_CARD)) > 0) {
			if (n_A_BaseLV <= 99) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 2 * n_A_Weapon_ATKplus * itemCount;
			}
			else {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * n_A_Weapon_ATKplus * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　巨蟹宮のメイル」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_KYOKAIKYUNO_MAIL)) {
			if (IsSameJobClass(JOB_ID_MECHANIC)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　金牛宮のメイル」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_KINGYUKYUNO_MAIL)) {
			if (IsSameJobClass(JOB_ID_GENETIC)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　獅子宮のメイル」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_SHISHIKYUNO_MAIL)) {
			if (IsSameJobClass(JOB_ID_SHURA)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　人馬宮のメイル」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_ZINBAKYUNO_MAIL)) {
			if (IsSameJobClass(JOB_ID_RANGER)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　双児宮のメイル」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_SOZIKYUNO_MAIL)) {
			if (IsSameJobClass(JOB_ID_MINSTREL) || IsSameJobClass(JOB_ID_WANDERER)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　天蝎宮のメイル」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_TENKATSUKYUNO_MAIL)) {
			if (IsSameJobClass(JOB_ID_GILOTINCROSS)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　白羊宮のメイル」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_HAKUYOKYUNO_MAIL)) {
			if (IsSameJobClass(JOB_ID_ROYALGUARD)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　ポルックスローブ」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_POLLUX_ROBE)) {
			if (IsSameJobClass(JOB_ID_STAR_EMPEROR)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　磨羯宮のメイル」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_MAKATSUKYUNO_MAIL)) {
			if (IsSameJobClass(JOB_ID_SHADOWCHASER)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3 * n_A_BODY_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「エンドオブザワールド」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_END_OF_THE_WORLD)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * LearnedSkillSearch(SKILL_ID_CROSS_RIPPER_SLASHER) * itemCount;
		}

		//----------------------------------------------------------------
		// 「ミステリーウィング」の、素ステータスによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_MYSTERY_WING)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * Math.floor(GetTotalPureBasicStatus() / 100) * itemCount;
		}

		//----------------------------------------------------------------
		// 「増幅された怨望＋思念体武器セット」の、精錬による効果
		//----------------------------------------------------------------
		if (cardcount = CardNumSearch(CARD_SET_ID_ENCHANT_ZOFUKUSARETA_ENBO_SHINEN_ARMS_V1)) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * n_A_Weapon_ATKplus * cardcount;
		}

		//----------------------------------------------------------------
		// 「剛勇無双の籠手＋剛勇無双の貫セット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GOYUMUSONO_KOTE_GOYUMUSONO_TSURANUKI)) > 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 4 * n_A_SHOES_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「特選ドラムスーツ＋ゾディアックセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_ENCHANT_ZODIAC_TOKUSEN_DORAM_SUITS)) > 0) {
			if (IsSameJobClass(JOB_ID_SUMMONER)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3 * n_A_BODY_DEF_PLUS * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「特選ドラムシューズ＋ゾディアックセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_ENCHANT_ZODIAC_TOKUSEN_DORAM_SHOES)) > 0) {
			if (IsSameJobClass(JOB_ID_SUMMONER)) {
				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 3 * n_A_SHOES_DEF_PLUS * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「中級ルガンカード」の、武器種類による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_CHUKYU_RGAN)) > 0) {
			if (n_A_WeaponType == ITEM_KIND_BOW) {

				n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 5 * cardCount;

				if (n_A_Weapon_ATKplus >= 10) {
					n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += 10 * cardCount;
				}
			}
		}

		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_PHYSICAL_DAMAGE_UP);
		if (confval != 0) {
			n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP] += confval;
		}

		// クリティカル攻撃で与えるダメージ + ◯% を適用する
		n_tok[ITEM_SP_CRITICAL_DAMAGE_UP] = getCriticalDamageRate();

//================================================================================================================================
//================================================================================================================================
//====
//==== 魔法攻撃時、プレイヤーに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_MAGICAL_DAMAGE_UP_PLAYER_ALL; idx <= ITEM_SP_MAGICAL_DAMAGE_UP_PLAYER_ALL; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}



		if(n_A_WeaponType == 9 || n_A_WeaponType == 12){
			if(EquipNumSearch(2500)) n_tok[242] += 2 * n_A_Weapon_ATKplus;
		}

		//----------------------------------------------------------------
		// 「巨大樹の葉　テンドリルリオンカードセット」の、装備効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_KYODAIZYUNO_WAKABA_TENDORIRURION_CARD)) {
			if ((n_A_WeaponType == ITEM_KIND_BOOK)
				|| (n_A_WeaponType == ITEM_KIND_STUFF)
				|| (n_A_WeaponType == ITEM_KIND_STUFF2HAND)) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_PLAYER_ALL] += 2 * n_A_Weapon_ATKplus;
			}
		}

		//----------------------------------------------------------------
		// 「ブルートアークワンド」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_ARCWAND, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_ARCWAND, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 20;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 10;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 20;
			if (n_A_Weapon2_ATKplus >= 9) vartmp += 10;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「トンボがとまった黄色い猫じゃらし」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_KIROI_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_KIROI_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			vartmp = 0;
			if (n_A_Weapon_ATKplus >= 7) vartmp += 15;
			if (n_A_Weapon_ATKplus >= 8) vartmp += 20;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountRight;

			vartmp = 0;
			if (n_A_Weapon2_ATKplus >= 7) vartmp += 15;
			if (n_A_Weapon2_ATKplus >= 8) vartmp += 20;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_PLAYER_ALL] += vartmp * itemCountLeft;
		}





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_DAMAGE_UP_PLAYER);
		if (confval != 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_PLAYER_ALL] += confval;
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== 魔法攻撃時、ドラム形プレイヤーに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_MAGICAL_DAMAGE_UP_PLAYER_DORAM; idx <= ITEM_SP_MAGICAL_DAMAGE_UP_PLAYER_DORAM; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== 魔法攻撃時、人間形プレイヤーに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_MAGICAL_DAMAGE_UP_PLAYER_HUMAN; idx <= ITEM_SP_MAGICAL_DAMAGE_UP_PLAYER_HUMAN; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== 魔法攻撃時、△△形モンスターに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_MAGICAL_DAMAGE_UP_RACE_SOLID; idx <= ITEM_SP_MAGICAL_DAMAGE_UP_RACE_DRAGON; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}
		for (idx = ITEM_SP_MAGICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER; idx <= ITEM_SP_MAGICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		if(EquipNumSearch(1083)){
			if(n_A_Weapon_ATKplus >= 5) n_tok[177] += 5;
			if(n_A_Weapon_ATKplus >= 7) n_tok[177] += 5;
			if(n_A_Weapon_ATKplus >= 7){
				if(n_A_Weapon_ATKplus <= 10){
					n_tok[177] += 2 * (n_A_Weapon_ATKplus - 5);
				}else{
					n_tok[177] += 10;
				}
			}
		}
		if(n_A_HEAD_DEF_PLUS >= 7 && EquipNumSearch(1771)) n_tok[177] += 5;
		if(n_A_SHIELD_DEF_PLUS >= 8 && EquipNumSearch(1446)) n_tok[174] += 4;
		if(n_A_BODY_DEF_PLUS >= 6 && EquipNumSearch(1901)) n_tok[172] += n_A_BODY_DEF_PLUS - 5;
		if(n_A_BODY_DEF_PLUS >= 6 && 1930 <= n_A_Equip[EQUIP_REGION_ID_BODY] && n_A_Equip[EQUIP_REGION_ID_BODY] <= 1939){
			var w = 170 + (n_A_Equip[EQUIP_REGION_ID_BODY] - 1930);
			n_tok[w] += n_A_BODY_DEF_PLUS - 5;
		}

		//----------------------------------------------------------------
		// 「迅雷杖」の、過剰精錬による効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_ZINRAI_TSUE)) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_FISH] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_FISH] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「無双杖」の、過剰精錬による効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_MUSO_TSUE)) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_ANIMAL] += 10;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_PLANT] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_ANIMAL] += 15;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_PLANT] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「アヴェンジャーウィザードスタッフ」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_WIZARDSTUFF)) {
			if (n_A_Weapon_ATKplus >= 5) n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_HUMAN] += 10;
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_HUMAN] += 10;

			// 破滅Ｌｖ１
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_HUMAN] += 2 * (n_A_Weapon_ATKplus - 5);
			}
		}

		//----------------------------------------------------------------
		// 「裁きの靴　ホーリーステッキセット」の、過剰精錬による効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_SET_ID_SABAKINO_KUTSU_HOLY_STICK)) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_UNDEAD] += 30;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_DEMON] += 30;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_UNDEAD] += 20;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_DEMON] += 20;
			}
		}

		//----------------------------------------------------------------
		// 「一碧杖」の、過剰精錬による効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_IPPEKI_TSUE)) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_SOLID] += 10;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_DEMON] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_SOLID] += 15;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_DEMON] += 15;
			}
		}



		//----------------------------------------------------------------
		// 「死霊魔術師のニット帽」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SHIRYOMAZYUTSUSHINO_NITTOBO)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 10;
			if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 10;

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_UNDEAD] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「深淵のドレス」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SHINENNO_DRESS)) > 0) {
			vartmp = 0;

			if (n_A_BODY_DEF_PLUS >= 5) vartmp += 10;
			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 15;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 15;

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_UNDEAD] += vartmp * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_DEMON] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「悪魔崇拝者の靴　堕天司祭の闇光外套　古代樹の杖セット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_AKUMASUHAISHANO_KUTSU_DATENSHISAINO_ANKOGAITO_KODAIZYUNO_TSUE)) > 0) {
			vartmp = 0;

			if (n_A_Weapon_ATKplus >= 7) vartmp += 20;
			if (n_A_Weapon_ATKplus >= 9) vartmp += 20;

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_HUMAN] += vartmp * itemCount;
		}



		//----------------------------------------------------------------
		// 「猟乱杖」の、過剰精錬による効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_RYORAN_TSUE)) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_INSECT] += 10;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_INSECT] += 15;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER] += 15;
			}
		}



		//----------------------------------------------------------------
		// 「キングスガード」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KINGS_GUARD)) > 0) {
			vartmp = 0;

			if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 15;
			if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 15;

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_UNDEAD] += vartmp * itemCount;
		}



		//----------------------------------------------------------------
		// 「サバイバルシューズ　サバイバルロッドセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SURVIVAL_SHOES_SURVIVAL_ROD_DEX_S1)) > 0) {
			if (n_A_Weapon_ATKplus >= 10) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_HUMAN] += 20 * itemCount;
			}
		}
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SURVIVAL_SHOES_SURVIVAL_ROD_INT_S1)) > 0) {
			if (n_A_Weapon_ATKplus >= 10) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_HUMAN] += 20 * itemCount;
			}
		}



		//----------------------------------------------------------------
		// 「勇者のブローチ」の、職業による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_YUSHANO_BROACH)) > 0) {
			if (IsSameJobClass(JOB_ID_ARCBISHOP) || IsSameJobClass(JOB_ID_SHURA)) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_ALL] += 5 * itemCount;
			}
		}



		//----------------------------------------------------------------
		// 「ソロモンのペンダント　エンチャント増幅セット」の、職業による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SOLOMONNO_PENDANT_ZOFUKU)) > 0) {
			switch (GetLowerJobSeriesID(n_A_JOB)) {
			case JOB_SERIES_ID_NOVICE:
			case JOB_SERIES_ID_MAGICIAN:
			case JOB_SERIES_ID_ACOLYTE:
			case JOB_SERIES_ID_SUMMONER:
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_ALL] += 10 * itemCount;
			}
		}



		//----------------------------------------------------------------
		// 「あざといケロケロカッパ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_AZATOI_KEROKERO_KAPPA)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_ALL] += 8 * LearnedSkillSearch(SKILL_ID_NYAN_GRASS) * itemCount;
		}



		//----------------------------------------------------------------
		// 「インペリアルパニッシュメントローブ」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_IMPERIAL_PUNISHMENT_ROBE)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_ALL] += 5 * LearnedSkillSearch(SKILL_ID_RECOGNIZED_SPELL) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレースパニッシュメントローブ」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_GRACE_PUNISHMENT_ROBE)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_ALL] += 14 * LearnedSkillSearch(SKILL_ID_RECOGNIZED_SPELL) * itemCount;
		}

		//----------------------------------------------------------------
		// 「フォー・オブ・ア・カインド」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_FOUR_OF_A_KIND)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_ALL] += 7 * LearnedSkillSearch(SKILL_ID_TETRA_BOLTEX) * itemCount;
		}

		//----------------------------------------------------------------
		// 「エレメンタルポゼッション」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ELEMENTAL_POSSESSION)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_ALL] += 14 * LearnedSkillSearch(SKILL_ID_ELEMENTAL_SYMPASY) * itemCount;
		}

		//----------------------------------------------------------------
		// 「ラウドパーク」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_LOUD_PARK)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_ALL] += 14 * LearnedSkillSearch(SKILL_ID_MELANCHOLY) * itemCount;
		}

		//----------------------------------------------------------------
		// 「アメイジング・グレイス」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_AMAZING_GRACE)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_ALL] += 14 * LearnedSkillSearch(SKILL_ID_CLEARANCE) * itemCount;
		}

		if(CardNumSearch(895)){
			n_tok[177] -= 50;
			n_tok[178] -= 50;
		}

		if(n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_ALL] != 0){
			for (i = ITEM_SP_MAGICAL_DAMAGE_UP_RACE_SOLID; i <= ITEM_SP_MAGICAL_DAMAGE_UP_RACE_DRAGON; i++) {
				n_tok[i] += n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_ALL];
			}
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_PLAYER_DORAM] += n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_RACE_ALL];
		}



		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_MAGICAL_DAMAGE_UP_RACE);
		if (confval != 0) {
			for (i = ITEM_SP_MAGICAL_DAMAGE_UP_RACE_SOLID; i <= ITEM_SP_MAGICAL_DAMAGE_UP_RACE_DRAGON; i++) {
				n_tok[i] += confval;
			}
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_PLAYER_DORAM] += confval;
		}



		// TODO: 四次対応
		for (idx = ITEM_SP_MAGICAL_DAMAGE_UP_RACE_SOLID; idx <= ITEM_SP_MAGICAL_DAMAGE_UP_RACE_DRAGON; idx++) {
			n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
		}
		for (idx = ITEM_SP_MAGICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER; idx <= ITEM_SP_MAGICAL_DAMAGE_UP_RACE_HUMAN_NOT_PLAYER; idx++) {
			n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== プレイヤー耐性　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_RESIST_PLAYER_ALL; idx <= ITEM_SP_RESIST_PLAYER_ALL; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}



		if(n_A_BODY_DEF_PLUS >= 6 && (EquipNumSearch(2223) || EquipNumSearch(2224))){
			n_tok[243] += 2;
			if(n_A_BODY_DEF_PLUS >= 8) n_tok[243] += 3;
		}
		if(n_A_SHOULDER_DEF_PLUS >= 6 && (EquipNumSearch(2227) || EquipNumSearch(2228))){
			n_tok[243] += 2;
			if(n_A_SHOULDER_DEF_PLUS >= 8) n_tok[243] += 3;
		}
		if(n_A_SHOES_DEF_PLUS >= 6 && (EquipNumSearch(2229) || EquipNumSearch(2230))){
			n_tok[243] += 2;
			if(n_A_SHOES_DEF_PLUS >= 8) n_tok[243] += 3;
		}
		if(SU_VIT >= 108 && EquipNumSearch(2257)) n_tok[243] += 3;

		//----------------------------------------------------------------
		// 「暴徒のスカーフ　グラスセット」の、素ＡＧＩと素ＶＩＴによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_GLASS)) > 0) {
			n_tok[243] += 2 * ROUNDDOWN((SU_AGI + SU_VIT) / 80) * itemCount;
		}

		//----------------------------------------------------------------
		// 「暴徒のスカーフ　サングラスセット」の、素ＡＧＩと素ＶＩＴによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_SUNGLASS)) > 0) {
			n_tok[243] += 2 * ROUNDDOWN((SU_AGI + SU_VIT) / 80) * itemCount;
		}

		//----------------------------------------------------------------
		// 「守護騎士の首飾り　インペリアルセット」の、素ＡＧＩによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SHUGOKISHINO_KUBIKAZARI_IMPERIAL_FEATHER)) > 0) {
			vartmp = 0;

			if (SU_AGI >= 108) vartmp += 2;
			if (SU_AGI >= 120) vartmp += 4;

			n_tok[243] += vartmp * itemCount
		}

		//----------------------------------------------------------------
		// 「巨大樹の若葉　カルデュイの耳セット」の、素ＤＥＸによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KYODAIZYUNO_WAKABA_CARDYUINO_MIMI)) > 0) {
			if (SU_DEX >= 108) {
				n_tok[243] += 2 * itemCount;
			}
			if (SU_DEX >= 120) {
				n_tok[243] += 4 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「くわえたハートのエース　ギャンブラーシールセット」の、素ＬＵＫによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KUWAETA_HEARTNO_ACE_GAMBLER_SEAL)) > 0) {
			if (SU_LUK >= 108) {
				n_tok[243] += 2 * itemCount;
			}
			if (SU_LUK >= 120) {
				n_tok[243] += 4 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「熾天使の羽毛　熾天使の花冠セット」の、素ＩＮＴによる効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_SHITENSHINO_UMO_SHITENSHINO_HANAKANMURI)) {
			vartmp = 0;

			if (SU_INT >= 108) vartmp += 2;
			if (SU_INT >= 120) vartmp += 4;

			n_tok[243] += vartmp;
		}

		//----------------------------------------------------------------
		// 「巡礼者の靴」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ZYUNREISHANO_KUTSU)) > 0) {
			if (sklLv = LearnedSkillSearch(SKILL_ID_SECRAMENT)) {
				n_tok[243] += 2 * sklLv * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「抱きつきシャムネコ」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_DAKITSUKI_SYAMNEKO)) > 0) {
			n_tok[243] += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「イリュージョンロングメイス」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_LONG_MACE)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[243] += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「リングオブジュピター」の、素ＶＩＴによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_RING_OF_JUPITER, EQUIP_REGION_ID_ACCESSARY_2)) > 0) {
			if (SU_VIT >= 125) {
				n_tok[243] += 3 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ランナウェー・アクセラレータ　Q-PLAYERセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_RUNAWAY_ACCELERATOR_Q_PLAYER)) > 0) {
			n_tok[243] += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「不死鳥のリング」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_FUSHICHONO_RING)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_KINGS_GRACE) >= 5) {
				n_tok[243] += 3 * itemCount;
			}
		}





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomDef.GetConf(CCharaConfCustomDef.CONF_ID_RESIST_PLAYER);
		if (confval != 0) {
			n_tok[243] += confval;
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== ドラム形プレイヤー耐性＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_RESIST_PLAYER_DORAM; idx <= ITEM_SP_RESIST_PLAYER_DORAM; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}



		//----------------------------------------------------------------
		// 「イリュージョンゴヴニュの兜」の、ベースレベルによる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_GOIBHNIUNO_KABUTO)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_RESIST_PLAYER_DORAM] += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョンゴヴニュの鎧」の、ベースレベルによる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_GOIBHNIUNO_YOROI)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_RESIST_PLAYER_DORAM] += 7 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョンゴヴニュの肩飾り」の、ベースレベルによる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_GOIBHNIUNO_KATAKAZARI)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_RESIST_PLAYER_DORAM] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョンゴヴニュの軍靴」の、ベースレベルによる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_GOIBHNIUNO_GUNKA)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_RESIST_PLAYER_DORAM] += 5 * itemCount;
			}
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== 人間形プレイヤー耐性＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_RESIST_PLAYER_HUMAN; idx <= ITEM_SP_RESIST_PLAYER_HUMAN; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== 種族耐性　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_RESIST_RACE_SOLID; idx <= ITEM_SP_RESIST_RACE_DRAGON; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}
		n_tok[ITEM_SP_RESIST_RACE_HUMAN_NOT_PLAYER] += GetRndOptTotalValue(ITEM_SP_RESIST_RACE_HUMAN_NOT_PLAYER, null, false);
		// n_tok[ITEM_SP_RESIST_RACE_HUMAN_NOT_PLAYER] = GetRndEnchValue(ITEM_SP_RESIST_RACE_HUMAN_NOT_PLAYER);

		//----------------------------------------------------------------
		// ドラム種族の種族特性
		//----------------------------------------------------------------
		if (IsDoramJob(n_A_JOB)) {
			// TODO: 正確には物理ダメージのみだが、計算機での被弾ダメージ計算は物理だけなので、とりあえず
			n_tok[ITEM_SP_RESIST_RACE_HUMAN_NOT_PLAYER] -= 10;
		}



		if(CardNumSearch(452) && GetLowerJobSeriesID(n_A_JOB)==3){
			n_tok[51] += 30;
			n_tok[56] += 30;
		}

		if(g_confDataNizi[CCharaConfNizi.CONF_ID_PROVIDENCE] && GetHigherJobSeriesID(n_A_JOB) != 13) {
			n_tok[56] += g_confDataNizi[CCharaConfNizi.CONF_ID_PROVIDENCE] * 5;
		}

		// 「ドラゴノロジー」による「竜形モンスターから受けるダメージ耐性UP」
		n_tok[ITEM_SP_RESIST_RACE_DRAGON] += Math.max(LearnedSkillSearch(SKILL_ID_DRAGONOLOGY), UsedSkillSearch(SKILL_ID_DRAGONOLOGY)) * 4;

		for(var i=971;i<=977;i++){
			if(EquipNumSearch(i)){
				n_tok[50] -= 200;
				n_tok[51] -= 200;
				n_tok[52] -= 200;
				n_tok[53] -= 200;
				n_tok[54] -= 200;
				n_tok[55] -= 200;
				n_tok[56] -= 200;
				n_tok[58] -= 200;
				n_tok[59] -= 200;
			}
		}
		if(n_A_SHOULDER_DEF_PLUS >= 7 && EquipNumSearch(1110)) n_tok[57] += 3;
		if(n_A_SHOES_DEF_PLUS >= 7 && EquipNumSearch(1107)) n_tok[57] += 3;
		if(n_A_BODY_DEF_PLUS >= 7 && EquipNumSearch(1104)) n_tok[57] += 2;
		if(n_A_SHIELD_DEF_PLUS >= 8 && EquipNumSearch(1446)) n_tok[54] += 20;
		if(n_A_SHOULDER_DEF_PLUS >= 1){
			if(EquipNumSearch(2205)) n_tok[50] += n_A_SHOULDER_DEF_PLUS;
			if(EquipNumSearch(1509)) n_tok[52] += n_A_SHOULDER_DEF_PLUS;
			if(EquipNumSearch(1511)) n_tok[58] += n_A_SHOULDER_DEF_PLUS;
			if(EquipNumSearch(1513)) n_tok[56] += n_A_SHOULDER_DEF_PLUS;
			if(EquipNumSearch(1515)) n_tok[55] += n_A_SHOULDER_DEF_PLUS;
			if(EquipNumSearch(1517)) n_tok[51] += n_A_SHOULDER_DEF_PLUS;
			if(EquipNumSearch(1519)) n_tok[53] += n_A_SHOULDER_DEF_PLUS;
			if(EquipNumSearch(1521)) n_tok[57] += n_A_SHOULDER_DEF_PLUS;
			if(EquipNumSearch(1523)) n_tok[59] += n_A_SHOULDER_DEF_PLUS;
			if(EquipNumSearch(2132)) n_tok[54] += n_A_SHOULDER_DEF_PLUS;
		}
		if(EquipNumSearch(1568)){
			for(var i=0;i<=9;i++) n_tok[50+i] -= 10;
			n_tok[57] += 10;
		}
		if(EquipNumSearch(1573)){
			for(var i=0;i<=9;i++) n_tok[50+i] -= 10;
			n_tok[51] += 10;
			n_tok[56] += 10;
		}
		if(n_A_HEAD_DEF_PLUS >= 9 && n_A_card[CARD_REGION_ID_HEAD_TOP]==626) n_tok[54] += 5;
		if(n_A_HEAD_DEF_PLUS >= 7 && EquipNumSearch(1814)) n_tok[52] += 5;
		if(n_A_Weapon_ATKplus >= 6 && EquipNumSearch(1823)) n_tok[57] += (n_A_Weapon_ATKplus - 5);
		if(n_A_BODY_DEF_PLUS >= 3 && EquipNumSearch(1913)) n_tok[51] += Math.floor(n_A_BODY_DEF_PLUS / 3) * 5;
		if(n_A_HEAD_DEF_PLUS >= 6 && EquipNumSearch(1942)) n_tok[55] += 5;
		if(n_A_HEAD_DEF_PLUS >= 6 && 1954 <= n_A_Equip[EQUIP_REGION_ID_HEAD_TOP] && n_A_Equip[EQUIP_REGION_ID_HEAD_TOP] <= 1963) n_tok[50 + n_A_Equip[EQUIP_REGION_ID_HEAD_TOP] - 1954] += 5;
		if(n_A_HEAD_DEF_PLUS >= 7){
			if(EquipNumSearch(2073) || EquipNumSearch(2074) || EquipNumSearch(2075) || EquipNumSearch(2076)) n_tok[57] += 5;
		}
		if(2212 <= n_A_Equip[EQUIP_REGION_ID_BODY] && n_A_Equip[EQUIP_REGION_ID_BODY] <= 2221) n_tok[50 + (n_A_Equip[EQUIP_REGION_ID_BODY] - 2212)] += n_A_BODY_DEF_PLUS;
		if(EquipNumSearch(2289)) n_tok[54] += n_A_HEAD_DEF_PLUS;

		if(EquipNumSearch(1879)){
			n_tok[ITEM_SP_RESIST_RACE_ALL] += 30;
		}

		//----------------------------------------------------------------
		// 「戦死者のマント」の、精錬値２ごとの、人間種族耐性
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_SENSHISHANO_MANT)){
			n_tok[ITEM_SP_RESIST_RACE_HUMAN] += ROUNDDOWN(n_A_SHOULDER_DEF_PLUS / 2);
		}

		//----------------------------------------------------------------
		// 「古びた系頭装備」の、過剰精錬による、人間種族耐性
		//----------------------------------------------------------------
		if(EquipNumSearchFurubitaHead()) {
			if(n_A_HEAD_DEF_PLUS >= 7) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 5;
			if(n_A_HEAD_DEF_PLUS >= 9) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 2;
		}

		//----------------------------------------------------------------
		// 「A-Tolerance　ライオットチップセット」の、精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_RIOTCHIP_A_TOLERANCE)) {
			n_tok[ITEM_SP_RESIST_RACE_SOLID] += n_A_HEAD_DEF_PLUS;
			n_tok[ITEM_SP_RESIST_RACE_HUMAN] += n_A_HEAD_DEF_PLUS;
		}

		//----------------------------------------------------------------
		// 「カルデュイの法衣」の、過剰精錬による効果
		//----------------------------------------------------------------
		if(EquipNumSearchMIG(ITEM_ID_CARDYUINO_HOI)){
			if (n_A_BODY_DEF_PLUS >= 7) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 2;
			if (n_A_BODY_DEF_PLUS >= 8) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 2;
			if (n_A_BODY_DEF_PLUS >= 9) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 2;
		}

		//----------------------------------------------------------------
		// 「ヴァルキリーナイフ」の、職業による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE)) {
			switch (GetLowerJobSeriesID(n_A_JOB)) {

			// ノービス系
			case JOB_SERIES_ID_NOVICE:
				if (n_A_Weapon_ATKplus >= 7) {
					n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 10 * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE);
				}
				break;

			// マジシャン系
			case JOB_SERIES_ID_MAGICIAN:
				if (n_A_Weapon_ATKplus >= 7) {
					n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 10 * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE);
				}
				break;

			// シーフ系
			case JOB_SERIES_ID_THIEF:
				break;

			default:
				switch (GetHigherJobSeriesID(n_A_JOB)) {

				// ハンター系
				case JOB_SERIES_ID_HUNTER:
					break;

				// バード系、ダンサー系
				case JOB_SERIES_ID_BARD:
				case JOB_SERIES_ID_DANCER:
					break;
				}
			}
		}

		//----------------------------------------------------------------
		// 「アヴェンジャー系装備」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_CLAYMORE)
			|| EquipNumSearch(ITEM_ID_AVENGER_LANCE)
			|| EquipNumSearch(ITEM_ID_AVENGER_TWOHAND_AXE)
			|| EquipNumSearch(ITEM_ID_AVENGER_BLOODYROAR)
			|| EquipNumSearch(ITEM_ID_AVENGER_JAMADHAR)
			|| EquipNumSearch(ITEM_ID_AVENGER_HUNTERBOW)
			|| EquipNumSearch(ITEM_ID_AVENGER_WIZARDSTUFF)
			|| EquipNumSearch(ITEM_ID_AVENGER_HANDGUN)
			|| EquipNumSearch(ITEM_ID_AVENGER_RIFLE)
			|| EquipNumSearch(ITEM_ID_AVENGER_GATLINGGUN)
			|| EquipNumSearch(ITEM_ID_AVENGER_SHOTGUN)
			|| EquipNumSearch(ITEM_ID_AVENGER_GRENADEGUN)
			|| EquipNumSearch(ITEM_ID_AVENGER_FUMASHURIKEN)) {
			if (n_A_Weapon_ATKplus >= 5) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 10;
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 10;
		}

		//----------------------------------------------------------------
		// 「サバイバルオーブ　サークレットセット」の、装備効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_SURVIVAL_ORB_SURVIVAL_CIRCLET)) {
			if (n_A_HEAD_DEF_PLUS >= 7) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 4;
			if (n_A_HEAD_DEF_PLUS >= 9) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 4;
		}

		//----------------------------------------------------------------
		// 「サバイバルオーブ　マントセット」の、装備効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_SURVIVAL_ORB_SURVIVAL_MANT)) {
			if (n_A_SHOULDER_DEF_PLUS >= 5) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 2;
			if (n_A_SHOULDER_DEF_PLUS >= 7) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 2;
		}

		//----------------------------------------------------------------
		// 「ギガントブーツ」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_GIGANT_BOOTS)) {
			if (n_A_SHOES_DEF_PLUS >= 5) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 2;
			if (n_A_SHOES_DEF_PLUS >= 7) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 2;
		}

		//----------------------------------------------------------------
		// 「ギガントブーツ　アックスセット」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_GIGANT_BOOTS_GIGANT_AXE)) {
			if (n_A_SHOES_DEF_PLUS >= 7) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 30;
		}

		//----------------------------------------------------------------
		// 「アインヘリヤルの鎧」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_EINHERJERNO_YOROI)) {
			if (n_A_BODY_DEF_PLUS >= 7) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 2;
			if (n_A_BODY_DEF_PLUS >= 8) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 2;
			if (n_A_BODY_DEF_PLUS >= 9) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 2;
		}

		//----------------------------------------------------------------
		// 「ガーディアンプロセッサ」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_GUARDIAN_PROCESSOR)) > 0) {
			if (n_A_HEAD_DEF_PLUS >= 7) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 2 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ガーディアンプロセッサ　ガーディアンユニットセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GUARDIAN_PROCESSOR_GUARDIAN_UNIT)) > 0) {
			vartmp = 0;

			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 2;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 2;

			n_tok[ITEM_SP_RESIST_RACE_HUMAN] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「ガーディアンプロセッサ　ガーディアンエンジンセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GUARDIAN_PROCESSOR_GUARDIAN_ENGINE)) > 0) {
			vartmp = 0;

			if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 1;

			n_tok[ITEM_SP_RESIST_RACE_HUMAN] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「ガーディアンプロセッサ　ガーディアンブースターセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GUARDIAN_PROCESSOR_GUARDIAN_BOOSTER)) > 0) {
			vartmp = 0;

			if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 1;

			n_tok[ITEM_SP_RESIST_RACE_HUMAN] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「死霊魔術師のニット帽」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SHIRYOMAZYUTSUSHINO_NITTOBO)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 3;
			if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 5;

			n_tok[ITEM_SP_RESIST_RACE_UNDEAD] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「バレルヘルム」の、過剰精錬による効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_BARREL_HELM)){
			if (n_A_HEAD_DEF_PLUS >= 8) n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 10;
		}

		//----------------------------------------------------------------
		// 「業風石　ペオースプレートセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GOFUSEKI_PEORTH_PLATE)) > 0) {
			vartmp = 0;

			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 2;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 2;

			n_tok[ITEM_SP_RESIST_RACE_HUMAN] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「業風石　ペオースマントセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GOFUSEKI_PEORTH_MANT)) > 0) {
			vartmp = 0;

			if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 1;

			n_tok[ITEM_SP_RESIST_RACE_HUMAN] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「業風石　ペオースグリーブセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GOFUSEKI_PEORTH_GREEVE)) > 0) {
			vartmp = 0;

			if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 1;
			if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 1;

			n_tok[ITEM_SP_RESIST_RACE_HUMAN] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「セリーヌのブローチ　リボンセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_CELINENO_BROACH_CELINENO_RIBBON)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 10;
			if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 2;

			n_tok[ITEM_SP_RESIST_RACE_HUMAN] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「聖なる白衣」の、精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_SEINARU_HAKUI) > 0) {
			if (n_A_BODY_DEF_PLUS >= 8) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 7;
			}
		}

		//----------------------------------------------------------------
		// 「負傷兵の包帯」の、過剰精錬による強化
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_FUSHOHENO_HOTAI)) {
			n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 2 * ROUNDDOWN(n_A_HEAD_DEF_PLUS / 3);
		}

		//----------------------------------------------------------------
		// 「天狗の下駄」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_TENGUNO_GETA)) > 0) {
			if (sklLv = LearnedSkillSearch(SKILL_ID_TENKETSU_KATSU)) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 1 * sklLv * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ゴッズアーマー」の、過剰精錬による効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_GODS_ARMOR)){
			n_tok[ITEM_SP_RESIST_RACE_UNDEAD] += 1 * n_A_BODY_DEF_PLUS;
		}

		//----------------------------------------------------------------
		// 「灰羽のブーツ　黒羽スーツセット」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_HAIHANENO_BOOTS_KUROHANO_SUITS)) > 0) {
			if (n_A_BODY_DEF_PLUS >= 7) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 8 * itemCount;
			}

			if (n_A_BODY_DEF_PLUS >= 9) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 4 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「灰羽のブーツ　白羽スーツセット」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_HAIHANENO_BOOTS_SHIRAHANO_SUITS)) > 0) {
			if (n_A_BODY_DEF_PLUS >= 7) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 8 * itemCount;
			}

			if (n_A_BODY_DEF_PLUS >= 9) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 4 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「アンソニの服」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ANSONINO_FUKU)) > 0) {
			if (n_A_BODY_DEF_PLUS >= 8) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 7 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「大自然のギター」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_DAISHIZENNO_GUITAR)) > 0) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 5 * itemCount;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「大自然のロープ」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_DAISHIZENNO_ROPE)) > 0) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 5 * itemCount;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョン妖怪の槍」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_YOKAINO_YARI)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_RESIST_RACE_UNDEAD] += 20 * itemCount;
				n_tok[ITEM_SP_RESIST_RACE_DEMON] += 20 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョンゴヴニュの兜」の、ベースレベルによる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_GOIBHNIUNO_KABUTO)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョンゴヴニュの鎧」の、ベースレベルによる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_GOIBHNIUNO_YOROI)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 7 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョンゴヴニュの肩飾り」の、ベースレベルによる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_GOIBHNIUNO_KATAKAZARI)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョンゴヴニュの軍靴」の、ベースレベルによる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_GOIBHNIUNO_GUNKA)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_RESIST_RACE_HUMAN] += 5 * itemCount;
			}
		}




		if (n_tok[ITEM_SP_RESIST_RACE_ALL] != 0) {
			for (i = ITEM_SP_RESIST_RACE_SOLID; i <= ITEM_SP_RESIST_RACE_DRAGON; i++) {
				n_tok[i] += n_tok[ITEM_SP_RESIST_RACE_ALL];
			}
			n_tok[ITEM_SP_RESIST_PLAYER_DORAM] += n_tok[ITEM_SP_RESIST_RACE_ALL];
		}

		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomDef.GetConf(CCharaConfCustomDef.CONF_ID_RESIST_RACE);
		if (confval != 0) {
			for (i = ITEM_SP_RESIST_RACE_SOLID; i <= ITEM_SP_RESIST_RACE_DRAGON; i++) {
				n_tok[i] += confval;
			}
			n_tok[ITEM_SP_RESIST_PLAYER_DORAM] += confval;
		}

//================================================================================================================================
//================================================================================================================================
//====
//==== 属性耐性　ここから
//====
//================================================================================================================================
//================================================================================================================================
		ApplyAdditionalResistElement();

//================================================================================================================================
//================================================================================================================================
//====
//==== 属性モンスター耐性　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_RESIST_MONSTER_ELM_VANITY; idx <= ITEM_SP_RESIST_MONSTER_ELM_UNDEAD; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		if(n_tok[271] != 0){
			for(var i=330;i<=339;i++) n_tok[i] += n_tok[271];
		}

//================================================================================================================================
//================================================================================================================================
//====
//==== サイズ耐性　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_RESIST_SIZE_SMALL; idx <= ITEM_SP_RESIST_SIZE_LARGE; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}




		if(EquipNumSearch(624)) n_tok[ITEM_SP_RESIST_SIZE_MEDIUM] += n_A_Weapon_ATKplus;
		if(n_A_SHIELD_DEF_PLUS >= 9 && EquipNumSearch(1685)) n_tok[ITEM_SP_RESIST_SIZE_LARGE] += 5;
		if(n_A_HEAD_DEF_PLUS >= 6 && EquipNumSearch(2120)){
			n_tok[ITEM_SP_RESIST_SIZE_SMALL] += n_A_HEAD_DEF_PLUS - 5;
			n_tok[ITEM_SP_RESIST_SIZE_MEDIUM] += n_A_HEAD_DEF_PLUS - 5;
			n_tok[ITEM_SP_RESIST_SIZE_LARGE] += n_A_HEAD_DEF_PLUS - 5;
			if(n_A_HEAD_DEF_PLUS >= 10){
				n_tok[ITEM_SP_RESIST_SIZE_SMALL] += 5;
				n_tok[ITEM_SP_RESIST_SIZE_MEDIUM] += 5;
				n_tok[ITEM_SP_RESIST_SIZE_LARGE] += 5;
			}
		}
		if(EquipNumSearch(2336)) n_tok[192] += 2 * n_A_SHIELD_DEF_PLUS;
		if(n_A_SHIELD_DEF_PLUS >= 9 && EquipNumSearch(2454)){
			n_tok[ITEM_SP_RESIST_SIZE_SMALL] += 20;
			n_tok[ITEM_SP_RESIST_SIZE_MEDIUM] += 20;
			n_tok[ITEM_SP_RESIST_SIZE_LARGE] += 20;
		}
		if(EquipNumSearch(2456)) n_tok[ITEM_SP_RESIST_SIZE_MEDIUM] += n_A_Weapon_ATKplus;

		//----------------------------------------------------------------
		// 「スティングのシルクリボン」の、過剰精錬による効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_STINGNO_SILKRIBBON)){

			if(n_A_HEAD_DEF_PLUS >= 5){
				n_tok[ITEM_SP_RESIST_SIZE_SMALL] += 2;
				n_tok[ITEM_SP_RESIST_SIZE_MEDIUM] += 2;
				n_tok[ITEM_SP_RESIST_SIZE_LARGE] += 2;
			}

			if(n_A_HEAD_DEF_PLUS >= 7){
				n_tok[ITEM_SP_RESIST_SIZE_SMALL] += 3;
				n_tok[ITEM_SP_RESIST_SIZE_MEDIUM] += 3;
				n_tok[ITEM_SP_RESIST_SIZE_LARGE] += 3;
			}

			if(EquipNumSearch(ITEM_ID_SHINKUNO_BARA)){
				n_tok[ITEM_SP_RESIST_SIZE_SMALL] += 5;
				n_tok[ITEM_SP_RESIST_SIZE_MEDIUM] += 5;
				n_tok[ITEM_SP_RESIST_SIZE_LARGE] += 5;
			}

			if(CardNumSearch(CARD_ID_STING)){
				n_tok[ITEM_SP_RESIST_SIZE_SMALL] += 10;
				n_tok[ITEM_SP_RESIST_SIZE_MEDIUM] += 10;
				n_tok[ITEM_SP_RESIST_SIZE_LARGE] += 10;
			}
		}

		//----------------------------------------------------------------
		// 「ギガントブーツ　シールドセット」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_GIGANT_BOOTS_GIGANT_SHIELD)) {
			if (n_A_SHIELD_DEF_PLUS >= 7) n_tok[ITEM_SP_RESIST_SIZE_LARGE] += 2;
			if (n_A_SHIELD_DEF_PLUS >= 9) n_tok[ITEM_SP_RESIST_SIZE_LARGE] += 3;
		}

		//----------------------------------------------------------------
		// 「皇竜の天翼」の、職業による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_KORYUNO_TENYOKU)) {
			if (GetLowerJobSeriesID(n_A_JOB) == JOB_SERIES_ID_SWORDMAN) {
				n_tok[ITEM_SP_RESIST_SIZE_MEDIUM] += 3;
				n_tok[ITEM_SP_RESIST_SIZE_LARGE] += 5;
			}
		}

		//----------------------------------------------------------------
		// 「大長老アイリンカード」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_ID_DAICHORO_AIRIN)) {
			if (n_A_SHIELD_DEF_PLUS >= 7) {
				n_tok[ITEM_SP_RESIST_SIZE_SMALL] += 10;
				n_tok[ITEM_SP_RESIST_SIZE_MEDIUM] += 10;
				n_tok[ITEM_SP_RESIST_SIZE_LARGE] += 10;
			}
		}

		//----------------------------------------------------------------
		// 「ドラムシールド」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_DORAM_SHIELD)) {
			if (n_A_SHIELD_DEF_PLUS >= 8) {
				n_tok[ITEM_SP_RESIST_SIZE_SMALL] += 10;
				n_tok[ITEM_SP_RESIST_SIZE_MEDIUM] += 10;
				n_tok[ITEM_SP_RESIST_SIZE_LARGE] += 10;
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョンサバイバルスタッフ」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_SURVIVAL_STUFF)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_RESIST_SIZE_SMALL] += 10 * itemCount;
				n_tok[ITEM_SP_RESIST_SIZE_MEDIUM] += 10 * itemCount;
				n_tok[ITEM_SP_RESIST_SIZE_LARGE] += 10 * itemCount;
			}
		}





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomDef.GetConf(CCharaConfCustomDef.CONF_ID_RESIST_SIZE);
		if (confval != 0) {
			for (i = ITEM_SP_RESIST_SIZE_SMALL; i <= ITEM_SP_RESIST_SIZE_LARGE; i++) {
				n_tok[i] += confval;
			}
		}





		// TODO: 四次対応

		// サイズ物理耐性
		for (i = ITEM_SP_PHYSICAL_RESIST_SIZE_SMALL; i <= ITEM_SP_PHYSICAL_RESIST_SIZE_LARGE; i++) {
			n_tok[i] = ApplySpecModify(i, n_tok[i]);
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== 遠距離攻撃耐性　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_RESIST_LONGRANGE; idx <= ITEM_SP_RESIST_LONGRANGE; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		if (UsedSkillSearch(SKILL_ID_ADJUSTMENT)) {
			n_tok[ITEM_SP_RESIST_LONGRANGE] += 20;
		}
		if(n_A_HEAD_DEF_PLUS >= 6 && EquipNumSearch(1898)) {
			n_tok[ITEM_SP_RESIST_LONGRANGE] += n_A_HEAD_DEF_PLUS - 5;
		}
		if(n_A_SHIELD_DEF_PLUS >= 6 && EquipNumSearch(1965)){
			n_tok[ITEM_SP_RESIST_LONGRANGE] += n_A_SHIELD_DEF_PLUS - 5;
			n_tok[196] -= (n_A_SHIELD_DEF_PLUS - 5);
		}
		if(EquipNumSearch(1999)) {
			n_tok[ITEM_SP_RESIST_LONGRANGE] += n_A_SHOULDER_DEF_PLUS;
		}
		if(n_A_HEAD_DEF_PLUS >= 5 && EquipNumSearch(2184)){
			n_tok[ITEM_SP_RESIST_LONGRANGE] += 3;
			if(n_A_HEAD_DEF_PLUS >= 7) {
				n_tok[ITEM_SP_RESIST_LONGRANGE] += 4;
			}
		}

		//----------------------------------------------------------------
		// 「執行者のマント」の、ギロチンクロス装備時の強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_SHIKKOSHANO_MANT)) {
			if (IsSameJobClass(JOB_ID_GILOTINCROSS)) {

				// 効果本体
				n_tok[ITEM_SP_RESIST_LONGRANGE] += 20;
				if (n_A_SHOULDER_DEF_PLUS >= 7) {
					n_tok[ITEM_SP_RESIST_LONGRANGE] += 15;
				}

				// 特定装備の効果打消し
				if (EquipNumSearch(ITEM_ID_IMUKENO_OSODE)) {
					n_tok[ITEM_SP_RESIST_LONGRANGE] -= 35;
				}
				if (CardNumSearch(CARD_ID_HORN)) {
					n_tok[ITEM_SP_RESIST_LONGRANGE] -= 35;
				}
			}
		}

		//----------------------------------------------------------------
		// 「与一の肩掛け」の、レンジャー装備時の強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_YOICHINO_KATAKAE)) {
			if (IsSameJobClass(JOB_ID_RANGER)) {

				// 効果本体
				n_tok[ITEM_SP_RESIST_LONGRANGE] += 20;
				if (n_A_SHOULDER_DEF_PLUS >= 7) {
					n_tok[ITEM_SP_RESIST_LONGRANGE] += 15;
				}

				// 特定装備の効果打消し
				if (EquipNumSearch(ITEM_ID_IMUKENO_OSODE)) {
					n_tok[ITEM_SP_RESIST_LONGRANGE] -= 35;
				}
				if (CardNumSearch(CARD_ID_HORN)) {
					n_tok[ITEM_SP_RESIST_LONGRANGE] -= 35;
				}
			}
		}

		//----------------------------------------------------------------
		// 「射向の大袖」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_IMUKENO_OSODE)) {
			if (n_A_SHIELD_DEF_PLUS >= 5) n_tok[ITEM_SP_RESIST_LONGRANGE] += 5;
			if (n_A_SHIELD_DEF_PLUS >= 7) n_tok[ITEM_SP_RESIST_LONGRANGE] += 10;
			if (n_A_SHIELD_DEF_PLUS >= 9) n_tok[ITEM_SP_RESIST_LONGRANGE] += 15;
		}

		//----------------------------------------------------------------
		// 「皇竜の天翼」の、職業による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_KORYUNO_TENYOKU)) {
			if (GetLowerJobSeriesID(n_A_JOB) == JOB_SERIES_ID_ARCHER) {
				// 黄色いスカーフと同時に装備すると効果なし
				if (EquipNumSearch(ITEM_ID_KIROI_SCARF) == 0) {
					n_tok[ITEM_SP_RESIST_LONGRANGE] += 10;
				}
			}
		}

		//----------------------------------------------------------------
		// 「業風石　ペオースマントセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GOFUSEKI_PEORTH_MANT)) > 0) {
			vartmp = 0;

			if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 10;
			if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 10;

			n_tok[ITEM_SP_RESIST_LONGRANGE] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「スナイピングベール」の、過剰精錬による強化
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_SNIPING_VEIL)) {
			if (n_A_SHOULDER_DEF_PLUS >= 7) {
				n_tok[ITEM_SP_RESIST_LONGRANGE] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「負傷兵の包帯」の、過剰精錬による強化
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_FUSHOHENO_HOTAI)) {
			n_tok[ITEM_SP_RESIST_LONGRANGE] += 2 * ROUNDDOWN(n_A_HEAD_DEF_PLUS / 3);
		}

		//----------------------------------------------------------------
		// 「[ECO] サラマンダー・アルマカード」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_ID_ECO_SALAMANDER_ARMA)) {
			if (n_A_SHOULDER_DEF_PLUS >= 7) n_tok[ITEM_SP_RESIST_LONGRANGE] += 10;
		}

		//----------------------------------------------------------------
		// 「コヨーテカード」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_ID_COVOTE)) {
			if (n_A_SHOULDER_DEF_PLUS >= 7) n_tok[ITEM_SP_RESIST_LONGRANGE] += 10;
		}

		//----------------------------------------------------------------
		// 「用心棒のスカーフ」の、影狼・朧装備時の強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_YOZINBONO_SCARF)) {
			if (IsSameJobClass(JOB_ID_KAGERO) || IsSameJobClass(JOB_ID_OBORO)) {

				// 効果本体
				n_tok[ITEM_SP_RESIST_LONGRANGE] += 20;
				if (n_A_SHOULDER_DEF_PLUS >= 7) {
					n_tok[ITEM_SP_RESIST_LONGRANGE] += 15;
				}

				// 特定装備の効果打消し
				if (EquipNumSearch(ITEM_ID_IMUKENO_OSODE)) {
					n_tok[ITEM_SP_RESIST_LONGRANGE] -= 35;
				}
				if (CardNumSearch(CARD_ID_HORN)) {
					n_tok[ITEM_SP_RESIST_LONGRANGE] -= 35;
				}
			}
		}

		//----------------------------------------------------------------
		// 「ダークフェイスワームカード」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_ID_DARK_FACEWORM)) {
			if (n_A_SHOULDER_DEF_PLUS >= 7) n_tok[ITEM_SP_RESIST_LONGRANGE] += 10;
		}

		//----------------------------------------------------------------
		// 「イリュージョンマフラー」の、ベースレベルによる強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_MUFFLER)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_RESIST_LONGRANGE] += 15 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「剛勇無双の神輿　剛勇無双の甲胄　セット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GOYUMUSONO_MIKOSHI_GOYUMUSONO_KACCHU)) > 0) {
			n_tok[ITEM_SP_RESIST_LONGRANGE] += 5 * Math.floor(n_A_BODY_DEF_PLUS / 3) * itemCount;
		}





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomDef.GetConf(CCharaConfCustomDef.CONF_ID_RESIST_LONGRANGE);
		if (confval != 0) {
			n_tok[ITEM_SP_RESIST_LONGRANGE] += confval;
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== ボスモンスターから受けるダメージ－○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_RESIST_BOSS; idx <= ITEM_SP_RESIST_BOSS; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}



		if(EquipNumSearch(1030)){
			n_tok[77] -= (5 * EquipNumSearch(1030));
			n_tok[79] -= (5 * EquipNumSearch(1030));
		}
		if(n_A_HEAD_DEF_PLUS >= 6 && EquipNumSearch(1650)) n_tok[79] += n_A_HEAD_DEF_PLUS - 5;
		if(EquipNumSearch(1627)){
			if(n_A_Weapon_ATKplus >= 5) n_tok[79] -= 5;
			if(n_A_Weapon_ATKplus >= 7) n_tok[79] -= 5;
		}
		if(EquipNumSearch(1748) || EquipNumSearch(1749)) n_tok[77] += Math.floor(n_A_SHIELD_DEF_PLUS / 3);
		if(EquipNumSearch(1754) || EquipNumSearch(1755)) n_tok[77] += Math.floor(n_A_BODY_DEF_PLUS / 2);

		//----------------------------------------------------------------
		// 「ギガントブーツ　ランスセット」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_GIGANT_BOOTS_GIGANT_LANCE)) {
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_RESIST_BOSS] += 20;
			if (n_A_Weapon_ATKplus >= 9) n_tok[ITEM_SP_RESIST_BOSS] += 30;
		}

		//----------------------------------------------------------------
		// 「ギガントブーツ　シールドセット」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_GIGANT_BOOTS_GIGANT_SHIELD)) {
			if (n_A_SHIELD_DEF_PLUS >= 7) n_tok[ITEM_SP_RESIST_BOSS] += 2;
			if (n_A_SHIELD_DEF_PLUS >= 9) n_tok[ITEM_SP_RESIST_BOSS] += 3;
		}

		//----------------------------------------------------------------
		// 「皇竜の天翼」の、職業による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_KORYUNO_TENYOKU)) {
			if (GetLowerJobSeriesID(n_A_JOB) == JOB_SERIES_ID_MERCHANT) {
				n_tok[ITEM_SP_RESIST_NOTBOSS] += 3;
				n_tok[ITEM_SP_RESIST_BOSS] += 5;
			}
		}

		//----------------------------------------------------------------
		// 「ジークフリードの兜」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ZIRKFREEDNO_KABUTO)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_HEAD_DEF_PLUS >= 8) vartmp += 10;

			n_tok[ITEM_SP_RESIST_BOSS] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「フロンティアブーツ　鉱員のつるはしセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FRONTIER_BOOTS_KOINNO_TSURUHASHI)) > 0) {
			if (n_A_SHOES_DEF_PLUS >= 7) {
				if (n_A_Weapon_ATKplus >= 7) {
					n_tok[ITEM_SP_RESIST_BOSS] += 30 * itemCount;
				}
				if (n_A_Weapon_ATKplus >= 9) {
					n_tok[ITEM_SP_RESIST_BOSS] += 20 * itemCount;
				}
			}
		}

		//----------------------------------------------------------------
		// 「フロンティアブーツ　風魔手裏剣・花吹雪セット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FRONTIER_BOOTS_FUMASHURIKEN_HANAFUBUKI)) > 0) {
			if (n_A_SHOES_DEF_PLUS >= 7) {
				if (n_A_Weapon_ATKplus >= 7) {
					n_tok[ITEM_SP_RESIST_BOSS] += 30 * itemCount;
				}
				if (n_A_Weapon_ATKplus >= 9) {
					n_tok[ITEM_SP_RESIST_BOSS] += 20 * itemCount;
				}
			}
		}

		//----------------------------------------------------------------
		// 「パワードウィング」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_POWERED_WING)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_NUTRAL_BARRIER) >= 3) {
				n_tok[ITEM_SP_RESIST_BOSS] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「インペリアルホーリーローブ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_HOLY_ROBE)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_SECRAMENT) >= 5) {
				n_tok[ITEM_SP_RESIST_BOSS] += 2 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「グレースホーリーローブ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_HOLY_ROBE)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_SECRAMENT) >= 5) {
				n_tok[ITEM_SP_RESIST_BOSS] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ノーザンクロス」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_NORTHERN_CROSS)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_RECOGNIZED_SPELL) >= 5) {
				n_tok[ITEM_SP_RESIST_BOSS] += 20 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ファフニールヘルム」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_FAFNIR_HELM)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_DRAGON_HOWLING) >= 5) {
				n_tok[ITEM_SP_RESIST_BOSS] += 20 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ウルフオフィサーハット」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_WOLF_OFFICER_HAT)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_AIMED_BOLT) >= 10) {
				n_tok[ITEM_SP_RESIST_BOSS] += 20 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「もこふわシャークパジャマ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_MOKOFUWA_SHARK_PAJAMA)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_NODOWO_NARASU) >= 5) {
				n_tok[ITEM_SP_RESIST_BOSS] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　人馬宮のクラウン」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_ZINBAKYUNO_CROWN)) {
			if (IsSameJobClass(JOB_ID_RANGER)) {
				n_tok[ITEM_SP_RESIST_BOSS] += 2 * n_A_HEAD_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　天蝎宮のクラウン」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_TENKATSUKYUNO_CROWN)) {
			if (IsSameJobClass(JOB_ID_GILOTINCROSS)) {
				n_tok[ITEM_SP_RESIST_BOSS] += 2 * n_A_HEAD_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「鬼神の盟友」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KISHINNO_MEIYU)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_SENRYU_SHOTEN) >= 10) {
				n_tok[ITEM_SP_RESIST_BOSS] += 20 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「エンドオブザワールド」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_END_OF_THE_WORLD)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_HALLUCINATION_WALK) >= 5) {
				n_tok[ITEM_SP_RESIST_BOSS] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「フィフスエレメント」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_FIFTH_ELEMENT)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_PSYCHIC_WAVE) >= 5) {
				n_tok[ITEM_SP_RESIST_BOSS] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「妖魔のささやき」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_YOMANO_SASAYAKI)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_HALLUCINATION_WALK) >= 5) {
				n_tok[ITEM_SP_RESIST_BOSS] += 20 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「抱きつきシャムネコ＋ゾディアックセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_ENCHANT_ZODIAC_DAKITSUKI_SYAMNEKO)) > 0) {
			if (IsSameJobClass(JOB_ID_SUMMONER)) {
				n_tok[ITEM_SP_RESIST_BOSS] += 2 * n_A_HEAD_DEF_PLUS * itemCount;
			}
		}





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomDef.GetConf(CCharaConfCustomDef.CONF_ID_RESIST_BOSS);
		if (confval != 0) {
			for (i = ITEM_SP_RESIST_BOSS; i <= ITEM_SP_RESIST_BOSS; i++) {
				n_tok[i] += confval;
			}
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== 一般モンスターから受けるダメージ－○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_RESIST_NOTBOSS; idx <= ITEM_SP_RESIST_NOTBOSS; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}



		//----------------------------------------------------------------
		// 「フロンティアブーツ　大自然のギターセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FRONTIER_BOOTS_DAISHIZENNO_GUITAR)) > 0) {
			if (n_A_SHOES_DEF_PLUS >= 7) {
				if (n_A_Weapon_ATKplus >= 9) {
					n_tok[ITEM_SP_RESIST_NOTBOSS] += 10 * itemCount;
				}
			}
		}

		//----------------------------------------------------------------
		// 「フロンティアブーツ　大自然のロープセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FRONTIER_BOOTS_DAISHIZENNO_ROPE)) > 0) {
			if (n_A_SHOES_DEF_PLUS >= 7) {
				if (n_A_Weapon_ATKplus >= 9) {
					n_tok[ITEM_SP_RESIST_NOTBOSS] += 10 * itemCount;
				}
			}
		}

		//----------------------------------------------------------------
		// 「インペリアルカルティベイションコート」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_IMPERIAL_CULTIVATION_COAT)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_ILLUSION_DOOPING) >= 5) {
				n_tok[ITEM_SP_RESIST_NOTBOSS] += 2 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「グレースカルティベイションコート」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_GRACE_CULTIVATION_COAT)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_ILLUSION_DOOPING) >= 5) {
				n_tok[ITEM_SP_RESIST_NOTBOSS] += 7 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ファフニールヘルム」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_FAFNIR_HELM)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_DRAGON_HOWLING) >= 5) {
				n_tok[ITEM_SP_RESIST_NOTBOSS] += 20 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「エンドオブザワールド」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_END_OF_THE_WORLD)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_HALLUCINATION_WALK) >= 5) {
				n_tok[ITEM_SP_RESIST_NOTBOSS] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「フィフスエレメント」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_FIFTH_ELEMENT)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_PSYCHIC_WAVE) >= 5) {
				n_tok[ITEM_SP_RESIST_NOTBOSS] += 5 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「妖魔のささやき」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_YOMANO_SASAYAKI)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_HALLUCINATION_WALK) >= 5) {
				n_tok[ITEM_SP_RESIST_NOTBOSS] += 20 * itemCount;
			}
		}





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomDef.GetConf(CCharaConfCustomDef.CONF_ID_RESIST_BOSS);
		if (confval != 0) {
			for (i = ITEM_SP_RESIST_NOTBOSS; i <= ITEM_SP_RESIST_NOTBOSS; i++) {
				n_tok[i] += confval;
			}
		}

		/**
		 * ヒール系スキルを受けた時のHP回復量増加 と ヒール系スキル使用時のHP回復量増加 を適用する
		 */
		ApplyHealRecoveryUp();

//================================================================================================================================
//================================================================================================================================
//====
//==== 状態異常耐性　ここから
//====
//================================================================================================================================
//================================================================================================================================
		ApplyResistBadStatus();

//================================================================================================================================
//================================================================================================================================
//====
//==== ＤＥＦ無視　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_IGNORE_DEF_ALL; idx <= ITEM_SP_IGNORE_DEF_RACE_ALL; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}
		for (idx = ITEM_SP_IGNORE_DEF_RACE_SOLID; idx <= ITEM_SP_IGNORE_DEF_RACE_DRAGON; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		switch (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT]) {
		case 1076:
		case 1077:
			if(n_A_Weapon2_ATKplus >= 5) n_tok[307] += 10;
			if(n_A_Weapon2_ATKplus >= 7) n_tok[307] += 15;
		}

		switch (n_A_Equip[EQUIP_REGION_ID_ARMS]) {
		case 1076:
		case 1077:
		case 1080:
		case 1081:
		case 1086:
		case 1088:
		case 1089:
		case 1090:
		case 1092:
		case 1093:
		case 1097:
		case 1098:
		case 1099:
		case 1100:
		case 1101:
		case 1102:
		case 1103:
			if(n_A_Weapon_ATKplus >= 5) n_tok[307] += 10;
			if(n_A_Weapon_ATKplus >= 7) n_tok[307] += 15;
		}

		switch (n_A_Equip[EQUIP_REGION_ID_ARMS]) {
		case 1082:
		case 1087:
		case 1094:
		case 1096:
			if(n_A_Weapon_ATKplus >= 5) n_tok[307] += 10;
			if(n_A_Weapon_ATKplus >= 7) n_tok[307] += 20;
		}

		//----------------------------------------------------------------
		// 「リス耳フード帽」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_RISUMIMI_HOODBO)) {
			if (n_A_HEAD_DEF_PLUS >= 5) n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 20;
			if (n_A_HEAD_DEF_PLUS >= 7) n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 30;
			if (n_A_HEAD_DEF_PLUS >= 9) n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 40;
		}

		//----------------------------------------------------------------
		// 「勇者の靴　達人の槌　セット」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_YUSHANO_KUTSU_TATSUZINNO_TSUCHI)) > 0) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_UNDEAD] += 10 * LearnedSkillSearch(SKILL_ID_MACE_SHUREN) * itemCount;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_DEMON] += 10 * LearnedSkillSearch(SKILL_ID_MACE_SHUREN) * itemCount;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_HUMAN] += 10 * LearnedSkillSearch(SKILL_ID_MACE_SHUREN) * itemCount;
		}
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_YUSHANO_KUTSU_TATSUZINNO_TSUCHI_S2)) > 0) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_UNDEAD] += 10 * LearnedSkillSearch(SKILL_ID_MACE_SHUREN) * itemCount;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_DEMON] += 10 * LearnedSkillSearch(SKILL_ID_MACE_SHUREN) * itemCount;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_HUMAN] += 10 * LearnedSkillSearch(SKILL_ID_MACE_SHUREN) * itemCount;
		}

		//----------------------------------------------------------------
		// 「執行者のシューズ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SHIKKOUSHANO_SHOES)) > 0) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 20 * LearnedSkillSearch(SKILL_ID_COUNTER_SLASH) * itemCount;
		}

		//----------------------------------------------------------------
		// 「天邪鬼の鬼面」の、素ＬＵＫよる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_AMANOZYAKUNO_KIMEN)) > 0) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 15 * ROUNDDOWN(SU_LUK / 18) * itemCount;
		}

		//----------------------------------------------------------------
		// 「悪魔の手」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AKUMANO_TE)) {
			if (n_A_HEAD_DEF_PLUS >= 10) {
				n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 100;
			}
		}

		//----------------------------------------------------------------
		// 「黒糸威胴丸」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KUROITOODOSHI_DOMARU)) > 0) {

			vartmp = 0;

			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 20;
			if (n_A_BODY_DEF_PLUS >= 8) vartmp += 20;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 20;

			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「不死鳥の冠」の、精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_FUSHICHONO_KANMURI)) {
			if (n_A_HEAD_DEF_PLUS >= 10) {
				n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 100;
			}
		}

		//----------------------------------------------------------------
		// 「ブルートダマスカス」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_DUMASCUS, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_DUMASCUS, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートスピア」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_SPEAR, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_SPEAR, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートクリーヴァ」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_CLEAVER, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_CLEAVER, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートモーニングスター」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_MORNINGSTAR, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_MORNINGSTAR, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートハンドガン」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_HANDGUN, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_HANDGUN, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートライフル」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_RIFLE, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_RIFLE, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートガトリングガン」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_GATLINGGUN, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_GATLINGGUN, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートショットガン」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_SHOTGUN, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_SHOTGUN, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートグレネードガン」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_GRENADEGUN, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_GRENADEGUN, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートハンターボウ」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_HUNTER_BOW, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_HUNTER_BOW, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートギター」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_GUITAR, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_GUITAR, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートラリエット」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_RARIET, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_RARIET, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルート風魔手裏剣」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_FUMASHURIKEN, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_FUMASHURIKEN, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「ブルートカタール」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_KATAR, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_KATAR, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「フローズヴィトニルの鎖　ヴァナルガンドの兜セット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FROZVITNIRNO_KUSARI_VANARGANDNO_KABUTO)) > 0) {
			if (n_A_HEAD_DEF_PLUS >= 6) {
				n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 25 * itemCount;
			}
			if (n_A_HEAD_DEF_PLUS >= 8) {
				n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 25 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョン装飾用花」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_SOSHOKUYO_HANA)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_IGNORE_DEF_RACE_PLANT] += 50 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「インペリアルブーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_IMPERIAL_BOOTS)) > 0) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 20 * LearnedSkillSearch(SKILL_ID_PINGPOINT_ATTACK) * itemCount;
		}

		//----------------------------------------------------------------
		// 「不思議なハト　ヴァルハラアイドルセット」の、素ＬＵＫによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FUSHIGINA_HATO_WALHALLA_IDOL)) > 0) {
			n_tok[ITEM_SP_IGNORE_DEF_ALL] += 5 * ROUNDDOWN(SU_LUK / 18) * itemCount;
		}

		//----------------------------------------------------------------
		// 「イリュージョン熱血連撃セット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_ILLUSION_NEKKETSU_HACHIMAKI_ILLUSION_RENGEKINO_TSUME)) > 0) {
			// ボス限定
			n_tok[ITEM_SP_IGNORE_DEF_BOSS] += 10 * n_A_HEAD_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「イリュージョンハンターボウ」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_HUNTER_BOW)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_IGNORE_DEF_RACE_ANIMAL] += 50 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「傀儡の腕輪　ダークハンドセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KUGUTSUNO_UDEWA_DARK_HAND)) > 0) {

			if (n_A_HEAD_DEF_PLUS >= 6) {
				n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 25 * itemCount;
			}

			if (n_A_HEAD_DEF_PLUS >= 8) {
				n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 25 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ジャガーノート」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_JAGUAR_NOTE)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_UNTIMATERIAL_BLAST) >= 5) {
				n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 100 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョンミリタリーブーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_MILITARY_BOOTS)) > 0) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 20 * LearnedSkillSearch(SKILL_ID_MAGMA_ILLUPTION) * itemCount;
		}

		//----------------------------------------------------------------
		// 「ジャスパーサークレット」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ZYASPER_CIRCLET)) > 0) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 10 * LearnedSkillSearch(SKILL_ID_DEATH_BOUND) * itemCount;
		}

		//----------------------------------------------------------------
		// 「追撃者のシューズ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_TSUIGEKISHANO_SHOES)) > 0) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 20 * LearnedSkillSearch(SKILL_ID_ESCAPE) * itemCount;
		}

		//----------------------------------------------------------------
		// 「試験管ブーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SHIKENKAN_BOOTS)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_SPECIAL_PHARMACY) >= 10) {
				n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += 100 * itemCount;
			}
		}






		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_IGNORE_DEF_RACE_ALL);
		if (confval != 0) {
			n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL] += confval;
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== ＭＤＥＦ無視　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_IGNORE_MDEF_ALL; idx <= ITEM_SP_IGNORE_MDEF_RACE_ALL; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}
		for (idx = ITEM_SP_IGNORE_MDEF_RACE_SOLID; idx <= ITEM_SP_IGNORE_MDEF_RACE_DRAGON; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		if(EquipNumSearch(645)) n_tok[295] += 10 + n_A_Weapon_ATKplus;

		//----------------------------------------------------------------
		// 「レクイエムウィザードスタッフ」の、＋６以上の精錬によるＭＤＥＦ無視効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_REQUIEM_WIZARDSTUFF)) {
			if (n_A_Weapon_ATKplus >= 6) n_tok[295] += 10 * (n_A_Weapon_ATKplus - 5);
		}

		//----------------------------------------------------------------
		// 「ポロロッカシューズ　ラクリマセット」の、精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_POROROCA_SHOES_LACRYMA_STICK)) {

			// フロストノヴァ習得レベルによる強化
			n_tok[295] += 5 * LearnedSkillSearch(SKILL_ID_FROST_NOVA);
		}

		//----------------------------------------------------------------
		// 「アヴェンジャーウィザードスタッフ」の、精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AVENGER_WIZARDSTUFF)) {
			n_tok[ITEM_SP_IGNORE_MDEF_RACE_HUMAN] += 5 * n_A_Weapon_ATKplus;
		}

		//----------------------------------------------------------------
		// 「ひまわり少年」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_HIMAWARI_SHONEN)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_SIGHT_RASHER) >= 10) {
				n_tok[295] += 5 * n_A_Weapon_ATKplus;
			}
		}

		//----------------------------------------------------------------
		// 「炎雷魔女の大杖」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ENRAIMAZYONO_OTSUE)) > 0) {
			n_tok[295] += 5 * n_A_Weapon_ATKplus;
		}

		//----------------------------------------------------------------
		// 「天邪鬼の鬼面」の、素ＳＴＲによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_AMANOZYAKUNO_KIMEN)) > 0) {
			n_tok[ITEM_SP_IGNORE_MDEF_RACE_ALL] += 15 * ROUNDDOWN(SU_STR / 18) * itemCount;
		}

		//----------------------------------------------------------------
		// 「スカラバハイヒール　ラフィネスタッフセット」の、精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearchMIG(ITEM_SET_ID_SCARABA_HIGHHEEL_LAFINE_STUFF) > 0) {
			if (n_A_SHOES_DEF_PLUS >= 7) {
				if (n_A_Weapon_ATKplus >= 8) n_tok[ITEM_SP_IGNORE_MDEF_RACE_ALL] += 20;
				if (n_A_Weapon_ATKplus >= 10) n_tok[ITEM_SP_IGNORE_MDEF_RACE_ALL] += 30;
			}
		}

		//----------------------------------------------------------------
		// 「ブルートアークワンド」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_BLUTO_ARCWAND, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_BLUTO_ARCWAND, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {
			n_tok[ITEM_SP_IGNORE_MDEF_RACE_ALL] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			n_tok[ITEM_SP_IGNORE_MDEF_RACE_ALL] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
		}

		//----------------------------------------------------------------
		// 「イリュージョン装飾用花」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_SOSHOKUYO_HANA)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_IGNORE_MDEF_RACE_PLANT] += 50 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「不思議なハト　ヴァルハラアイドルセット」の、素ＳＴＲによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FUSHIGINA_HATO_WALHALLA_IDOL)) > 0) {
			n_tok[ITEM_SP_IGNORE_MDEF_ALL] += 5 * ROUNDDOWN(SU_STR / 18) * itemCount;
		}

		//----------------------------------------------------------------
		// 「降霊術士の手鏡　ドレスセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOREZYUTSUSHINO_TEKAGAMI_DRESS)) > 0) {
			if (n_A_SHIELD_DEF_PLUS >= 8) {
				n_tok[ITEM_SP_IGNORE_MDEF_BOSS] += 25 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ふわふわタンポポシューズ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_FUWAFUWA_TANPOPO_SHOES)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_NYAN_GRASS) >= 5) {
				n_tok[ITEM_SP_IGNORE_MDEF_RACE_ALL] += 100 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「傀儡の腕輪　ダークハンドセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KUGUTSUNO_UDEWA_DARK_HAND)) > 0) {

			if (n_A_HEAD_DEF_PLUS >= 6) {
				n_tok[ITEM_SP_IGNORE_MDEF_RACE_ALL] += 25 * itemCount;
			}

			if (n_A_HEAD_DEF_PLUS >= 8) {
				n_tok[ITEM_SP_IGNORE_MDEF_RACE_ALL] += 25 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ソロモンのペンダント　エンチャント増幅セット」の、職業による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SOLOMONNO_PENDANT_ZOFUKU)) > 0) {
			switch (GetLowerJobSeriesID(n_A_JOB)) {
			case JOB_SERIES_ID_NOVICE:
			case JOB_SERIES_ID_MAGICIAN:
			case JOB_SERIES_ID_ACOLYTE:
			case JOB_SERIES_ID_SUMMONER:
				n_tok[ITEM_SP_IGNORE_MDEF_RACE_ALL] += 70 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「不死鳥の猫じゃらし　フレイムバードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FUSHICHONO_NEKOZYARASHI_FLAME_BIRD)) > 0) {
			n_tok[ITEM_SP_IGNORE_MDEF_RACE_ALL] += 10 * n_A_HEAD_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「メタルピック」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_METAL_PICK)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_FRIGNO_UTA) >= 5) {
				n_tok[ITEM_SP_IGNORE_MDEF_RACE_ALL] += 50 * itemCount;
			}
		}




		if(n_A_WeaponType==9) n_tok[295] += 2 * CardNumSearch(466);
		if(mobData[20]==1 && CardNumSearch(425)) n_tok[297] += 30 * CardNumSearch(425);
		if(EquipNumSearch(936)) n_tok[295] += (n_A_Weapon_ATKplus * 1);
		if(mobData[20]==1 && EquipNumSearch(1228)){
			if(n_A_HEAD_DEF_PLUS >= 6) n_tok[297] += (n_A_HEAD_DEF_PLUS - 5);
		}

		// 「シャドウスタッフ」の、スキル習得による効果
		if(EquipNumSearch(ITEM_ID_SHADOW_STUFF)){
			if (LearnedSkillSearch(SKILL_ID_HELL_INFERNO) >= 5) {
				n_tok[295] += (n_A_Weapon_ATKplus * 5);
			}
		}


		if(EquipNumSearch(2429)) n_tok[295] += 8 * Math.floor(n_A_Weapon_ATKplus / 3);





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_IGNORE_MDEF_RACE_ALL);
		if (confval != 0) {
			n_tok[ITEM_SP_IGNORE_MDEF_RACE_ALL] += confval;
		}





		//if(mobData[20] == 1) n_tok[295] += n_tok[297];
		if(EquipNumSearch(1084) || EquipNumSearch(1095)){
			if(n_A_Weapon_ATKplus >= 5) n_tok[317] += 10;
			if(n_A_Weapon_ATKplus >= 7) n_tok[317] += 20;
		}
		if(EquipNumSearch(1083)){
			if(n_A_Weapon_ATKplus >= 5) n_tok[317] += 10;
			if(n_A_Weapon_ATKplus >= 7) n_tok[317] += 15;
		}
		n_tok[ITEM_SP_CRITICAL_DAMAGE_UP] += n_tok[320+mobData[19]];



//================================================================================================================================
//================================================================================================================================
//====
//==== 属性モンスターから受けるダメージ－○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

// TODO : ここでいいのか？


		//----------------------------------------------------------------
		// 「古びたミトラ」の、精錬による効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_FURUBITA_MITRA)) {
			n_tok[337] += 1 * n_A_HEAD_DEF_PLUS;
			n_tok[339] += 1 * n_A_HEAD_DEF_PLUS;
		}





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomDef.GetConf(CCharaConfCustomDef.CONF_ID_RESIST_MONSTER_ELM);
		if (confval != 0) {
			for (i = ITEM_SP_RESIST_MONSTER_ELM_VANITY; i <= ITEM_SP_RESIST_MONSTER_ELM_UNDEAD; i++) {
				n_tok[i] += confval;
			}
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== 属性物理攻撃で与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_PHYSICAL_DAMAGE_UP_ELM);
		if (confval != 0) {
			for (i = ITEM_SP_PHYSICAL_DAMAGE_UP_ELM_VANITY; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_ELM_UNDEAD; i++) {
				n_tok[i] += confval;
			}
		}

		//----------------------------------------------------------------
		// アイテム、バフ、デバフによる個別の効果を呼び出し
		//----------------------------------------------------------------
		for (let idx = ITEM_SP_PHYSICAL_DAMAGE_UP_ELM_VANITY; idx <= ITEM_SP_PHYSICAL_DAMAGE_UP_ELM_UNDEAD; idx++) {
			n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
		}

		//----------------------------------------------------------------
		// 全属性の設定適用
		//----------------------------------------------------------------
/*
// 現状存在しない
		if(n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_ELM_ALL] != 0){
			for (var i = ITEM_SP_PHYSICAL_DAMAGE_UP_ELM_VANITY; i <= ITEM_SP_PHYSICAL_DAMAGE_UP_ELM_UNDEAD; i++) {
				n_tok[i] += n_tok[ITEM_SP_PHYSICAL_DAMAGE_UP_ELM_ALL];
			}
		}
*/

//================================================================================================================================
//================================================================================================================================
//====
//==== 公式サイトで「属性魔法攻撃で与えるダメージ + ◯%」と表記される
//==== 属性魔法で与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================
	{
		if(n_A_Weapon_ATKplus >= 7 && n_A_BODY_DEF_PLUS >= 7 && n_A_SHOES_DEF_PLUS >= 7){
			if(EquipNumSearch(1535)){
				n_tok[344] += 10;
				n_tok[342] += -15;
				n_tok[ITEM_SP_RESIST_ELM_EARTH] += -25;
			}
			if(EquipNumSearch(1537)){
				n_tok[344] += 10;
				n_tok[342] += -20;
				n_tok[ITEM_SP_RESIST_ELM_EARTH] += -20;
			}
			if(EquipNumSearch(1542)){
				n_tok[341] += 10;
				n_tok[344] += -15;
				n_tok[ITEM_SP_RESIST_ELM_WIND] += -25;
			}
			if(EquipNumSearch(1544)){
				n_tok[341] += 10;
				n_tok[344] += -20;
				n_tok[ITEM_SP_RESIST_ELM_WIND] += -20;
			}
			if(EquipNumSearch(1549)){
				n_tok[343] += 10;
				n_tok[341] += -15;
				n_tok[ITEM_SP_RESIST_ELM_WATER] += -25;
			}
			if(EquipNumSearch(1551)){
				n_tok[343] += 10;
				n_tok[341] += -20;
				n_tok[ITEM_SP_RESIST_ELM_WATER] += -20;
			}
			if(EquipNumSearch(1556)){
				n_tok[342] += 10;
				n_tok[343] += -15;
				n_tok[ITEM_SP_RESIST_ELM_FIRE] += -25;
			}
			if(EquipNumSearch(1558)){
				n_tok[342] += 10;
				n_tok[343] += -20;
				n_tok[ITEM_SP_RESIST_ELM_FIRE] += -20;
			}
		}
		if(n_A_SHOULDER_DEF_PLUS >= 7 && 1902 <= n_A_Equip[EQUIP_REGION_ID_SHOULDER] && n_A_Equip[EQUIP_REGION_ID_SHOULDER] <= 1905) n_tok[341 + n_A_Equip[EQUIP_REGION_ID_SHOULDER] - 1902] += 3;
		if(n_A_HEAD_DEF_PLUS >= 9 && 740 <= n_A_card[CARD_REGION_ID_HEAD_TOP] && n_A_card[CARD_REGION_ID_HEAD_TOP] <= 749) n_tok[340 + n_A_card[CARD_REGION_ID_HEAD_TOP] - 740] += 5;
		if(CardNumSearch(784)) n_tok[342] += 3 * n_A_SHOULDER_DEF_PLUS;
		if(CardNumSearch(883)) n_tok[343] += 3 * n_A_SHOULDER_DEF_PLUS;
		if(EquipNumSearch(2528)) n_tok[347] += 2 * n_A_BODY_DEF_PLUS;

		//----------------------------------------------------------------
		// 「ポロロッカシューズ」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_POROROCA_SHOES)) {
			if (n_A_SHOES_DEF_PLUS >= 5) n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WATER] += 3;
			if (n_A_SHOES_DEF_PLUS >= 7) n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WATER] += 5;
		}

		//----------------------------------------------------------------
		// 「ポロロッカシューズ　ラクリマセット」の、精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_POROROCA_SHOES_LACRYMA_STICK)) {
			// ラクリマスティックの精錬による強化
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WATER] += 4 * n_A_Weapon_ATKplus;
		}

		//----------------------------------------------------------------
		// 「堕天司祭の闇光外套」の、過剰精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_DATENSHISAINO_ANKOUGAITO)) {
			if (n_A_SHOULDER_DEF_PLUS >= 7) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += 10;
			}
		}

		//----------------------------------------------------------------
		// 「裁きの靴」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_SABAKINO_KUTSU)) {
			if (n_A_SHOES_DEF_PLUS >= 5) n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_HOLY] += 3;
			if (n_A_SHOES_DEF_PLUS >= 7) n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_HOLY] += 5;
		}

		//----------------------------------------------------------------
		// 「魔女の祭祀帽」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_MAZYONO_SAISHIBO)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_DARK] += 3 * ROUNDDOWN(n_A_HEAD_DEF_PLUS / 2) * itemCount;
		}

		//----------------------------------------------------------------
		// 「不滅のウィンドゴーストカード」の、精錬による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_FUMETSUNO_WINDGHOST)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += 3 * n_A_SHOULDER_DEF_PLUS * cardCount;
		}

		//----------------------------------------------------------------
		// 「ヴァッサー・リヒテルンカード」の、精錬による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_VASER_RIHITERN, CARD_REGION_ID_HEAD_TOP_ANY)) > 0) {
			if (n_A_HEAD_DEF_PLUS >= 9) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WATER] += 5 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「フェルス・リヒテルンカード」の、精錬による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_FELUS_RIHITERN, CARD_REGION_ID_HEAD_TOP_ANY)) > 0) {
			if (n_A_HEAD_DEF_PLUS >= 9) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_EARTH] += 5 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「フンケ・リヒテルンカード」の、精錬による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_FUNKE_RIHITERN, CARD_REGION_ID_HEAD_TOP_ANY)) > 0) {
			if (n_A_HEAD_DEF_PLUS >= 9) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 5 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「ゲルブ・リヒテルンカード」の、精錬による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_GERVE_RIHITERN, CARD_REGION_ID_HEAD_TOP_ANY)) > 0) {
			if (n_A_HEAD_DEF_PLUS >= 9) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_PSYCO] += 5 * cardCount;
			}
		}

		//----------------------------------------------------------------
		// 「超越者のローブ」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_CHOETSUSHANO_ROBE)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_PSYCO] += 2 * n_A_BODY_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「ひまわり少年」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_HIMAWARI_SHONEN)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_SIGHT_RASHER) >= 10) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 20;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 3 * n_A_Weapon_ATKplus;
			}
		}

		//----------------------------------------------------------------
		// 「悪魔崇拝者の靴」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_AKUMASUHAISHANO_KUTSU)) {
			vartmp = 0;

			if (n_A_SHOES_DEF_PLUS >= 5) vartmp += 3;
			if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 5;

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += vartmp;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += vartmp;
		}

		//----------------------------------------------------------------
		// 「悪魔崇拝者の靴　堕天司祭の闇光外套　セット」の、過剰精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_AKUMASUHAISHANO_KUTSU_DATENSHISAINO_ANKOGAITO)) {
			vartmp = 0;

			if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 10;
			if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 10;

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += vartmp;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_DARK] += vartmp;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += vartmp;
		}

		//----------------------------------------------------------------
		// 「悪魔崇拝者の靴　堕天司祭の闇光外套　古代樹の杖　セット」の、スキル習得による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_AKUMASUHAISHANO_KUTSU_DATENSHISAINO_ANKOGAITO_KODAIZYUNO_TSUE)) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 4 * LearnedSkillSearch(SKILL_ID_FIRE_PILLAR);
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += 6 * LearnedSkillSearch(SKILL_ID_GRAVITATION_FIELD);
		}

		//----------------------------------------------------------------
		// 「炎雷魔女の大杖」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ENRAIMAZYONO_OTSUE)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 10 * LearnedSkillSearch(SKILL_ID_FIRE_WALK);
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 5 * n_A_Weapon_ATKplus;

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += 10 * LearnedSkillSearch(SKILL_ID_ELECTRIC_WALK);
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += 5 * n_A_Weapon_ATKplus;

		}

		//----------------------------------------------------------------
		// 「抹消者のローブ」の、精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_MASSHOSHANO_ROBE)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 2 * n_A_BODY_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「サバイバルシューズ」の、精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_SURVIVAL_SHOES)) {
			if (n_A_SHOES_DEF_PLUS >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += 3;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_EARTH] += 3;
			}
			if (n_A_SHOES_DEF_PLUS >= 7) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += 5;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_EARTH] += 5;
			}
		}

		//----------------------------------------------------------------
		// 「サバイバルシューズ　サバイバルロッドセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SURVIVAL_SHOES_SURVIVAL_ROD_DEX_S1)) > 0) {
			if (n_A_Weapon_ATKplus >= 10) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += 80 * itemCount;
			}
		}
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SURVIVAL_SHOES_SURVIVAL_ROD_INT_S1)) > 0) {
			if (n_A_Weapon_ATKplus >= 10) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += 80 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「サバイバルシューズ　サバイバルサークレットセット」の、精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_SET_ID_SURVIVAL_SHOES_SURVIVAL_CIRCLET)) {
			if (n_A_HEAD_DEF_PLUS >= 7) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += 10;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_EARTH] += 10;
			}
			if (n_A_HEAD_DEF_PLUS >= 9) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += 10;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_EARTH] += 10;
			}
		}

		//----------------------------------------------------------------
		// 「起源の書」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KIGENNO_SHO)) > 0) {
			vartmp = 0;

			if (n_A_Weapon_ATKplus >= 7) {
				vartmp += 15;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				vartmp += 20;
			}

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += vartmp * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WATER] += vartmp * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += vartmp * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_EARTH] += vartmp * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「精霊のローブ」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SEIREINO_ROBE)) > 0) {
			vartmp = 0;

			if (n_A_BODY_DEF_PLUS >= 7) {
				vartmp += 5;
			}
			if (n_A_BODY_DEF_PLUS >= 9) {
				vartmp += 5;
			}

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += vartmp * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WATER] += vartmp * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += vartmp * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_EARTH] += vartmp * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「特殊環境活動用ブーツ　ダークロードカードセット」の、時限効果
		//----------------------------------------------------------------
		if (TimeItemNumSearch(154)) {
			if (n_A_BaseLV <= 99) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 5 * n_A_SHOES_DEF_PLUS;
			}
			else {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 10 * n_A_SHOES_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「虹色のねこじゃらし　ストームナイトカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_NIZIIRONO_NEKOZYARASHI_STORM_KNIGHT_CARD)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_NYAN_TAMASHI) >= 1) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WATER] += 5 * n_A_Weapon_ATKplus * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「知覚増幅リング」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_CHIKAKU_ZOFUKU_RING)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_STRIKING) >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WATER] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_EARTH] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「竜殺しの長剣」の、精錬による効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_RYUGOROSHINO_CHOKEN, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_RYUGOROSHINO_CHOKEN, EQUIP_REGION_ID_ARMS_LEFT);
		if (itemCountRight > 0) {
			if (n_A_BaseLV <= 99) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_HOLY] += 2 * n_A_Weapon_ATKplus * itemCountRight;
			}
			else {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_HOLY] += 5 * n_A_Weapon_ATKplus * itemCountRight;
			}
		}
		if (itemCountLeft > 0) {
			if (n_A_BaseLV <= 99) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_HOLY] += 2 * n_A_Weapon2_ATKplus * itemCountLeft;
			}
			else {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_HOLY] += 5 * n_A_Weapon2_ATKplus * itemCountLeft;
			}
		}

		//----------------------------------------------------------------
		// 「竜殺しの長剣　ランドグリスカードセット」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_RYUGOROSHINO_CHOKEN_RANDGRIS_CARD)) > 0) {
			if (n_A_BaseLV <= 99) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_HOLY] += 15 * itemCount;
			}
			else {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_HOLY] += 50 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ランナウェー・アクセラレータ　T-Electricity」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_RUNAWAY_ACCELERATOR_T_ELECTRICITY)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += 3 * n_A_HEAD_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「精神拡張リング」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SEISHIN_KAKUCHO_RING)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_STASIS) >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_DARK] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_PSYCO] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「リングオブパズズ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_RING_OF_PAZUZU)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_RADIUS) >= 3) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「不死鳥のねこじゃらし　ボイタタカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FUSHICHONO_NEKOZYARASHI_BOITATA_CARD)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_NYAN_TAMASHI) >= 1) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 5 * n_A_Weapon_ATKplus * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「覚醒特殊環境活動用ブーツ　ダークロードカードセット」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSE_TOKUSHU_KANKYO_KATSUDOYO_BOOTS_DARKLORD_CARD)) > 0) {
			if (n_A_BaseLV <= 99) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 3 * n_A_SHOES_DEF_PLUS * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_DARK] += 3 * n_A_SHOES_DEF_PLUS * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += 3 * n_A_SHOES_DEF_PLUS * itemCount;
			}
			else {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 8 * n_A_SHOES_DEF_PLUS * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_DARK] += 8 * n_A_SHOES_DEF_PLUS * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += 8 * n_A_SHOES_DEF_PLUS * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「覚醒特殊環境活動用ブーツ　封印されたダークロードカードセット」の、時限効果
		//----------------------------------------------------------------
		if (TimeItemNumSearch(TIME_ITEM_ID_KAKUSE_TOKUSHU_KANKYO_KATSUDOYO_BOOTS_FUINSARETA_DARKLORD_CARD)) {
			if (n_A_BaseLV <= 99) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 5 * n_A_SHOES_DEF_PLUS;
			}
			else {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 10 * n_A_SHOES_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「特殊環境活動用ブーツ　封印されたダークロードカードセット」の、時限効果
		//----------------------------------------------------------------
		if (TimeItemNumSearch(TIME_ITEM_ID_TOKUSHU_KANKYO_KATSUDOYO_BOOTS_FUINSARETA_DARKLORD_CARD)) {
			if (n_A_BaseLV <= 99) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 2 * n_A_SHOES_DEF_PLUS;
			}
			else {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 5 * n_A_SHOES_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「スカルリング」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SCALL_RING)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_TAMASHINO_SHUKAKU) >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_HOLY] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_DARK] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_PSYCO] += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「崇拝の指輪」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_SUHAINO_YUBIWA)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_CLEARANCE) >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_HOLY] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「メタルピック」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_METAL_PICK)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_FUKAKUTEYOSONO_GENGO) >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「再誕の宝冠」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SAITANNO_HOKAN)) > 0) {
			if (n_A_HEAD_DEF_PLUS >= 10) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += 1 * Math.floor((SU_INT + SU_DEX) / 10) * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「きらきらニャンニャンチョーカー」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KIRAKIRA_NYANNYAN_CHOKER)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_MYAUMYAU) >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WATER] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_EARTH] += 10 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_PSYCO] += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「赤い猫耳魔女帽子」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_AKAI_NEKOMIMI_MAZYO_BOSHI)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_STRIKING) >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 25 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WATER] += 25 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += 25 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_EARTH] += 25 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY] += 25 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「虹色のねこじゃらし　封印されたストームナイトカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_NIZIIRONO_NEKOZYARASHI_FUINSARETA_STORM_KNIGHT)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_NYAN_TAMASHI) >= 1) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WATER] += 1 * n_A_Weapon_ATKplus * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「不死鳥のねこじゃらし　封印されたボイタタカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FUSHICHONO_NEKOZYARASHI_FUINSARETA_BOITATA)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_NYAN_TAMASHI) >= 1) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 2 * n_A_Weapon_ATKplus * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ディア・デ・ムエルトス」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_DIA_DE_MUERTOS)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_DARK] += 5 * LearnedSkillSearch(SKILL_ID_SHIRYO_HYOI) * itemCount;
		}

		//----------------------------------------------------------------
		// 「エレメンタルマスター」の四次精霊の召喚中による効果
		//----------------------------------------------------------------
		switch (UsedSkillSearch(SKILL_ID_SERE)) {
			case 13:	// 火 アルドール
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_FIRE] += 10;
				break;
			case 14:	// 水 ディルビオ
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WATER] += 10;
				break;
			case 15:	// 風 プロセラ
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_WIND] += 10;
				break;
			case 16:	// 地 テレモトゥス
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_EARTH] += 10;
				break;
			case 17:	// 毒 サーペンス
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_POISON] += 10;
				break;
		}

		/** 三次職支援設定「エンドレスハミングボイス」の全ての属性魔法攻撃で与えるダメージ + 効果 */
		if (g_confDataSanzi[CCharaConfSanzi.CONF_ID_UNLIMITED_HUMMING_VOICE] > 0) {
			let effect = 4 * g_confDataSanzi[CCharaConfSanzi.CONF_ID_UNLIMITED_HUMMING_VOICE];
			effect += Math.floor(g_confDataSanzi[CCharaConfSanzi.CONF_ID_LESSON] / 2);
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_ALL] += effect;
		}

		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_MAGICAL_DAMAGE_UP_ELM);
		if (confval != 0) {
			for (i = ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY; i <= ITEM_SP_MAGICAL_DAMAGE_UP_ELM_UNDEAD; i++) {
				n_tok[i] += confval;
			}
		}

		// TODO: 四次対応
		for (idx = ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY; idx <= ITEM_SP_MAGICAL_DAMAGE_UP_ELM_UNDEAD; idx++) {
			n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
		}

		//----------------------------------------------------------------
		// 全属性の設定適用
		//----------------------------------------------------------------
		if(n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_ALL] != 0){
			for (var i = ITEM_SP_MAGICAL_DAMAGE_UP_ELM_VANITY; i <= ITEM_SP_MAGICAL_DAMAGE_UP_ELM_UNDEAD; i++) {
				n_tok[i] += n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_ELM_ALL];
			}
		}
	}


//================================================================================================================================
//================================================================================================================================
//====
//==== 魔法攻撃時、△△属性モンスターに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_VANITY; idx <= ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		//----------------------------------------------------------------
		// 「粛清の靴」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SHUKUSEINO_KUTSU)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_CLEARANCE) >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_ALL] += 25;
			}
		}

		if(n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_ALL] != 0){
			for (var i = ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_VANITY; i <= ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; i++) {
				n_tok[i] += n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_ALL];
			}
		}

		if(n_A_Weapon_ATKplus >= 7 && n_A_BODY_DEF_PLUS >= 7 && n_A_SHOULDER_DEF_PLUS >= 7 && n_A_SHOES_DEF_PLUS >= 7){
			if(EquipNumSearch(1570)){
				n_tok[49] += 5;
				n_tok[359] += 5;
			}
			if(EquipNumSearch(1572)){
				n_tok[49] += 15;
				n_tok[359] += 15;
			}
		}
		if(n_A_HEAD_DEF_PLUS >= 5 && EquipNumSearch(1789)){
			n_tok[351] += 5 * (n_A_HEAD_DEF_PLUS - 4);
			n_tok[352] += 5 * (n_A_HEAD_DEF_PLUS - 4);
			n_tok[353] += 5 * (n_A_HEAD_DEF_PLUS - 4);
			n_tok[354] += 5 * (n_A_HEAD_DEF_PLUS - 4);
		}
		if(n_A_HEAD_DEF_PLUS >= 7 && EquipNumSearch(1977)){
			n_tok[353] += 10;
			if(n_A_HEAD_DEF_PLUS >= 9) n_tok[353] += 15;
		}
		if(n_A_HEAD_DEF_PLUS >= 5 && EquipNumSearch(2394)){
			n_tok[355] += 5 * (n_A_HEAD_DEF_PLUS - 4);
			n_tok[356] += 5 * (n_A_HEAD_DEF_PLUS - 4);
			n_tok[357] += 5 * (n_A_HEAD_DEF_PLUS - 4);
			n_tok[358] += 5 * (n_A_HEAD_DEF_PLUS - 4);
			n_tok[359] += 5 * (n_A_HEAD_DEF_PLUS - 4);
		}
		if(n_A_SHOES_DEF_PLUS >= 5 && EquipNumSearch(2503)){
			for(var i=350;i<=354;i++) n_tok[i] += 5;
			if(n_A_SHOES_DEF_PLUS >= 7){
				for(var i=350;i<=354;i++) n_tok[i] += 10;
			}
		}

		//----------------------------------------------------------------
		// 「迅雷杖」の、過剰精錬による効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_ZINRAI_TSUE)) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「無双杖」の、過剰精錬による効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_MUSO_TSUE)) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 10;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 15;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「裁きの靴　ホーリーステッキセット」の、過剰精錬による効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_SET_ID_SABAKINO_KUTSU_HOLY_STICK)) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_DARK] += 30;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD] += 30;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_DARK] += 20;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD] += 20;
			}
		}

		//----------------------------------------------------------------
		// 「ガイアシールド」の、精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_GAIA_SHIELD) > 0) {
			if (n_A_SHIELD_DEF_PLUS >= 6) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 10;
			}
		}

		//----------------------------------------------------------------
		// 「上忍の腰帯」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ZYONINNO_KOSHIOBI)) > 0) {
			var skllv = 0;
			skllv += LearnedSkillSearch(SKILL_ID_GENZYUTSU_KYOGAKU);
			skllv += LearnedSkillSearch(SKILL_ID_GENZYUTSU_ZYUSATSU);
			skllv += LearnedSkillSearch(SKILL_ID_GENZYUTSU_GENWAKU);
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_DARK] += 4 * skllv * itemCount;
		}

		//----------------------------------------------------------------
		// 「一碧杖」の、過剰精錬による効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_IPPEKI_TSUE)) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「火雷大神靴」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_HONOIKAZUCHINOOOKAMI_KUTSU)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 2 * n_A_SHOES_DEF_PLUS * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_PSYCO] += 2 * n_A_SHOES_DEF_PLUS * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_VANITY] += 2 * n_A_SHOES_DEF_PLUS * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD] += 2 * n_A_SHOES_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「アネモスシールド」の、精錬による強化
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_ANEMOS_SHIELD) > 0) {
			if (n_A_SHIELD_DEF_PLUS >= 6) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 10;
			}
		}

		//----------------------------------------------------------------
		// 「深淵のドレス」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SHINENNO_DRESS)) > 0) {
			vartmp = 0;

			if (n_A_BODY_DEF_PLUS >= 5) vartmp += 10;
			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 15;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 15;

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_DARK] += vartmp * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「猟乱杖」の、過剰精錬による効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_RYORAN_TSUE)) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 10;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 10;
			}
			if (n_A_Weapon_ATKplus >= 9) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 15;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 15;
			}
		}

		//----------------------------------------------------------------
		// 「キングスガード」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KINGS_GUARD)) > 0) {
			vartmp = 0;

			if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 15;
			if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 15;

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_DARK] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「聖者の冠」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SEISHANO_KANMURI)) > 0) {
			vartmp = 0;

			vartmp += LearnedSkillSearch(SKILL_ID_LAUDAAGNUS);
			vartmp += LearnedSkillSearch(SKILL_ID_LAUDARAMUS);

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 5 * vartmp * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_PSYCO] += 5 * vartmp * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_VANITY] += 5 * vartmp * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD] += 5 * vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「フロンティアブーツ　起源の書セット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_FRONTIER_BOOTS_KIGENNO_SHO)) > 0) {
			if (n_A_SHOES_DEF_PLUS >= 7) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_FIRE] += 3 * n_A_Weapon_ATKplus * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_WATER] += 3 * n_A_Weapon_ATKplus * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 3 * n_A_Weapon_ATKplus * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 3 * n_A_Weapon_ATKplus * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ゴピニクカード」の、素ステータスによる強化
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_GOPINICH)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 3 * Math.floor((SU_STR + SU_INT + SU_DEX) / 10) * cardCount;
		}
		//----------------------------------------------------------------
		// 「汚染されたダークロードカード」の、素ステータスによる強化
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_OSEN_SARETA_DARK_LORD)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_VANITY] += 3 * Math.floor((SU_STR + SU_INT + SU_DEX) / 10) * cardCount;
		}

		//----------------------------------------------------------------
		// 「封印された汚染されたダークロードカード」の、素ステータスによる強化
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_FUINSARETA_OSEN_SARETA_DARK_LORD)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_VANITY] += 1 * Math.floor((SU_STR + SU_INT + SU_DEX) / 20) * cardCount;
		}

		//----------------------------------------------------------------
		// 「英雄の凱歌　封印された汚染されたダークロードカードセット」の、素ステータスによる強化
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_SET_ID_ENCHANT_EIYUNO_GAIKA_FUINSARETA_OSEN_SARETA_DARK_LORD)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_VANITY] += 1 * Math.floor((SU_STR + SU_INT + SU_DEX) / 20) * cardCount;
		}

		//----------------------------------------------------------------
		// 「封印されたゴピニクカード」の、素ステータスによる強化
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_FUINSARETA_GOPINICH)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_WIND] += 1 * Math.floor((SU_STR + SU_INT + SU_DEX) / 10) * cardCount;
		}

		//----------------------------------------------------------------
		// 「レッドペッパーラムダカード」の、素ステータスによる強化
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_RED_PEPPER_LAMBDA)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_EARTH] += 3 * Math.floor((SU_STR + SU_INT + SU_DEX) / 10) * cardCount;
		}




		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_MAGICAL_DAMAGE_UP_MONSTER_ELM);
		if (confval != 0) {
			for (i = ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_VANITY; i <= ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; i++) {
				n_tok[i] += confval;
			}
		}

		// TODO: 四次対応
		for (idx = ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_VANITY; idx <= ITEM_SP_MAGICAL_DAMAGE_UP_MONSTER_ELM_UNDEAD; idx++) {
			n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== 魔法攻撃時、△△サイズのモンスターに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_SMALL; idx <= ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_LARGE; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		if(n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_ALL] != 0){
			for (idx = ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_SMALL; idx <= ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_LARGE; idx++) {
				n_tok[idx] += n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_ALL];
			}
		}



		//----------------------------------------------------------------
		// 「戦乙女の雫」の、スキル習得による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_IKUSAOTOMENO_SHIZUKU)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_SMALL] += 3 * LearnedSkillSearch(SKILL_ID_IMPOSITIO_MANUS) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_MEDIUM] += 3 * LearnedSkillSearch(SKILL_ID_IMPOSITIO_MANUS) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_LARGE] += 3 * LearnedSkillSearch(SKILL_ID_IMPOSITIO_MANUS) * itemCount;
		}



		//----------------------------------------------------------------
		// 「八卦の封呪」の、素ＩＮＴと素ＤＥＸによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_HAKKEINO_FUZYU)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_SMALL] += 4 * ROUNDDOWN((SU_INT + SU_DEX) / 50) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_MEDIUM] += 4 * ROUNDDOWN((SU_INT + SU_DEX) / 50) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_LARGE] += 4 * ROUNDDOWN((SU_INT + SU_DEX) / 50) * itemCount;
		}



		//----------------------------------------------------------------
		// 「オウルバロンのマント　エクスキューショナーカード」の、過剰精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_AWL_BARRONNO_MANT_EXCUTIONER_CARD)) > 0) {
			if (n_A_SHOULDER_DEF_PLUS >= 8) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_LARGE] += 25 * itemCount;
			}
		}



		//----------------------------------------------------------------
		// 「オウルバロンのマント　オーガトゥースカード」の、過剰精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_AWL_BARRONNO_MANT_ORGE_TOOTH_CARD)) > 0) {
			if (n_A_SHOULDER_DEF_PLUS >= 8) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_MEDIUM] += 25 * itemCount;
			}
		}



		//----------------------------------------------------------------
		// 「オウルバロンのマント　ミスティルティンカード」の、過剰精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_AWL_BARRONNO_MANT_MISTILTINE_CARD)) > 0) {
			if (n_A_SHOULDER_DEF_PLUS >= 8) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_SMALL] += 25 * itemCount;
			}
		}



		//----------------------------------------------------------------
		// 「ロードオブロイヤルズ」の、素ＳＴＲと素ＩＮＴによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_LORD_OF_ROYALS)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_SMALL] += 4 * ROUNDDOWN((SU_STR + SU_INT) / 50) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_MEDIUM] += 4 * ROUNDDOWN((SU_STR + SU_INT) / 50) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_LARGE] += 4 * ROUNDDOWN((SU_STR + SU_INT) / 50) * itemCount;
		}



		//----------------------------------------------------------------
		// 「インペリアルサイキックローブ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_PSYCHIC_ROBE)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_SMALL] += 4 * LearnedSkillSearch(SKILL_ID_STRIKING) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_MEDIUM] += 4 * LearnedSkillSearch(SKILL_ID_STRIKING) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_LARGE] += 4 * LearnedSkillSearch(SKILL_ID_STRIKING) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレースサイキックローブ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_PSYCHIC_ROBE)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_SMALL] += 7 * LearnedSkillSearch(SKILL_ID_STRIKING) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_MEDIUM] += 7 * LearnedSkillSearch(SKILL_ID_STRIKING) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_LARGE] += 7 * LearnedSkillSearch(SKILL_ID_STRIKING) * itemCount;
		}



		//----------------------------------------------------------------
		// 「インペリアルスカルローブ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_SCULL_ROBE)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_SMALL] += 4 * Math.floor(LearnedSkillSearch(SKILL_ID_SHIRYO_BAKUHATSU) / 2) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_MEDIUM] += 4 * Math.floor(LearnedSkillSearch(SKILL_ID_SHIRYO_BAKUHATSU) / 2) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_LARGE] += 4 * Math.floor(LearnedSkillSearch(SKILL_ID_SHIRYO_BAKUHATSU) / 2) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレーススカルローブ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_SCULL_ROBE)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_SMALL] += 7 * Math.floor(LearnedSkillSearch(SKILL_ID_SHIRYO_BAKUHATSU) / 2) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_MEDIUM] += 7 * Math.floor(LearnedSkillSearch(SKILL_ID_SHIRYO_BAKUHATSU) / 2) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_LARGE] += 7 * Math.floor(LearnedSkillSearch(SKILL_ID_SHIRYO_BAKUHATSU) / 2) * itemCount;
		}

		//----------------------------------------------------------------
		// 「ブックオブソーサリー」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_BOOK_OF_SOURCERERY)) > 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_SMALL] += 3 * LearnedSkillSearch(SKILL_ID_PSYCHIC_WAVE) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_MEDIUM] += 3 * LearnedSkillSearch(SKILL_ID_PSYCHIC_WAVE) * itemCount;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_LARGE] += 3 * LearnedSkillSearch(SKILL_ID_PSYCHIC_WAVE) * itemCount;
		}

		//----------------------------------------------------------------
		// 「セイクリッドラペル」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_SACRED_LAPEL)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_CLEARANCE) >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_SMALL] += 15 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_MEDIUM] += 15 * itemCount;
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_LARGE] += 15 * itemCount;
			}
		}





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_MAGICAL_DAMAGE_UP_SIZE);
		if (confval != 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_SMALL] += confval;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_MEDIUM] += confval;
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_LARGE] += confval;
		}

		// TODO: 四次対応
		for (idx = ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_SMALL; idx <= ITEM_SP_MAGICAL_DAMAGE_UP_SIZE_LARGE; idx++) {
			n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
		}





//================================================================================================================================
//================================================================================================================================
//====
//==== 魔法攻撃時、ボスモンスターに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_MAGICAL_DAMAGE_UP_BOSS; idx <= ITEM_SP_MAGICAL_DAMAGE_UP_BOSS; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}

		//----------------------------------------------------------------
		// 「海竜の鎧」の、過剰精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KAIRYUNO_YOROI)) > 0) {
			vartmp = 0;

			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 10;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 10;

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_BOSS] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「セリーヌのブローチ　リボンセット」の、過剰精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_CELINENO_BROACH_CELINENO_RIBBON)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 20;
			if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 20;

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_BOSS] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「セリーヌのブローチ　瑞々しいバラセット」の、過剰精錬による強化
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_CELINENO_BROACH_MIZUMIZUSHI_BARA)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 20;

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_BOSS] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「スカラバハイヒール　ラフィネスタッフセット」の、精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearchMIG(ITEM_SET_ID_SCARABA_HIGHHEEL_LAFINE_STUFF) > 0) {
			if (n_A_SHOES_DEF_PLUS >= 7) {
				if (n_A_Weapon_ATKplus >= 8) n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_BOSS] += 30;
				if (n_A_Weapon_ATKplus >= 10) n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_BOSS] += 40;
			}
		}

		//----------------------------------------------------------------
		// 「精霊王の宝冠」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SEREONO_HOKAN)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_ELEMENTAL_SHIELD) >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_BOSS] += 25 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「血塗られた人形のドレス　セリーヌのリボンセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_CHINURARETA_NINGYONO_DRESS_CELINENO_RIBBON)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 15;
			if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 15;

			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_BOSS] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「リングオブジュピター」の、素ＬＵＫによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_RING_OF_JUPITER, EQUIP_REGION_ID_ACCESSARY_1)) > 0) {
			if (SU_LUK >= 125) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_BOSS] += 15 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「聖者の冠」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SEISHANO_KANMURI)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_CLEARANCE) >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_BOSS] += 25 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ぴかぴかニャンニャンクラウン」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_PIKAPIKA_NYANNYAN_CROWN)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_MYAUMYAU) >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_BOSS] += 25 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「審判の天秤」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_SHINPANNO_TENBIN)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_DEBOTION) >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_BOSS] += 15 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「メタルピック」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_METAL_PICK)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_MELANCHOLY) >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_BOSS] += 10 * itemCount;
			}
		}






		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_MAGICAL_DAMAGE_UP_BOSS_AND_NOT_BOSS);
		if (confval != 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_BOSS] += confval;
		}



//================================================================================================================================
//================================================================================================================================
//====
//==== 魔法攻撃時、一般モンスターに与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_MAGICAL_DAMAGE_UP_NOTBOSS; idx <= ITEM_SP_MAGICAL_DAMAGE_UP_NOTBOSS; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}






		//----------------------------------------------------------------
		// 「メタルピック」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_METAL_PICK)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_MELANCHOLY) >= 5) {
				n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_NOTBOSS] += 10 * itemCount;
			}
		}





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_MAGICAL_DAMAGE_UP_BOSS_AND_NOT_BOSS);
		if (confval != 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_NOTBOSS] += confval;
		}


		// スキル使用時の消費ＳＰ－○○％ を適用する
		n_tok[ITEM_SP_COST_DOWN] = getSPCostReductionRate();


//================================================================================================================================
//================================================================================================================================
//====
//==== 必中攻撃＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

// TODO : ここでいいのか？

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_PERFECT_ATTACK_UP; idx <= ITEM_SP_PERFECT_ATTACK_UP; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
		}



		//----------------------------------------------------------------
		// 「[ECO] ブリキングRX1・アルマカード」の、精錬による効果
		//----------------------------------------------------------------
		cardCountRight = CardNumSearch(CARD_ID_ECO_BURIKING_RX1_ARMA, CARD_REGION_ID_ARMS_RIGHT_ANY);
		cardCountLeft = CardNumSearch(CARD_ID_ECO_BURIKING_RX1_ARMA, CARD_REGION_ID_ARMS_LEFT_ANY);
		if ((cardCountRight > 0) || (cardCountLeft > 0)) {
			if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 5 * cardCountRight;
			if (n_A_Weapon2_ATKplus >= 7) n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 5 * cardCountLeft;
		}

		//----------------------------------------------------------------
		// 「パイルバンカーT」の、精錬による効果
		//----------------------------------------------------------------
		if (EquipNumSearch(ITEM_ID_PILEBUNKER_T)) {
			if (n_A_Weapon_ATKplus >= 7) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 30;
			}
		}

		//----------------------------------------------------------------
		// 「ミラージュウィング」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_MIRRORAGE_WING)) > 0) {
			if ((skllv = LearnedSkillSearch(SKILL_ID_WASHINO_ME)) > 0) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * skllv * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ミラージュハンドガン」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_MIRRORAGE_HANDGUN)) > 0) {
			if ((skllv = LearnedSkillSearch(SKILL_ID_SNAKE_EYE)) > 0) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * skllv * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ミラージュライフル」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_MIRRORAGE_RIFLE)) > 0) {
			if ((skllv = LearnedSkillSearch(SKILL_ID_SNAKE_EYE)) > 0) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * skllv * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ミラージュガトリングガン」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_MIRRORAGE_GATLINGGUN)) > 0) {
			if ((skllv = LearnedSkillSearch(SKILL_ID_SNAKE_EYE)) > 0) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * skllv * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ミラージュショットガン」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_MIRRORAGE_SHOTGUN)) > 0) {
			if ((skllv = LearnedSkillSearch(SKILL_ID_SNAKE_EYE)) > 0) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * skllv * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ミラージュグレネードガン」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_MIRRORAGE_GRENADEGUN)) > 0) {
			if ((skllv = LearnedSkillSearch(SKILL_ID_SNAKE_EYE)) > 0) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * skllv * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ミラージュフォックステイル」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_MIRRORAGE_FOXTAIL)) > 0) {
			if ((skllv = LearnedSkillSearch(SKILL_ID_SOUL_ATTACK)) > 0) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 20;
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョン連撃の爪」の、スキル習得による強化
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_ILLUSION_RENGEKINO_TSUME, EQUIP_REGION_ID_ARMS);
		itemCountLeft = EquipNumSearch(ITEM_ID_ILLUSION_RENGEKINO_TSUME, EQUIP_REGION_ID_ARMS_LEFT);
		if ((itemCountRight > 0) || (itemCountLeft > 0)) {

			if (LearnedSkillSearch(SKILL_ID_GOHO) >= 10) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 10 * (itemCountRight + itemCountLeft);
			}

			if (LearnedSkillSearch(SKILL_ID_SORYUKYAKU) >= 10) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 10 * (itemCountRight + itemCountLeft);
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョンデスナイフ」の、ベースレベルによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_DEATH_KNIFE)) > 0) {
			if (n_A_BaseLV >= 170) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 10 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「イリュージョン熱血連撃セット」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_ILLUSION_NEKKETSU_HACHIMAKI_ILLUSION_RENGEKINO_TSUME)) > 0) {

			sklLv = 0;

			sklLv += LearnedSkillSearch(SKILL_ID_GOHO);
			sklLv += LearnedSkillSearch(SKILL_ID_SORYUKYAKU);
			sklLv += LearnedSkillSearch(SKILL_ID_DAITENHOSUI);
			sklLv += LearnedSkillSearch(SKILL_ID_TENRACHIMO);

			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 5 * ROUNDDOWN(sklLv / 6) * itemCount;
		}

		//----------------------------------------------------------------
		// 「傀儡の腕輪　ダークハンドセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KUGUTSUNO_UDEWA_DARK_HAND)) > 0) {

			if (n_A_HEAD_DEF_PLUS >= 6) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 15 * itemCount;
			}

			if (n_A_HEAD_DEF_PLUS >= 8) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 15 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「悪鬼羅刹の指輪」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_AKKI_RASETSUNO_YUBIWA)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_RAIKODAN) >= 5) {
				 n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 15 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ぷりちーウリボウシューズ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_PRETTY_URIBO_SHOES)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_MURENO_CHIKARA) >= 5) {
				 n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 50 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「暴威のマフラー」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_BOINO_MUFFLER)) > 0) {
			if ((skllv = LearnedSkillSearch(SKILL_ID_ENDLESS_HUMMING_VOICE)) >= 5) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 20 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「よちよちウリボウスタイ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_YOCHIYOCHI_URIBO_SUTAI)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 4 * LearnedSkillSearch(SKILL_ID_MURENO_CHIKARA) * itemCount;
		}

		//----------------------------------------------------------------
		// 「レインボースター」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_RAINBOW_STAR)) > 0) {
			if ((skllv = LearnedSkillSearch(SKILL_ID_TRAP_KENKYU)) >= 10) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 30 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「溶岩のマント」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_YOGANNO_MANT)) > 0) {
			if ((skllv = LearnedSkillSearch(SKILL_ID_FAW_MAGIC_DECOY)) >= 5) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 50 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「隷属の首輪」の、素ＳＴＲと素ＬＵＫによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_REIZOKUNO_KUBIWA)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 5 * ROUNDDOWN((SU_STR + SU_LUK) / 50) * itemCount;
		}

		//----------------------------------------------------------------
		// 「天魔外道の外套」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_TENMA_GEDONO_GAITO)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 4 * LearnedSkillSearch(SKILL_ID_RAIKODAN) * itemCount;
		}

		//----------------------------------------------------------------
		// 「双子のツインリボン」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_FUTAGONO_TWIN_RIBBON)) > 0) {
			if ((skllv = LearnedSkillSearch(SKILL_ID_ENDLESS_HUMMING_VOICE)) >= 5) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 30 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「科学者のマント」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KAGAKUSHANO_MANT)) > 0) {
			if ((skllv = LearnedSkillSearch(SKILL_ID_HOWLING_OF_MANDRAGORA)) >= 5) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 50 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「クリスタルブレイドネックレス　エンチャント強撃セット」の、職業による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_CRYSTAL_BLADE_NECKLACE_KYOGEKI)) > 0) {
			switch (GetLowerJobSeriesID(n_A_JOB)) {
			case JOB_SERIES_ID_NOVICE:
			case JOB_SERIES_ID_SWORDMAN:
			case JOB_SERIES_ID_ARCHER:
			case JOB_SERIES_ID_ACOLYTE:
			case JOB_SERIES_ID_MERCHANT:
			case JOB_SERIES_ID_TAEGKUON:
			case JOB_SERIES_ID_GUNSLINGER:
			case JOB_SERIES_ID_SUMMONER:
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 30 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「エリュマントスの皮」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_ERYMANTHNO_KAWA)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * LearnedSkillSearch(SKILL_ID_AIMED_BOLT) * itemCount;
		}

		//----------------------------------------------------------------
		// 「アーヌルス イラ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_ANULUS_IRA)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_SENDENPO) >= 5) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 30 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「インペリアルアニマルローブ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_ANIMAL_ROBE)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 3 * LearnedSkillSearch(SKILL_ID_MURENO_CHIKARA) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレースアニマルローブ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_ANIMAL_ROBE)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 5 * LearnedSkillSearch(SKILL_ID_MURENO_CHIKARA) * itemCount;
		}

		//----------------------------------------------------------------
		// 「インペリアルガトリングスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_GATLING_SUIT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 3 * LearnedSkillSearch(SKILL_ID_PLATINUM_ALTER) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレースガトリングスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_GATLING_SUIT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 5 * LearnedSkillSearch(SKILL_ID_PLATINUM_ALTER) * itemCount;
		}

		//----------------------------------------------------------------
		// 「インペリアルクルシフォームスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_CRUCIFORM_SUIT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 3 * LearnedSkillSearch(SKILL_ID_HAPPO_KUNAI) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレースクルシフォームスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_CRUCIFORM_SUIT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 5 * LearnedSkillSearch(SKILL_ID_HAPPO_KUNAI) * itemCount;
		}

		//----------------------------------------------------------------
		// 「ジャスパーリング」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_ZYASPER_RING)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_DEATH_BOUND) >= 10) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 15 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「グロトネリーア」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GLOTONERIA)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * LearnedSkillSearch(SKILL_ID_AUTO_SHADOW_SPELL) * itemCount;
		}

		//----------------------------------------------------------------
		// 「山岳ヘルメット」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_SANGAKU_HELMET)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_FAW_SILVER_SNIPER) >= 5) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 50 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「インペリアルマグマスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_MAGMA_SUIT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 3 * LearnedSkillSearch(SKILL_ID_MAGMA_ILLUPTION) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレースマグマスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_MAGMA_SUIT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 5 * LearnedSkillSearch(SKILL_ID_MAGMA_ILLUPTION) * itemCount;
		}

		//----------------------------------------------------------------
		// 「インペリアル天地スーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_TENCHI_SUIT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 3 * Math.floor(LearnedSkillSearch(SKILL_ID_SHURASHINDAN) / 2) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレース天地スーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_TENCHI_SUIT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 5 * Math.floor(LearnedSkillSearch(SKILL_ID_SHURASHINDAN) / 2) * itemCount;
		}

		//----------------------------------------------------------------
		// 「インペリアルアーティススーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_ARTIS_SUIT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 1 * LearnedSkillSearch(SKILL_ID_BUKI_KENKYU) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレースアーティススーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_ARTIS_SUIT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * LearnedSkillSearch(SKILL_ID_BUKI_KENKYU) * itemCount;
		}

		//----------------------------------------------------------------
		// 「インペリアルメナススーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_MENUS_SUIT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 3 * Math.floor(LearnedSkillSearch(SKILL_ID_KEN_SHUREN) / 2) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレースメナススーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_MENUS_SUIT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 5 * Math.floor(LearnedSkillSearch(SKILL_ID_KEN_SHUREN) / 2) * itemCount;
		}

		//----------------------------------------------------------------
		// 「インペリアルレインストームスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_RAINSTORM_SUIT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 3 * LearnedSkillSearch(SKILL_ID_FRIGNO_UTA) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレースレインストームスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_RAINSTORM_SUIT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 5 * LearnedSkillSearch(SKILL_ID_FRIGNO_UTA) * itemCount;
		}

		//----------------------------------------------------------------
		// 「リングオブケリュネイア」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_RING_OF_CERYNEIA)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_RANGER_MAIN) >= 10) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 15 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「インペリアルコンフィデンシャルメイル」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_IMPERIAL_CONFIDENCIAL_MAIL)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 3 * LearnedSkillSearch(SKILL_ID_WIND_CUTTER) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレースコンフィデンシャルメイル」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_GRACE_CONFIDENCIAL_MAIL)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 5 * LearnedSkillSearch(SKILL_ID_WIND_CUTTER) * itemCount;
		}

		//----------------------------------------------------------------
		// 「インペリアルカルティベイションコート」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_IMPERIAL_CULTIVATION_COAT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 3 * LearnedSkillSearch(SKILL_ID_FIRE_EXPANSION) * itemCount;
		}

		//----------------------------------------------------------------
		// 「グレースカルティベイションコート」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_GRACE_CULTIVATION_COAT)) > 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 5 * LearnedSkillSearch(SKILL_ID_FIRE_EXPANSION) * itemCount;
		}

		//----------------------------------------------------------------
		// 「トラベラーリング」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_TRAVELER_RING)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_MELANCHOLY) >= 5) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 15 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「アスモデウスの翼」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ASMODEUSNO_TSUBASA)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_SONIC_WAVE) >= 10) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 25 * itemCount;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　獅子宮のクラウン」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_SHISHIKYUNO_CROWN)) {
			if (IsSameJobClass(JOB_ID_SHURA)) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * n_A_HEAD_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　獅子宮のクラウン」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_SHISHIKYUNO_MANT)) {
			if (IsSameJobClass(JOB_ID_SHURA)) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * n_A_SHOULDER_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　獅子宮のシューズ」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_SHISHIKYUNO_SHOES)) {
			if (IsSameJobClass(JOB_ID_SHURA)) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 3 * n_A_SHOES_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　人馬宮のシューズ」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_ZINBAKYUNO_SHOES)) {
			if (IsSameJobClass(JOB_ID_RANGER)) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 3 * n_A_SHOES_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　双児宮のダイアデム」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_SOZIKYUNO_DIADEM)) {
			if (IsSameJobClass(JOB_ID_MINSTREL) || IsSameJobClass(JOB_ID_WANDERER)) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * n_A_HEAD_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　双児宮のシューズ」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_SOZIKYUNO_SHOES)) {
			if (IsSameJobClass(JOB_ID_MINSTREL) || IsSameJobClass(JOB_ID_WANDERER)) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 3 * n_A_SHOES_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　天蝎宮のマント」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_TENKATSUKYUNO_MANT)) {
			if (IsSameJobClass(JOB_ID_GILOTINCROSS)) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * n_A_SHOULDER_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　ポルックスクラウン」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_POLLUX_CROWN)) {
			if (IsSameJobClass(JOB_ID_STAR_EMPEROR)) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * n_A_HEAD_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　ポルックスシューズ」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_POLLUX_SHOES)) {
			if (IsSameJobClass(JOB_ID_STAR_EMPEROR)) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * n_A_SHOES_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　磨羯宮のダイアデム」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_MAKATSUKYUNO_DIADEM)) {
			if (IsSameJobClass(JOB_ID_SHADOWCHASER)) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 2 * n_A_HEAD_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ゾディアック　磨羯宮のシューズ」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_MAKATSUKYUNO_SHOES)) {
			if (IsSameJobClass(JOB_ID_SHADOWCHASER)) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 3 * n_A_SHOES_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「ミステリーウィング」の、素ステータスによる効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_MYSTERY_WING)) > 0) {
			if (GetTotalPureBasicStatus() >= 500) {
				n_tok[ITEM_SP_PERFECT_ATTACK_UP] += 25 * itemCount;
			}
		}






		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_PERFECT_ATTACK);
		if (confval != 0) {
			n_tok[ITEM_SP_PERFECT_ATTACK_UP] += confval;
		}



		// TODO: 四次対応
		for (idx = ITEM_SP_PERFECT_ATTACK_UP; idx <= ITEM_SP_PERFECT_ATTACK_UP; idx++) {
			n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
		}









//================================================================================================================================
//================================================================================================================================
//====
//==== 近接物理攻撃で与えるダメージ＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================



		//----------------------------------------------------------------
		// ★★★暫定措置　コピペ禁止★★★
		// 「変貌の白騎士」の、効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_ID_HENBONO_SHIROKISHI)) > 0) {
			n_tok[ITEM_SP_SHORTRANGE_DAMAGE_UP] += 5 * cardCount;
			n_tok[ITEM_SP_SHORTRANGE_DAMAGE_UP] += 1 * Math.floor(n_A_BaseLV / 20) * cardCount;
		}

		//----------------------------------------------------------------
		// 「インペリアルマグマスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_MAGMA_SUIT)) > 0) {
			n_tok[ITEM_SP_SHORTRANGE_DAMAGE_UP] += 3 * LearnedSkillSearch(SKILL_ID_MAGMA_ILLUPTION) * itemCount;
		}


		//----------------------------------------------------------------
		// 「グレースマグマスーツ」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_MAGMA_SUIT)) > 0) {
			n_tok[ITEM_SP_SHORTRANGE_DAMAGE_UP] += 6 * LearnedSkillSearch(SKILL_ID_MAGMA_ILLUPTION) * itemCount;
		}





		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果（遠距離と共用）
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_LONGRANGE_DAMAGE_UP);
		if (confval != 0) {
			n_tok[ITEM_SP_SHORTRANGE_DAMAGE_UP] += confval;
		}

		// TODO: 四次対応
		for (idx = ITEM_SP_SHORTRANGE_DAMAGE_UP; idx <= ITEM_SP_SHORTRANGE_DAMAGE_UP; idx++) {
			n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
		}









//================================================================================================================================
//================================================================================================================================
//====
//==== 獲得経験値＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// 「機工士の靴」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KIKOSHINO_KUTSU)) > 0) {
			n_tok[ITEM_SP_EXP_UP_RACE_SOLID] += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「墓守の靴」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_HAKAMORINO_KUTSU)) > 0) {
			n_tok[ITEM_SP_EXP_UP_RACE_UNDEAD] += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「狩人の靴」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KARYUDONO_KUTSU)) > 0) {
			n_tok[ITEM_SP_EXP_UP_RACE_ANIMAL] += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「庭師の靴」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_NIWASHINO_KUTSU)) > 0) {
			n_tok[ITEM_SP_EXP_UP_RACE_PLANT] += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「昆虫採集家の靴」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_KONCHUSAISHUUKANO_KUTSU)) > 0) {
			n_tok[ITEM_SP_EXP_UP_RACE_INSECT] += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「漁師の靴」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_RYOUSHINO_KUTSU)) > 0) {
			n_tok[ITEM_SP_EXP_UP_RACE_FISH] += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「退魔の靴」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_TAIMANO_KUTSU)) > 0) {
			n_tok[ITEM_SP_EXP_UP_RACE_DEMON] += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「暗殺者の靴」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_ANSATSUSHANO_KUTSU)) > 0) {
			n_tok[ITEM_SP_EXP_UP_RACE_HUMAN] += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「堕天使の靴」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_DATENSHINO_KUTSU)) > 0) {
			n_tok[ITEM_SP_EXP_UP_RACE_ANGEL] += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		}

		//----------------------------------------------------------------
		// 「屠龍の靴」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_TORYUUNO_KUTSU)) > 0) {
			n_tok[ITEM_SP_EXP_UP_RACE_DRAGON] += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		}



		//----------------------------------------------------------------
		// 「職業カードセット　アコライトセット」の、職業による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_SET_ID_JOBSET_ACOLYTE)) > 0) {
			if (GetLowerJobSeriesID(n_A_JOB) == JOB_SERIES_ID_ACOLYTE) {
				n_tok[ITEM_SP_EXP_UP_RACE_UNDEAD] += 5;
				n_tok[ITEM_SP_EXP_UP_RACE_DEMON] += 5;
			}
		}

		//----------------------------------------------------------------
		// 「職業カードセット　アーチャーセット」の、職業による効果
		//----------------------------------------------------------------
		if ((cardCount = CardNumSearch(CARD_SET_ID_JOBSET_ARCHER)) > 0) {
			if (GetLowerJobSeriesID(n_A_JOB) == JOB_SERIES_ID_ARCHER) {
				n_tok[ITEM_SP_EXP_UP_RACE_ANIMAL] += 5;
			}
		}



		//----------------------------------------------------------------
		// 「幸福の盾　アーノルディカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOFUKUNO_TATE_ARNORDY_CARD)) > 0) {
			vartmp = 0;

			if (n_A_SHIELD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_SHIELD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_PLANT] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「幸福の盾　アヌビスカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOFUKUNO_TATE_ANUBIS_CARD)) > 0) {
			vartmp = 0;

			if (n_A_SHIELD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_SHIELD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_ANGEL] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「幸福の盾　オークウォーリアカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOFUKUNO_TATE_ORC_WARRIOR_CARD)) > 0) {
			vartmp = 0;

			if (n_A_SHIELD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_SHIELD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_ANIMAL] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「幸福の盾　カーリッツバーグカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOFUKUNO_TATE_CARITZBURG_CARD)) > 0) {
			vartmp = 0;

			if (n_A_SHIELD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_SHIELD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_DEMON] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「幸福の盾　スカイプティットカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOFUKUNO_TATE_SKY_PTITE_CARD)) > 0) {
			vartmp = 0;

			if (n_A_SHIELD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_SHIELD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_DRAGON] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「幸福の盾　タラフロッグカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOFUKUNO_TATE_TARAFROG_CARD)) > 0) {
			vartmp = 0;

			if (n_A_SHIELD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_SHIELD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_HUMAN] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「幸福の盾　ビッグフットカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOFUKUNO_TATE_BIGFOOT_CARD)) > 0) {
			vartmp = 0;

			if (n_A_SHIELD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_SHIELD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_INSECT] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「幸福の盾　ベアドールカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOFUKUNO_TATE_BEARDOLL_CARD)) > 0) {
			vartmp = 0;

			if (n_A_SHIELD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_SHIELD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_UNDEAD] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「幸福の盾　ペノメナカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOFUKUNO_TATE_PHENOMENA_CARD)) > 0) {
			vartmp = 0;

			if (n_A_SHIELD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_SHIELD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_SOLID] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「幸福の盾　ラフレシアカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOFUKUNO_TATE_RAFLECIA_CARD)) > 0) {
			vartmp = 0;

			if (n_A_SHIELD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_SHIELD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_FISH] += vartmp * itemCount;
		}



		//----------------------------------------------------------------
		// 「ソイガの書　アルマイア＝デュンゼカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SOIGANO_SHO_ARMAIA_DUNZE_CARD)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_HEAD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_FISH] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「ソイガの書　ウィレスカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SOIGANO_SHO_VIRUS_CARD)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_HEAD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_INSECT] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「ソイガの書　オークアーチャーカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SOIGANO_SHO_ORC_ARCHER_CARD)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_HEAD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_HUMAN] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「ソイガの書　グリーンイグアナカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SOIGANO_SHO_GREEN_IGUANA_CARD)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_HEAD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_SOLID] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「ソイガの書　執行する者カードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SOIGANO_SHO_SIKKOSURUMONO_CARD)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_HEAD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_ANGEL] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「ソイガの書　ステムワームカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SOIGANO_SHO_STEM_WORM_CARD)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_HEAD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_ANIMAL] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「ソイガの書　天邪仙人カードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SOIGANO_SHO_TENZYA_SENNIN_CARD)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_HEAD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_PLANT] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「ソイガの書　ドラゴンの卵カードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SOIGANO_SHO_DRAGONNO_TAMAGO_CARD)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_HEAD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_DRAGON] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「ソイガの書　レイスカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SOIGANO_SHO_WRAITH_CARD)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_HEAD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_UNDEAD] += vartmp * itemCount;
		}

		//----------------------------------------------------------------
		// 「ソイガの書　レイドリックアーチャーカードセット」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_SOIGANO_SHO_RAYDRIC_ARCHER_CARD)) > 0) {
			vartmp = 0;

			if (n_A_HEAD_DEF_PLUS >= 6) vartmp += 5;
			if (n_A_HEAD_DEF_PLUS >= 8) vartmp += 5;

			n_tok[ITEM_SP_EXP_UP_RACE_DEMON] += vartmp * itemCount;
		}



		//----------------------------------------------------------------
		// 「チュンイーの霊」の、職業による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_CHUNG_EAHNO_REI)) > 0) {
			if (GetLowerJobSeriesID(n_A_JOB) == JOB_SERIES_ID_TAEGKUON) {
				n_tok[ITEM_SP_EXP_UP_ALL] += 5 * itemCount;
			}
		}








//================================================================================================================================
//================================================================================================================================
//====
//==== 近接物理ダメージ反射　ここから
//====
//================================================================================================================================
//================================================================================================================================


		if(EquipNumSearch(535)
			|| EquipNumSearch(1647)
			|| EquipNumSearch(1718)
			|| CardNumSearch(CARD_ID_ENCHANT_ENERGY_IKUSAOTOME)){
			var wVM = GetLowerJobSeriesID(n_A_JOB);
			if(wHPVS==1 || wHPVS==2 || wHPVS==6){
				n_tok[71] += 5;
				n_tok[71] += n_A_SHOULDER_DEF_PLUS * 2;
			}
		}
		if(TimeItemNumSearch(52)) n_tok[71] += n_A_SHIELD_DEF_PLUS * 3;
		if(EquipNumSearch(1998)) n_tok[71] += 2 * n_A_SHOULDER_DEF_PLUS;
		if(EquipNumSearch(2293)) n_tok[71] += ROUNDDOWN(n_A_SHOES_DEF_PLUS / 2);

		if (UsedSkillSearch(SKILL_ID_STONE_HARD_SKIN) > 0) {
			if (EquipNumSearch(ITEM_ID_RUNE_HELM) > 0) {
				n_tok[71] += 10;
			}
			else if (EquipNumSearch(ITEM_ID_ZYASPER_CIRCLET) > 0) {
				n_tok[71] += 10;
			}
			else if (EquipNumSearch(ITEM_ID_TENBINKYUNO_DIADEM) > 0) {
				if (IsSameJobClass(JOB_ID_RUNEKNIGHT)) {
					n_tok[71] += 10;
				}
			}
			else if (EquipNumSearch(ITEM_ID_FAFNIR_HELM) > 0) {
				n_tok[71] += 10;
			}
		}

		//----------------------------------------------------------------
		// 「ローラのプレートメイル」の、精錬による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_LOLANO_PLATEMAIL)) > 0) {
			vartmp = 0;

			if (n_A_BODY_DEF_PLUS >= 7) vartmp += 5;
			if (n_A_BODY_DEF_PLUS >= 9) vartmp += 5;

			n_tok[ITEM_SP_REFLECT_PHYSICAL_DAMAGE] += vartmp * itemCount;
		}



//================================================================================================================================
//================================================================================================================================
//====
//==== 武器攻撃力＋○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_WEAPON_ATK_UP; idx <= ITEM_SP_WEAPON_ATK_UP; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}



		//----------------------------------------------------------------
		// 「ゾディアック　ポルックスマント」セットの、職業による効果
		//----------------------------------------------------------------
		if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_POLLUX_MANT)) {
			if (IsSameJobClass(JOB_ID_STAR_EMPEROR)) {
				n_tok[ITEM_SP_WEAPON_ATK_UP] += 1 * n_A_SHOULDER_DEF_PLUS;
			}
		}

		//----------------------------------------------------------------
		// 「妖魔のささやき」の、スキル習得による効果
		//----------------------------------------------------------------
		if ((itemCount = EquipNumSearch(ITEM_ID_YOMANO_SASAYAKI)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_COUNTER_SLASH) >= 10) {
				n_tok[ITEM_SP_WEAPON_ATK_UP] += 25 * itemCount;
			}
		}



		//----------------------------------------------------------------
		// 「星帝　太陽の構え」の、効果
		//----------------------------------------------------------------
		if ((sklLv = UsedSkillSearch(SKILL_ID_TAIYONO_KAMAE)) > 0) {
			n_tok[ITEM_SP_WEAPON_ATK_UP] += 5 * sklLv;
		}

		//----------------------------------------------------------------
		// 「三次職支援　エビ三昧」の効果
		//----------------------------------------------------------------
		switch (g_confDataSanzi[CCharaConfSanzi.CONF_ID_EBI_ZANMAI]) {
		case 1:
			n_tok[ITEM_SP_WEAPON_ATK_UP] += 5;
			break;
		case 2:
			n_tok[ITEM_SP_WEAPON_ATK_UP] += 5;
			break;
		case 3:
			n_tok[ITEM_SP_WEAPON_ATK_UP] += 10;
			break;
		case 4:
			n_tok[ITEM_SP_WEAPON_ATK_UP] += 15;
			break;
		case 5:
			n_tok[ITEM_SP_WEAPON_ATK_UP] += 30;
			break;
		}



		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_WEAPON_ATK_UP);
		if (confval != 0) {
			n_tok[ITEM_SP_WEAPON_ATK_UP] += confval;
		}


/**
 * ===========================================================================================
 * 絶対にノックバックしない
 * ===========================================================================================
 */
		if (EquipNumSearch(ITEM_ID_MOKOMOKO_OSAKANA_SHOES) !== 0){
			// もこもこお魚シューズ を装備していて
			if (LearnedSkillSearch(SKILL_ID_GROOMING) === 5) {
				// グルーミング Lv5 を習得している場合
				n_tok[ITEM_SP_NEVER_KNOCK_BACK] += 1;
			}
		}
		if (EquipNumSearch(ITEM_ID_POWERED_WING) !== 0) {
			// パワードウィング を装備していて
			if (LearnedSkillSearch(SKILL_ID_HITO_DAICHINO_KENKYU) === 5) {
				// 火と大地の研究 Lv5 を習得している場合
				n_tok[ITEM_SP_NEVER_KNOCK_BACK] += 1;
			}
		}
		if (EquipNumSearch(ITEM_ID_IMPERIAL_GATLING_SUIT) !== 0 || EquipNumSearch(ITEM_ID_GRACE_GATLING_SUIT) !== 0) {
			// インペリアルガトリングスーツ　か　グレースガトリングスーツ を装備していて
			if (LearnedSkillSearch(SKILL_ID_ETERNAL_CHAIN) === 10) {
				// エターナルチェーン Lv10 を習得している場合
				n_tok[ITEM_SP_NEVER_KNOCK_BACK] += 1;
			}
		}
		if (EquipNumSearch(ITEM_ID_IMPERIAL_TENCHI_SUIT) !== 0 || EquipNumSearch(ITEM_ID_GRACE_TENCHI_SUIT) !== 0) {
			// インペリアル天地スーツ　か　グレース天地スーツ を装備していて
			if (LearnedSkillSearch(SKILL_ID_SENRYU_SHOTEN) === 10) {
				// 潜龍昇天 Lv10 を習得している場合
				n_tok[ITEM_SP_NEVER_KNOCK_BACK] += 1;
			}
		}
		if (EquipNumSearch(ITEM_ID_IMPERIAL_HOLY_ROBE) !== 0 || EquipNumSearch(ITEM_ID_GRACE_HOLY_ROBE) !== 0) {
			// インペリアルホーリーローブ　か　グレースホーリーローブ を装備していて
			if (LearnedSkillSearch(SKILL_ID_SECRAMENT) === 5) {
				// サクラメント Lv5 を習得している場合
				n_tok[ITEM_SP_NEVER_KNOCK_BACK] += 1;
			}
		}

/**
 * ===========================================================================================
 * 詠唱が中断されない
 * ===========================================================================================
 */
		if (EquipNumSearch(ITEM_ID_YUSHANO_MAGIC_COAT) !== 0) {
			// 勇者のマジックコート を装備していて
			if (n_A_BODY_DEF_PLUS % 2 === 1) {
				// 精錬値が奇数の場合
				n_tok[ITEM_SP_NEVER_CAST_CANCEL] += 1;
			}
		}


//================================================================================================================================
//================================================================================================================================
//====
//==== サイズ１００％　ここから
//====
//================================================================================================================================
//================================================================================================================================

		//----------------------------------------------------------------
		// ランダムエンチャント効果
		//----------------------------------------------------------------
		for (idx = ITEM_SP_SIZE_PERFECTION; idx <= ITEM_SP_SIZE_PERFECTION; idx++) {
			n_tok[idx] += GetRndOptTotalValue(idx, null, false);
			// n_tok[idx] += GetRndEnchValue(idx);
		}



		//----------------------------------------------------------------
		// 「性能カスタマイズ」の、効果
		//----------------------------------------------------------------
/*
		confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_MAGICAL_DAMAGE_UP_BOSS_AND_NOT_BOSS);
		if (confval != 0) {
			n_tok[ITEM_SP_MAGICAL_DAMAGE_UP_NOTBOSS] += confval;
		}
*/

		//----------------------------------------------------------------
		// 四次特性ステータス対応用
		//----------------------------------------------------------------
		ApplySpecStatusModifications(charaData, n_tok);

		//----------------------------------------------------------------
		// キャラクターデータ画面表示更新
		//----------------------------------------------------------------
		if (g_SPMODE_FLAG == 0) {
			UpdateCharaDataHtml(charaData, n_tok);
		}

		//----------------------------------------------------------------
		// モンスターパラメータ取得
		//----------------------------------------------------------------
		GetMobDataParameters(monsterId, mobData);

		//----------------------------------------------------------------
		// モンスターデータ画面表示更新
		//----------------------------------------------------------------
		if (g_SPMODE_FLAG == 0) {
			UpdateMobDataHtml(monsterId, mobData);
			UpdateCharaDataHtml(charaData, n_tok);
		}

//================================================================================================
// グローバル変数の準備
//================================================================================================

	n_B_DEF2 = [0,0,0];
	n_B_DEF2[2] = mobData[MONSTER_DATA_EXTRA_INDEX_DEF_MINUS_MIN];
	n_B_DEF2[0] = mobData[MONSTER_DATA_EXTRA_INDEX_DEF_MINUS_MAX];
	n_B_DEF2[1] = Math.floor((n_B_DEF2[2] + n_B_DEF2[0]) /2);
	n_B_MDEF2 = mobData[MONSTER_DATA_EXTRA_INDEX_MDEF_MINUS];
	n_B_HIT = mobData[MONSTER_DATA_EXTRA_INDEX_HIT];
	n_B_FLEE = mobData[MONSTER_DATA_EXTRA_INDEX_FLEE];

		// 錐効果の計算
		n_A_QUAKE_KIRI = 0;

		//----------------------------------------------------------------
		// 「古びた迷彩ウサギフード」の、＋１０精錬による、錐効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_FURUBITA_MEISAIUSAGI)) {
			if (n_A_HEAD_DEF_PLUS >= 10) {
				n_tok[23] = 1;
			}
		}

		//----------------------------------------------------------------
		// 「古王の双刃」の、＋１０精錬による、錐効果
		//----------------------------------------------------------------
		if(EquipNumSearch(ITEM_ID_KOONO_SOZIN)) {
			if (n_A_Weapon_ATKplus >= 10) {
				n_tok[23] = 1;
			}
		}

		//----------------------------------------------------------------
		// 「グラトニースティック」の、＋１０精錬による、錐効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_GLUTTONY_STICK, EQUIP_REGION_ID_ARMS);
		if (itemCountRight > 0 && n_A_Weapon_ATKplus >= 10) {
			n_tok[23] = 1;
		}
		itemCountLeft = EquipNumSearch(ITEM_ID_GLUTTONY_STICK, EQUIP_REGION_ID_ARMS_LEFT);
		if (itemCountLeft > 0 && n_A_Weapon2_ATKplus >= 10) {
			n_tok[23] = 1;
		}

		//----------------------------------------------------------------
		// 「スローステキスト」の、＋１０精錬による、錐効果
		//----------------------------------------------------------------
		itemCountRight = EquipNumSearch(ITEM_ID_SLOTH_TEXT, EQUIP_REGION_ID_ARMS);
		if (itemCountRight > 0 && n_A_Weapon_ATKplus >= 10) {
			n_tok[23] = 1;
		}
		itemCountLeft = EquipNumSearch(ITEM_ID_SLOTH_TEXT, EQUIP_REGION_ID_ARMS_LEFT);
		if (itemCountLeft > 0 && n_A_Weapon2_ATKplus >= 10) {
			n_tok[23] = 1;
		}

		// TODO: データ移行過渡処理
		// 計算したSP効果を、移行前のデータ形式に変換して、加算する
		if (IsEnableMigrationBlockTransit()) {

			var spTag = null;

			spTag = new CMigEquipableSpTag()
				.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_KIRI_EFFECT);

			if (0 < g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_MAX)) {
				n_tok[23] = 1;
			}
			else if (0 < g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_MAX)) {
				n_tok[23] = 1;
			}
		}

		if((n_tok[23] >= 1 && NumSearch(n_A_ActiveSkill,n_SP_SKILL) == 0)
			|| n_A_ActiveSkill == 193) {

			var ch = 0;

			for(var i=0;i<=9;i++) {
				if(n_tok[180+i] == 1) {
					ch = 1;
				}
			}

			if(mobData[20] == 1){
				if(n_tok[22] >= 10) ch = 1;
			}else if(mobData[20] == 0){
				if(n_tok[22] >= 1) ch = 1;
			}

			if(ch == 0){

				// アイテム特性のＤＥＦ無視効果を計算
				var ignoreDef = 0;

				// 全てのモンスターのＤＥＦ無視
				ignoreDef += n_tok[ITEM_SP_IGNORE_DEF_ALL];

				// 一般／ボスのＤＥＦ無視
				if (mobData[MONSTER_DATA_INDEX_BOSS_TYPE] == MONSTER_BOSSTYPE_NONE) {
					ignoreDef += n_tok[ITEM_SP_IGNORE_DEF_NOTBOSS];
				}
				else if (mobData[20] == 1) {
					ignoreDef += n_tok[ITEM_SP_IGNORE_DEF_BOSS];
				}

				// 全ての種族のＤＥＦ無視
				ignoreDef += n_tok[ITEM_SP_IGNORE_DEF_RACE_ALL];

				// 特定種族のＤＥＦ無視
				ignoreDef += n_tok[ITEM_SP_IGNORE_DEF_RACE_SOLID + mobData[MONSTER_DATA_INDEX_RACE]];

				// 錐効果値を計算
				n_A_QUAKE_KIRI = mobData[MONSTER_DATA_INDEX_DEF_DIV_IGNORE_BUFF] * (100 - ignoreDef) / 100.0 / 2;

				// エクスピアティオの効果で補正する
				if (n_A_QUAKE_KIRI > 0) {
					if (g_confDataSanzi[CCharaConfSanzi.CONF_ID_EXPIATIO] > 0) {
						n_A_QUAKE_KIRI -= (n_A_QUAKE_KIRI * ((20 * g_confDataSanzi[CCharaConfSanzi.CONF_ID_EXPIATIO]) / 100));
					}
					else if (UsedSkillSearch(SKILL_ID_EXPIATIO)) {
						n_A_QUAKE_KIRI -= (n_A_QUAKE_KIRI * ((20 * UsedSkillSearch(SKILL_ID_EXPIATIO)) / 100));
					}
				}

				// 負数だと、floor 処理での丸め仕様が違うようなので。また、IE では Math.sign() 未サポート
				n_A_QUAKE_KIRI = (n_A_QUAKE_KIRI >= 0 ? 1 : -1) * Math.floor(Math.abs(n_A_QUAKE_KIRI));

				n_tok[17] += n_A_QUAKE_KIRI;
			}
		}

		// TODO: 四次対応
		for (idx = ITEM_SP_P_ATK_PLUS; idx <= ITEM_SP_MRES_PLUS; idx++) {
			n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
		}

		DisplayReferStatusAll();

		// Lv200解放アップデートでの、上限値新設への対応
		var funcIsLimitSpIDUpTo95 = function (spidF) {

			if ((ITEM_SP_RESIST_ELM_VANITY <= spidF) && (spidF <= ITEM_SP_RESIST_ELM_UNDEAD)) {
				return true;
			}
			if (spidF == ITEM_SP_RESIST_ELM_ALL) {
				return true;
			}

			if ((ITEM_SP_RESIST_MONSTER_ELM_VANITY <= spidF) && (spidF <= ITEM_SP_RESIST_MONSTER_ELM_UNDEAD)) {
				return true;
			}
			if (spidF == ITEM_SP_RESIST_MONSTER_ELM_ALL) {
				return true;
			}

			if ((ITEM_SP_RESIST_SIZE_SMALL <= spidF) && (spidF <= ITEM_SP_RESIST_SIZE_LARGE)) {
				return true;
			}

			if ((ITEM_SP_RESIST_RACE_SOLID <= spidF) && (spidF <= ITEM_SP_RESIST_RACE_DRAGON)) {
				return true;
			}
			if (spidF == ITEM_SP_RESIST_RACE_HUMAN_NOT_PLAYER) {
				return true;
			}
			if (spidF == ITEM_SP_RESIST_RACE_ALL) {
				return true;
			}

			if (spidF == ITEM_SP_RESIST_PLAYER_HUMAN) {
				return true;
			}
			if (spidF == ITEM_SP_RESIST_PLAYER_DORAM) {
				return true;
			}
			if (spidF == ITEM_SP_RESIST_PLAYER_ALL) {
				return true;
			}

			if (spidF == ITEM_SP_RESIST_BOSS) {
				return true;
			}
			if (spidF == ITEM_SP_RESIST_NOTBOSS) {
				return true;
			}

			if (spidF == ITEM_SP_RESIST_LONGRANGE) {
				return true;
			}

			// 完全回避は最終結果（変数 lucky）を補正計算済み

			// 上記以外は、対象外
			return false;
		};

		if (_APPLY_UPDATE_LV200) {
			for (idx = 0; idx < n_tok.length; idx++) {
				n_tok_no_limit[idx] = n_tok[idx];

				if (funcIsLimitSpIDUpTo95(idx)) {
					n_tok[idx] = Math.min(95, n_tok[idx]);
				}
			}
		}

		// TODO: 攻撃手段更新、ここにいれられないか



		// TODO: ステータス欄注意喚起
		var objDiv = document.getElementById("OBJID_DIV_STATUS_NOTICE");
		HtmlRemoveAllChild(objDiv);
		if (UsedSkillSearch(SKILL_ID_SHUCHURYOKU_KOZYO) > 0) {
			var objP = null;
			var objA = null;
			objP = HtmlCreateElement("p", objDiv);
			objP.setAttribute("class", "CSSCLS_GENERAL_COLOR_RED_BOLD");
			HtmlCreateTextNode("（★注意情報★）集中力向上の効果が設定されています。", objP);
			objA = HtmlCreateElement("a", objP);
			objA.setAttribute("href", "../kousin/note20210606.html");
			objA.setAttribute("target", "_blank");
			HtmlCreateTextNode("『こちら』", objA);
			HtmlCreateTextNode("の注意事項をご確認ください。", objP);
		}

		// データ収集

		// ここまでで収集されていないデータの追加
		charaData[CHARA_DATA_INDEX_SKILL_CAST_TIME_SCALING_VARY] = GetCastScalingOfSkillForCastTimeVary(n_A_ActiveSkill);
		charaData[CHARA_DATA_INDEX_SKILL_CAST_TIME_FIX_VARY] = GetCastFixOfSkillForCastTimeVary(n_A_ActiveSkill);
		charaData[CHARA_DATA_INDEX_SKILL_CAST_TIME_SCALING_FIXED] = GetCastScalingOfSkillForCastTimeFixed(n_A_ActiveSkill);
		charaData[CHARA_DATA_INDEX_SKILL_CAST_TIME_FIX_FIXED] = GetCastFixOfSkillForCastTimeFixed(n_A_ActiveSkill);
		charaData[CHARA_DATA_INDEX_SKILL_CAST_TIME_SCALING_FORCE] = GetCastScalingOfSkillForCastTimeForce(n_A_ActiveSkill);
		charaData[CHARA_DATA_INDEX_SKILL_CAST_TIME_FIX_FORCE] = GetCastFixOfSkillForCastTimeForce(n_A_ActiveSkill);
		charaData[CHARA_DATA_INDEX_SKILL_COOL_TIME_FIX] = GetCoolFixOfSkill(n_A_ActiveSkill);
		charaData[CHARA_DATA_INDEX_SKILL_COST_SCALING] = GetCostScalingOfSkill(n_A_ActiveSkill);
		charaData[CHARA_DATA_INDEX_SKILL_COST_FIX] = GetCostFixOfSkill(n_A_ActiveSkill);

		// 計算データクラスに設定
		CCalcDataTextCreator.refCharaData = charaData;
		CCalcDataTextCreator.refSpecData = n_tok;
		CCalcDataTextCreator.refMobData = mobData;

		// 拡張表示を更新
		CFloatingInfoAreaComponentManager.setReferData(charaData, n_tok, mobData);
		CFloatingInfoAreaComponentManager.RefreshDispAreaAll();
	}

	return [charaData, n_tok, mobData, attackMethodConfArray];
}

/**
 * キャラクタの基礎値に加えて
 * 公式サイトで「完全回避 + ◯」と表記される完全回避の増加効果を適用した
 * 最終的な完全回避の値を取得する
 * @returns {Number}
 */
function getCompleteAvoidance() {
    let lucky = 0;
    let itemCount = 0;
    let cardCount = 0;
    let cardCountRight = 0;
    let cardCountLeft = 0;
    let cardCountHeadTop = 0;
    let cardCountShield = 0;
    let cardCountBody = 0;
    let cardCountShoulder = 0;
    let cardCountShoes = 0;

    //----------------------------------------------------------------
    // ランダムエンチャント効果
    //----------------------------------------------------------------
    for (let idx = ITEM_SP_LUCKY_PLUS; idx <= ITEM_SP_LUCKY_PLUS; idx++) {
        n_tok[idx] += GetRndOptTotalValue(idx, null, false);
    }

    //----------------------------------------------------------------
    // 種族ごとの基礎値
    //----------------------------------------------------------------
    // ドラムの場合
    if (IsDoramJob(n_A_JOB)) {
        lucky = 1 + SU_LUK * 0.12 + (n_A_LUK - SU_LUK) * 0.1;
    }
    // 人間の場合
    else {
        lucky = 1 + n_A_LUK * 0.1;
    }

    lucky += n_tok[ITEM_SP_LUCKY_PLUS];
    if (GetLowerJobSeriesID(n_A_JOB) === JOB_ID_THIEF) {
		lucky += 5 * CardNumSearch(CARD_ID_WILD_ROSE);
	}
    if (GetLowerJobSeriesID(n_A_JOB) === JOB_ID_SWORDMAN) {
		lucky += 3 * CardNumSearch(CARD_ID_HEATER);
	}
    if (n_A_SHOULDER_DEF_PLUS <= 4 && CardNumSearch(CARD_ID_KAVAC_ICARUS)) {
		lucky += 1;
	}
    if (n_A_Equip[EQUIP_REGION_ID_SHOULDER] === ITEM_ID_VALKYRIE_MANT ||
        EquipNumSearch(ITEM_ID_AEGIR_MANT) ||
        EquipNumSearch(ITEM_ID_VALKIRIE_CAPE) ||
        CardNumSearch(CARD_ID_ENCHANT_ENERGY_IKUSAOTOME)) {
        let wHPVS = GetLowerJobSeriesID(n_A_JOB);
		if ([JOB_ID_ACOLYTE, JOB_ID_ARCHER, JOB_ID_MAGICIAN].includes(wHPVS)) {
            lucky += 5;
            lucky += n_A_SHOULDER_DEF_PLUS * 2;
        }
    }
    if (GetLowerJobSeriesID(n_A_JOB) === JOB_ID_TAEGWON && EquipNumSearch(ITEM_ID_ROUJINNO_KAMEN)) {
		lucky += 2;
	}
    if (n_A_SHIELD_DEF_PLUS >= 6 && EquipNumSearch(ITEM_ID_TOY_SHIELD)) {
		lucky += 3;
	}
    if (SU_AGI >= 120 && EquipNumSearch(ITEM_ID_CHINMOKUNO_SHIKKOSHA)) {
		lucky += 5;
	}
    if (SU_VIT >= 100 && EquipNumSearch(ITEM_ID_MUBYOSOKUSAINO_OMAMORI)) {
        let wx = EquipNumSearch(ITEM_ID_MUBYOSOKUSAINO_OMAMORI);
        lucky += 1 * wx;
        if (SU_VIT >= 120) {
			lucky += 3 * wx;
		}
    }
    if (n_A_BODY_DEF_PLUS >= 7 && n_A_SHOULDER_DEF_PLUS >= 7 && n_A_SHOES_DEF_PLUS >= 7 && EquipNumSearch(ITEM_SET_ID_KUROHANO_SUIT_ARTIFACT)) {
		lucky += 5;
	}
    if (n_A_SHOULDER_DEF_PLUS >= 7 && EquipNumSearch(ITEM_ID_KUROHANO_MANT)) {
		lucky += (n_A_SHOULDER_DEF_PLUS - 6);
	}
    if (n_A_SHOULDER_DEF_PLUS >= 7 && EquipNumSearch(ITEM_ID_SKIN_OF_VENTUS_REFINE_7)) {
		lucky += 2;
	}
    if (n_A_Weapon_ATKplus >= 7 && EquipNumSearch(ITEM_ID_UNMEI_NO_SHO)) {
		lucky += 5;
	}
    if (SU_AGI >= 110 && EquipNumSearch(ITEM_ID_SHUNBINNO_GLOVE)) {
		lucky += 1 * EquipNumSearch(ITEM_ID_SHUNBINNO_GLOVE);
	}
    if (n_A_HEAD_DEF_PLUS >= 7 && EquipNumSearch(ITEM_ID_BERET_OF_BOSS_REFINE_7)) {
        lucky += 1;
        if (n_A_HEAD_DEF_PLUS >= 9) {
			lucky += 1;
		}
        if (n_A_HEAD_DEF_PLUS >= 10) {
			lucky += 3;
		}
    }
    if (n_A_BaseLV >= 130 && EquipNumSearch(ITEM_ID_EXELION_WING)) {
        lucky += 2;
        if (EquipNumSearch(ITEM_ID_EXELION_WING_AT_LV130)) {
			lucky += 6;
		}
    }
    if (n_A_SHIELD_DEF_PLUS >= 3 && EquipNumSearch(ITEM_ID_SKTOM)) {
		lucky += 2 * ROUNDDOWN(n_A_SHIELD_DEF_PLUS / 3);
	}
    if (EquipNumSearch(ITEM_ID_KUROHANO_MANT_AVOIDANCE_OPTION)) {
		lucky += 3 * n_A_SHOULDER_DEF_PLUS;
	}

    //----------------------------------------------------------------
    // 「ヴァルキリーハンマー」の、職業による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_VALKYRIE_HAMMER)) {
        switch (GetLowerJobSeriesID(n_A_JOB)) {
            // ノービス系
            case JOB_SERIES_ID_NOVICE:
                lucky += 1 * n_A_Weapon_ATKplus;
                break;
                // ソードマン系
            case JOB_SERIES_ID_SWORDMAN:
                break;
                // マーチャント系
            case JOB_SERIES_ID_MERCHANT:
                break;
            default:
                switch (GetHigherJobSeriesID(n_A_JOB)) {
                    // プリースト系
                    case JOB_SERIES_ID_PRIEST:
                        break;
                    // モンク系
                    case JOB_SERIES_ID_MONK:
                        lucky += 1 * n_A_Weapon_ATKplus;
                        break;
                }
        }
    }

    //----------------------------------------------------------------
    // 「ロザリオの首飾り　クローチェセット」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_ROSARIONO_KUBIKAZARI_CROCE_STUFF)) {
        lucky += 2 * n_A_Weapon_ATKplus;
    }

    //----------------------------------------------------------------
    // 「ロザリオの首飾り　聖職者の看護帽セット」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_ROSARIONO_KUBIKAZARI_SEISHOKUSHANO_KANGOBO)) {
        lucky += 1 * n_A_HEAD_DEF_PLUS;
    }

    //----------------------------------------------------------------
    // 「アヴェンジャージャマダハル」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_AVENGER_JAMADHAR)) {
        if (n_A_Weapon_ATKplus >= 5) lucky += 5;
        if (n_A_Weapon_ATKplus >= 7) lucky += 5;
    }

    //----------------------------------------------------------------
    // 「皇竜の天翼」の、職業による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_KORYUNO_TENYOKU)) {
        if (GetLowerJobSeriesID(n_A_JOB) == JOB_SERIES_ID_THIEF) {
            lucky += 3;
        }
    }

    //----------------------------------------------------------------
    // 「エナジー＜致命ノ一撃＞」の、精錬による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_ENCHANT_ENERGY_CHIMEINO_ICHIGEKI)) > 0) {
        lucky += 1 * Math.max(0, (n_A_SHOULDER_DEF_PLUS - 4)) * cardCount;
    }

    //----------------------------------------------------------------
    // 「ギロチンクロスエレメス(MVP)カード」の、職業による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_GUILLOTINE_CROSS_ELEMES_MVP)) > 0) {
        if (IsSameJobClass(JOB_ID_GILOTINCROSS)) {
            lucky += 10 * cardCount;
        }
    }

    //----------------------------------------------------------------
    // 「ジークフリードの兜」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ZIRKFREEDNO_KABUTO)) > 0) {
        let vartmp = 0;
        if (n_A_HEAD_DEF_PLUS >= 6) {
            vartmp += 5;
        }
        if (n_A_HEAD_DEF_PLUS >= 8) {
            vartmp += 5;
        }
        lucky += vartmp * itemCount;
    }

    //----------------------------------------------------------------
    // 「名誉のニーヴ(幸運)」の、精錬による効果
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_KOUN, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_KOUN, CARD_REGION_ID_ARMS_LEFT_ANY);
    cardCountHeadTop = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_KOUN, CARD_REGION_ID_HEAD_TOP_ANY);
    cardCountShield = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_KOUN, CARD_REGION_ID_SHIELD_ANY);
    cardCountBody = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_KOUN, CARD_REGION_ID_BODY_ANY);
    cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_KOUN, CARD_REGION_ID_SHOULDER_ANY);
    cardCountShoes = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_KOUN, CARD_REGION_ID_SHOES_ANY);
    if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield +
        cardCountBody + cardCountShoulder + cardCountShoes > 0) {

        // 右手武器へのエンチャント
        let vartmp = 0;
        if (n_A_Weapon_ATKplus >= 7) vartmp += 2;
        if (n_A_Weapon_ATKplus >= 9) vartmp += 2;
        lucky += vartmp * cardCountRight

        // 左手武器へのエンチャント
        vartmp = 0;
        if (n_A_Weapon2_ATKplus >= 7) vartmp += 2;
        if (n_A_Weapon2_ATKplus >= 9) vartmp += 2;
        lucky += vartmp * cardCountLeft

        // 頭防具へのエンチャント
        vartmp = 0;
        if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 2;
        if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 2;
        lucky += vartmp * cardCountHeadTop

        // 盾防具へのエンチャント
        vartmp = 0;
        if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 2;
        if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 2;
        lucky += vartmp * cardCountShield

        // 体防具へのエンチャント
        vartmp = 0;
        if (n_A_BODY_DEF_PLUS >= 7) vartmp += 2;
        if (n_A_BODY_DEF_PLUS >= 9) vartmp += 2;
        lucky += vartmp * cardCountBody

        // 肩防具へのエンチャント
        vartmp = 0;
        if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 2;
        if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 2;
        lucky += vartmp * cardCountShoulder

        // 靴防具へのエンチャント
        vartmp = 0;
        if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 2;
        if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 2;
        lucky += vartmp * cardCountShoes

        // アクセサリへのエンチャント
        // 精錬できないので処理不要
    }

    //----------------------------------------------------------------
    // 「天邪鬼の鬼面」の、素ＡＧＩによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_AMANOZYAKUNO_KIMEN)) > 0) {
        lucky += 1 * ROUNDDOWN(SU_AGI / 18) * itemCount;
    }

    //----------------------------------------------------------------
    // 「灰羽のブーツ　黒羽スーツセット」の、精錬による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_HAIHANENO_BOOTS_KUROHANO_SUITS)) > 0) {
        if (n_A_BODY_DEF_PLUS >= 7) {
            lucky += 6 * itemCount;
        }
        if (n_A_BODY_DEF_PLUS >= 9) {
            lucky += 3 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「アンソニの服」の、精錬による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ANSONINO_FUKU)) > 0) {
        let vartmp = 0;
        if (n_A_BODY_DEF_PLUS >= 7) {
            vartmp += 1;
        }
        if (n_A_BODY_DEF_PLUS >= 8) {
            vartmp += 1;
        }
        if (n_A_BODY_DEF_PLUS >= 9) {
            vartmp += 1;
        }
        lucky += vartmp * itemCount;
    }

    //----------------------------------------------------------------
    // 「フェアリークロース」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_FAIRLY_CLOTH)) > 0) {
        let vartmp = 0;
        if (n_A_SHOULDER_DEF_PLUS >= 5) {
            vartmp += 10;
        }
        if (n_A_SHOULDER_DEF_PLUS >= 7) {
            vartmp += 10;
        }
        lucky += vartmp * itemCount;
    }

    //----------------------------------------------------------------
    // 「高級ドラムスーツ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KOKYU_DORAM_SUITS)) > 0) {
        if (n_A_BODY_DEF_PLUS >= 9) {
            lucky += 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「特選ドラムスーツ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TOKUSEN_DORAM_SUITS)) > 0) {
        if (n_A_BODY_DEF_PLUS >= 9) {
            lucky += 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「高級ドラムケープ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KOKYU_DORAM_CAPE)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 9) {
            lucky += 15 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「特選ドラムケープ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TOKUSEN_DORAM_CAPE)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 9) {
            lucky += 20 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「高級ドラムシューズ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KOKYU_DORAM_SHOES)) > 0) {
        if (n_A_SHOES_DEF_PLUS >= 9) {
            lucky += 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「特選ドラムシューズ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TOKUSEN_DORAM_SHOES)) > 0) {
        if (n_A_SHOES_DEF_PLUS >= 9) {
            lucky += 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「栄光の証セット」の、重複判定対応
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KONGOSEKINO_TATE_EIKONO_AKASHI)) > 0) {
        if ((itemCount = EquipNumSearch(ITEM_SET_ID_KONGOSEKINO_TATE_EIKONO_AKASHI_S1)) > 0) {
            lucky -= 10;
        }
    }

    //----------------------------------------------------------------
    // 「降霊術士の手鏡　外套セット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOREZYUTSUSHINO_TEKAGAMI_GAITO)) > 0) {
        if (n_A_SHIELD_DEF_PLUS >= 8) {
            lucky += 20 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「身かわしのケープ」の、スキル習得による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_MIKAWASHINO_CAPE)) > 0) {
        lucky += 5 * LearnedSkillSearch(SKILL_ID_SECRAMENT) * itemCount;
    }

    //----------------------------------------------------------------
    // 「ゾディアック　処女宮のメイル」セットの、職業による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_SHOZYOKYUNO_MANT)) {
        if (IsSameJobClass(JOB_ID_ARCBISHOP)) {
            lucky += 3 * n_A_SHOULDER_DEF_PLUS;
        }
    }

	/** 二次職支援設定「口笛」の効果 */
	if (g_confDataNizi[CCharaConfNizi.CONF_ID_WHISTLE] > 0) {
		lucky += 15 + g_confDataNizi[CCharaConfNizi.CONF_ID_WHISTLE];
	}

    //----------------------------------------------------------------
    // 「三次職支援　警戒」の効果
    //----------------------------------------------------------------
    switch (g_confDataSanzi[CCharaConfSanzi.CONF_ID_KEIKAI]) {
        case 1:
            lucky += 5;
            break;
        case 2:
            lucky += 10;
            break;
        case 3:
            lucky += 15;
            break;
        case 4:
            lucky += 25;
            break;
        case 5:
            lucky += 50;
            break;
    }

    //----------------------------------------------------------------
    // 「サモナー　大地の魂効果(ｲﾇﾊｯｶｼｬﾜｰ使用後の完全回避＋)」の、効果
    //----------------------------------------------------------------
    if (Math.max(LearnedSkillSearch(SKILL_ID_DAICHINO_TAMASHI), UsedSkillSearch(SKILL_ID_DAICHINO_TAMASHI)) > 0) {
        if (UsedSkillSearch(SKILL_ID_DAICHINO_TAMASHI_KOKA_INUHAKKA_SHOWER) > 0) {
            lucky += 1 * ROUNDDOWN(n_A_BaseLV / 7);
        }
    }

    //----------------------------------------------------------------
    // 「性能カスタマイズ」の、効果
    //----------------------------------------------------------------
    const confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_LUCKY_PLUS);
    if (confval != 0) {
        lucky += confval;
    }

    lucky = Math.round(lucky * 10) / 10;
    if (lucky < 0) {
        lucky = 0;
    }
    if (_APPLY_UPDATE_LV200) {
        g_lucky_over = Math.max(0, Math.round(lucky * 10 - 950) / 10);
        lucky = Math.min(95, lucky);
    }

    return lucky;
}

/**
 * 公式サイトで「固定詠唱時間 - ◯%」と表記される固定詠唱時間の減少効果を取得する
 * TODO:
 * グローバル変数の n_A_Kotei_Cast_Keigen に格納した値を返しているので改善の余地がある
 * これを直接参照している他のファイルの定義を書き換えたうえでローカル変数を返すようにしたほうが良い
 * @returns {Number}
 */
function getFixedCastTimeReductionRate() {
    n_A_Kotei_Cast_Keigen = 0;
    // チェック用変数初期化
    // （固定詠唱短縮効果は、加算等はされず、最大の効果のみが適用される）
    // （なので、ITEM_SP 定義を検索してやる方法では、共通化ができない）
    let chkary = [0];
    let bufLv = 0;
    let itemCount = 0;
    let cardCountBody = 0;
    let cardCountShield = 0;
    let cardCountShoulder = 0;
    let cardCountShoes = 0;
    let cardCountAccessary1 = 0;
    let cardCountAccessary2 = 0;

    // ペット効果用
    const petId = n_A_PassSkill8[0];
    // 「暴食のオルレアンの制服」の精錬値9以上の効果
    if (EquipNumSearch(ITEM_ID_GLUTTONOUS_ORLEANS_UNIFORM)) {
        if (n_A_BODY_DEF_PLUS >= 9) {
            chkary.push(70);
        }
    }
    if (EquipNumSearch(ITEM_ID_MAGIA_VITA)) {
        // マギアヴィタを装備している時
        if (n_A_SHOES_DEF_PLUS === 10) {
            // 精錬値が10の時
            chkary.push(80);
        }
    }
    //----------------------------------------------------------------
    // 「ウォーロック　ラディウス」の効果
    //----------------------------------------------------------------
    if ((bufLv = Math.max(LearnedSkillSearch(SKILL_ID_RADIUS), UsedSkillSearch(SKILL_ID_RADIUS))) > 0) {
        switch (n_A_ActiveSkill) {
            case SKILL_ID_SOUL_EXPANSION:
            case SKILL_ID_FROST_MISTY:
            case SKILL_ID_JACK_FROST:
            case SKILL_ID_DRAIN_LIFE:
            case SKILL_ID_CRYMSON_ROCK:
            case SKILL_ID_HELL_INFERNO:
            case SKILL_ID_COMMET:
            case SKILL_ID_CHAIN_LIGHTNING:
            case SKILL_ID_EARTH_STRAIN:
            case SKILL_ID_TETRA_BOLTEX:
            case SKILL_ID_SUMMON_FIRE_BALL:
            case SKILL_ID_SUMMON_WATER_BALL:
            case SKILL_ID_SUMMON_LIGHTNING_BALL:
            case SKILL_ID_SUMMON_STONE:
                chkary.push(5 + 5 * bufLv);
        }
    }
    // ラフィネスタッフの精錬値による効果
    if (EquipNumSearchMIG(ITEM_ID_LAFINE_STUFF)) {
        chkary.push(n_A_Weapon_ATKplus);
    }
    //----------------------------------------------------------------
    // 「三次職支援　サクラメント」の効果
    //----------------------------------------------------------------
    if ((bufLv = g_confDataSanzi[CCharaConfSanzi.CONF_ID_SECRAMENT]) > 0) {
        // 特定の戦闘エリアでの補正
        switch (n_B_TAISEI[MOB_CONF_PLAYER_ID_SENTO_AREA]) {
            case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_COLOSSEUM:
                chkary.push(65 + 5 * bufLv);
                break;
            default:
                chkary.push(45 + 5 * bufLv);
                break;
        }
    }

	/** 三次職支援設定「スイングダンス」の固定詠唱時間 - 効果 */
	if ((bufLv = g_confDataSanzi[CCharaConfSanzi.CONF_ID_SWING_DANCE]) > 0) {
		// 固定詠唱はレッスンの影響を受けないと仮定した計算
		chkary.push(45 + 5 * bufLv);
	}

	/** 三次職支援設定「ダンスウィズウォーグ」の固定詠唱時間 - 効果 */
	if ((bufLv = g_confDataSanzi[CCharaConfSanzi.CONF_ID_DANCE_WITH_WUG]) > 0) {
		chkary.push(45 + 5 * bufLv);
	}

    if (CardNumSearch(CARD_ID_ENCHANT_MATK_1_CAST_FIXED_1) || 
        CardNumSearch(CARD_ID_ENCHANT_MATK_2_CAST_FIXED_1) || 
        CardNumSearch(CARD_ID_ENCHANT_MATK_3_CAST_FIXED_1) || 
        CardNumSearch(CARD_ID_ENCHANT_MATK_2_CAST_FIXED_1_BUG)) {
        chkary.push(1);
    }

    if (CardNumSearch(CARD_ID_NYDHOGNO_KAGE) > 0) {
        // ハイウィザード系のみ
        if (GetHigherJobSeriesID(n_A_JOB) == JOB_SERIES_ID_WIZARD) {
            if (n_A_JOB != JOB_ID_WIZARD) {
                chkary.push(50);
            }
        }
    }

    if (TimeItemNumSearch(TIME_ITEM_ID_RATATOSK_CAD)) {
        chkary.push(50);
    }

    if (EquipNumSearch(ITEM_ID_ITOSHISA_NO_KAKERA_AND_HEART_WING_HAIRBAND)) {
        chkary.push(10);
    }

    if (EquipNumSearch(ITEM_ID_LUXURY_MINI_CROWN)) {
        chkary.push(3);
    }

    //----------------------------------------------------------------
    // 「影狼・朧　十六夜」の効果
    //----------------------------------------------------------------
    if (UsedSkillSearch(SKILL_ID_IZAYOI)) {
        chkary.push(100);
    }

    if (CardNumSearch(CARD_ID_FENRIR)) {
        chkary.push(70);
    }

    if (n_A_PassSkill7[51]) {
        chkary.push(50);
    }

    if (EquipNumSearch(ITEM_ID_RIOTCHIP)) {
        chkary.push(50);
    }

    //----------------------------------------------------------------
    // 「古びた魔力石の帽子」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_FURUBITA_MARYOKUSEKI)) {
        chkary.push(7 * n_A_HEAD_DEF_PLUS);
    }

    //----------------------------------------------------------------
    // 「サラのローブセット」の、＋７精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_HEAL_PIERCED_TELEPORT_PIERCED_SARANO_ROBE)) {
        if (n_A_BODY_DEF_PLUS >= 7) {
            chkary.push(50);
        }
    }

    //----------------------------------------------------------------
    // 「覚醒ローブセット」の、効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_HEAL_PIERCED_TELEPORT_PIERCED_KAKUSEI_ROBE)) {
        chkary.push(50);
    }

    //----------------------------------------------------------------
    // 「サバイバルオーブ　マントセット」の、装備効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_SURVIVAL_ORB_SURVIVAL_MANT)) {
        chkary.push(50);
    }

    //----------------------------------------------------------------
    // 「T_W_O カード」の、装備効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_T_W_O)) {
        chkary.push(50);
    }

    //----------------------------------------------------------------
    // 「セリーヌのブローチ　セリーヌのリボンセット」の、装備効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_CELINENO_BROACH_CELINENO_RIBBON)) {
        chkary.push(50);
    }

    //----------------------------------------------------------------
    // 「セリーヌのブローチ　瑞々しいバラセット」の、装備効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_CELINENO_BROACH_MIZUMIZUSHI_BARA)) {
        chkary.push(50);
    }

    //----------------------------------------------------------------
    // 「獄エンチャント」の、職業限定の効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_GOKU)) {
        if (IsSameJobClass(JOB_ID_SHADOWCHASER)) {
            chkary.push(50);
        }
    }

    //----------------------------------------------------------------
    // 「悪魔崇拝者の靴　堕天司祭の闇光外套セット」の、装備効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_AKUMASUHAISHANO_KUTSU_DATENSHISAINO_ANKOGAITO)) {
        chkary.push(50);
    }

    //----------------------------------------------------------------
    // 「炎雷魔女の大杖」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_ENRAIMAZYONO_OTSUE) > 0) {
        if (n_A_Weapon_ATKplus >= 10) {
            chkary.push(70);
        }
    }

    //----------------------------------------------------------------
    // 「エンチャント　固定詠唱-50%」の、装備効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_ENCHANT_KOTEIEISHO_50)) {
        chkary.push(50);
    }

    //----------------------------------------------------------------
    // 「エンチャント　固定詠唱-70%」の、装備効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_ENCHANT_KOTEIEISHO_70)) {
        chkary.push(70);
    }

    //----------------------------------------------------------------
    // 「抹消者のローブ」の、効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_MASSHOSHANO_ROBE)) {
        chkary.push(50);
    }

    //----------------------------------------------------------------
    // 「神喰らいの龍槍」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_KAMIKURAINO_RYUSO) > 0) {
        if (n_A_Weapon_ATKplus >= 10) {
            chkary.push(70);
        }
    }

    //----------------------------------------------------------------
    // 「抱きつきシャムネコ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_DAKITSUKI_SYAMNEKO)) > 0) {
        chkary.push(7 * n_A_HEAD_DEF_PLUS * itemCount);
    }

    //----------------------------------------------------------------
    // 「エンチャント　Z-CastFixed」の、装備効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_ENCHANT_Z_CASTFIXED)) {
        chkary.push(50);
    }

    //----------------------------------------------------------------
    // 「アクエリアスダイアデム　アクエリアスセット」の、効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_AQUARIUS_DIADEM_AQUARIUS) > 0) {
        chkary.push(50);
    }

    //----------------------------------------------------------------
    // 「古びた月食の装飾」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_FURUBITA_GESSHOKUNO_SOUSHOKU) > 0) {
        if (n_A_BODY_DEF_PLUS >= 9) {
            chkary.push(50);
        }
    }

    //----------------------------------------------------------------
    // 「月食の装飾」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_GESSHOKUNO_SOUSHOKU) > 0) {
        if (n_A_BODY_DEF_PLUS >= 9) {
            chkary.push(70);
        } else if (n_A_BODY_DEF_PLUS >= 7) {
            chkary.push(50);
        }
    }

    //----------------------------------------------------------------
    // 「イリュージョンアイズ」の、スキル習得による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_ILLUSION_EYES) > 0) {
        if (LearnedSkillSearch(SKILL_ID_HOWLING_OF_MANDRAGORA) >= 5) {
            chkary.push(70);
        }
    }

    //----------------------------------------------------------------
    // 「精霊王の宝冠」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SEREONO_HOKAN)) > 0) {
        chkary.push(7 * n_A_HEAD_DEF_PLUS * itemCount);
    }

    //----------------------------------------------------------------
    // 「グラデニェッツ」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_GRADENIETZ) > 0) {
        if (n_A_Weapon_ATKplus >= 10) {
            chkary.push(70);
        }
    }

    //----------------------------------------------------------------
    // 「もこもこお魚シューズ」の、スキル習得による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_MOKOMOKO_OSAKANA_SHOES) > 0) {
        if (LearnedSkillSearch(SKILL_ID_GROOMING) >= 5) {
            chkary.push(50);
        }
    }

    //----------------------------------------------------------------
    // 「パイシーズクラウン」の、装備効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_PISCES_CROWN) > 0) {
        chkary.push(50);
    }

    //----------------------------------------------------------------
    // 「天秤宮のシューズ」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_TENBINKYUNO_SHOES) > 0) {
        if (n_A_SHOES_DEF_PLUS >= 8) {
            if (IsSameJobClass(JOB_ID_RUNEKNIGHT)) {
                chkary.push(50);
            }
        }
    }

    //----------------------------------------------------------------
    // 「太極の耳飾り(黄)」の、スキル習得による効果
    //----------------------------------------------------------------
    if (EquipNumSearchMIG(ITEM_ID_TAIKYOKUNO_MIMIKAZARI_KIIRO) > 0) {
        if (LearnedSkillSearch(SKILL_ID_TSUKINO_HIKARI) >= 5) {
            chkary.push(70);
        }
    }

    //----------------------------------------------------------------
    // 「エンチャント　Q-CastFixed」の、精錬による効果
    //----------------------------------------------------------------
    cardCountBody = CardNumSearch(CARD_ID_ENCHANT_Q_CAST_FIXED, CARD_REGION_ID_BODY_ANY);
    cardCountShield = CardNumSearch(CARD_ID_ENCHANT_Q_CAST_FIXED, CARD_REGION_ID_SHIELD_ANY);
    cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_Q_CAST_FIXED, CARD_REGION_ID_SHOULDER_ANY);
    cardCountShoes = CardNumSearch(CARD_ID_ENCHANT_Q_CAST_FIXED, CARD_REGION_ID_SHOES_ANY);
    cardCountAccessary1 = CardNumSearch(CARD_ID_ENCHANT_Q_CAST_FIXED, CARD_REGION_ID_ACCESSARY_1_ANY);
    cardCountAccessary2 = CardNumSearch(CARD_ID_ENCHANT_Q_CAST_FIXED, CARD_REGION_ID_ACCESSARY_2_ANY);

    if (cardCountBody > 0) {
        if (n_A_BODY_DEF_PLUS >= 8) {
            chkary.push(60);
        } else if (n_A_BODY_DEF_PLUS >= 6) {
            chkary.push(40);
        } else {
            chkary.push(20);
        }
    }

    if (cardCountShield > 0) {
        if (n_A_SHIELD_DEF_PLUS >= 8) {
            chkary.push(60);
        } else if (n_A_SHIELD_DEF_PLUS >= 6) {
            chkary.push(40);
        } else {
            chkary.push(20);
        }
    }

    if (cardCountShoulder > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 8) {
            chkary.push(60);
        } else if (n_A_SHOULDER_DEF_PLUS >= 6) {
            chkary.push(40);
        } else {
            chkary.push(20);
        }
    }

    if (cardCountShoes > 0) {
        if (n_A_SHOES_DEF_PLUS >= 8) {
            chkary.push(60);
        } else if (n_A_SHOES_DEF_PLUS >= 6) {
            chkary.push(40);
        } else {
            chkary.push(20);
        }
    }

    if (cardCountAccessary1 > 0) {
        // 精錬不可なので 20% 一択
        chkary.push(20);
    }

    if (cardCountAccessary2 > 0) {
        // 精錬不可なので 20% 一択
        chkary.push(20);
    }

    //----------------------------------------------------------------
    // 「リングオブヴィーナス」の、素ＤＥＸによる効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_RING_OF_VENUS, EQUIP_REGION_ID_ACCESSARY_1) > 0) {
        if (SU_DEX >= 125) {
            chkary.push(70);
        }
    }

    //----------------------------------------------------------------
    // 「森羅万象の指輪　真理の解放セット」の、効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_SHINRA_BANSHONO_YUBIWA_SHINRINO_KAIHO) > 0) {
        chkary.push(70);
    }

    //----------------------------------------------------------------
    // 「新暦　暴走した魔力セット」の、効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_SHINREKI_BOSOSHITA_MARYOKU) > 0) {
        chkary.push(70);
    }

    //----------------------------------------------------------------
    // 「レインボースター」の、スキル習得による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_RAINBOW_STAR) > 0) {
        if (LearnedSkillSearch(SKILL_ID_UNLIMIT) >= 5) {
            chkary.push(70);
        }
    }

    //----------------------------------------------------------------
    // 「アルカナ　月のカードセット」の、効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_ARCANA_ARCANA_MOON_REVERSE) > 0) {
        chkary.push(50);
    }

    //----------------------------------------------------------------
    // 「デウス・エクス・マキナ」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_DEUS_EX_MACHINA) > 0) {
        if (n_A_Weapon_ATKplus >= 10) {
            chkary.push(70);
        }
    }

    //----------------------------------------------------------------
    // 「ゲートオブネザーワールド」の、精錬による効果
    //----------------------------------------------------------------
    itemCount = Math.max(
        EquipNumSearch(ITEM_ID_GATE_OF_NEZAR_WORLD),
        EquipNumSearch(ITEM_ID_GATE_OF_NEZAR_WORLD_T1)
    );
    if (itemCount > 0) {
        if (n_A_HEAD_DEF_PLUS >= 9) {
            chkary.push(70);
        } else if (n_A_HEAD_DEF_PLUS >= 7) {
            chkary.push(50);
        }
    }

    //----------------------------------------------------------------
    // 「ルーングリーブ」の、スキル習得による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_RUNE_GREEVE) > 0) {
        if (LearnedSkillSearch(SKILL_ID_PHANTOM_SLAST) >= 5) {
            chkary.push(50);
        }
    }

    //----------------------------------------------------------------
    // 「ポルックスシューズ」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_POLLUX_SHOES) > 0) {
        if (n_A_SHOES_DEF_PLUS >= 8) {
            if (IsSameJobClass(JOB_ID_STAR_EMPEROR)) {
                chkary.push(60);
            }
        }
    }

    //----------------------------------------------------------------
    // 「プロキオンシューズ」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_PROCYON_SHOES) > 0) {
        if (n_A_SHOES_DEF_PLUS >= 8) {
            if (IsSameJobClass(JOB_ID_SOUL_REAPER)) {
                chkary.push(60);
            }
        }
    }

    //----------------------------------------------------------------
    // 「変貌のカーリッツバーグカード」の、精錬による強化
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_HENBONO_KHALITZBURG)) {
        chkary.push(50);
    }
    if (CardNumSearch(CARD_ID_HENBONO_KHALITZBURG, CARD_REGION_ID_HEAD_TOP)) {
        if (n_A_HEAD_DEF_PLUS >= 9) {
            chkary.push(60);
        }
    }

    //----------------------------------------------------------------
    // 「ぶくぶくハンティングゴーグル」の、スキル習得による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_BUKUBUKU_HUNTING_GOOGLE) > 0) {
        if (LearnedSkillSearch(SKILL_ID_GROOMING) >= 5) {
            chkary.push(70);
        }
    }

    //----------------------------------------------------------------
    // 「英雄の凱歌　ニーズヘッグの影カードセット」の、職業による強化
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_EIYUNO_GAIKA_NYDHOGNO_KAGE) > 0) {
        // ハイウィザード系のみ
        if (GetHigherJobSeriesID(n_A_JOB) == JOB_SERIES_ID_WIZARD) {
            if (n_A_JOB != JOB_ID_WIZARD) {
                chkary.push(70);
            }
        }
    }

    //----------------------------------------------------------------
    // 「英雄の凱歌　フェンリルカードセット」の、職業による強化
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_EIYUNO_GAIKA_FENRIR) > 0) {
        chkary.push(80);
    }

    //----------------------------------------------------------------
    // 「黒翼の使徒」エンチャントの、時限効果による強化
    //----------------------------------------------------------------
    if (TimeItemNumSearch(TIME_ITEM_ID_KOKUYOKUNO_SHITO)) {
        chkary.push(100);
    }

    //----------------------------------------------------------------
    // 「知識の探求者　T_W_Oカードセット」の、効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_CHISHIKINO_TANKYUSHA_T_W_O) > 0) {
        chkary.push(70);
    }

    //----------------------------------------------------------------
    // 「ミステリーウィング」の、素ステータスによる効果
    //----------------------------------------------------------------
    if (EquipNumSearchMIG(ITEM_ID_MYSTERY_WING) > 0) {
        if (GetTotalPureBasicStatus() >= 500) {
            chkary.push(70);
        }
    }

    //----------------------------------------------------------------
    // 「エンチャント　ウルフオーブ(固定詠唱時間-50%)」の、装備効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_ENCHANT_WOLF_ORB_CAST_FIXED_50)) {
        chkary.push(50);
    }

    /**
     * 「セレスティアルダイアデム」の「固定詠唱時間-50%」効果
     */
    if (EquipNumSearch(ITEM_ID_CELESTIAL_DIADEM) > 0) {
        chkary.push(50);
    }

    //----------------------------------------------------------------
    // 「ワイルドビースト　エンチャント　ウルフオーブ(固定詠唱時間-50%)セット」の、装備効果
    //----------------------------------------------------------------
    if (EquipNumSearchMIG(ITEM_SET_ID_WILD_BEAST_WOLF_ORB_CAST_FIXED_50)) {
        chkary.push(70);
    }

    //----------------------------------------------------------------
    // 「未知なる魔力のブーツ」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_MICHINARU_MARYOKUNO_BOOTS) > 0) {
        if (n_A_SHOES_DEF_PLUS >= 7) {
            chkary.push(70);
        }
    }

    //----------------------------------------------------------------
    // 「メンタルコンデンサー　マジックプロテクターローブセット」の効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_MENTAL_CONDENSER_MAGIC_PROTECTOR_ROBE) > 0) {
        chkary.push(70);
    }

    //----------------------------------------------------------------
    // 「雪花防具（魔法）セット」の効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_SETSUKA_ARMORS_MAGICAL) > 0) {
        chkary.push(70);
    }

    //----------------------------------------------------------------
    // 「セトの恩寵＋異境の統轄者セット」の、装備効果
    //----------------------------------------------------------------
    if (EquipNumSearchMIG(ITEM_SET_ID_SETONO_ONCHO_IKYONO_TOKATSUSHA)) {
        chkary.push(70);
    }

    //----------------------------------------------------------------
    // 「ミストレスの卵」の、装備効果
    //----------------------------------------------------------------
    if (petId === PET_ID_MISTRESS) {
        if (n_A_BaseLV >= 100) {
            chkary.push(70);
        }
    }

    //----------------------------------------------------------------
    // 「秘密の羽・レイジー」カードの、装備効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_HIMITSU_NO_HANE_LEIZI)) {
        chkary.push(70);
    }

    //----------------------------------------------------------------
    // 「グラキエースアラネア」の、装備効果
    //----------------------------------------------------------------
    if (EquipNumSearchMIG(ITEM_ID_GLACIES_ARANEA)) {
        if (n_A_SHIELD_DEF_PLUS >= 7) {
            chkary.push(70);
        }
    }

    //----------------------------------------------------------------
    // 「性能カスタマイズ」の、効果
    //----------------------------------------------------------------
    const confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_CAST_DOWN_FIXED);
    if (confval != 0) {
        chkary.push(confval);
    }

    // TODO: データ移行過渡処理
    // 計算したSP効果を、移行前のデータ形式に変換して、加算する
    if (IsEnableMigrationBlockTransit()) {
        let spTag = null;
        spTag = new CMigEquipableSpTag()
            .SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_FIXED_TIME)
            .SetAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_VALUE_UNIT, MIG_VALUE_UNIT_ID_PERCENT);

        // 反転が必要なので注意
        chkary.push((0 - g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_MIN)));
        chkary.push((0 - g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_MIN)));
    }

    // 最大値のみ有効
    n_A_Kotei_Cast_Keigen = Math.max(...chkary);

    /**
     * プレイヤー状態異常「氷結」の効果
     */
    if (g_confDataDebuff[CCharaConfDebuff.CONF_ID_FREEZING]) {
        n_A_Kotei_Cast_Keigen -= 50;
    }

    return n_A_Kotei_Cast_Keigen;
}

/**
 * キャラクタの基礎値に加えて
 * 公式サイトで「Flee - ◯」と表記されるFLEEの増加効果を適用した
 * 最終的なFLEEの値を取得する
 * @returns {Number} 
 */
function getFlee() {
    let flee = 0;

    //----------------------------------------------------------------
    // ランダムエンチャント効果
    //----------------------------------------------------------------
    for (idx = ITEM_SP_FLEE_PLUS; idx <= ITEM_SP_FLEE_PLUS; idx++) {
        n_tok[idx] += GetRndOptTotalValue(idx, null, false);
    }

    // TODO: 四次対応
    for (idx = ITEM_SP_FLEE_PLUS; idx <= ITEM_SP_FLEE_PLUS; idx++) {
        n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
    }

    flee += n_tok[ITEM_SP_FLEE_PLUS];

    if (GetLowerJobSeriesID(n_A_JOB) == 2 && CardNumSearch(CARD_ID_SAMAYOU_MONO)) {
        flee += 20;
    }
    if (n_A_SHOULDER_DEF_PLUS >= 9 && CardNumSearch(CARD_ID_KUMIHO)) {
        flee += 20;
    }
    if (n_A_SHOULDER_DEF_PLUS <= 4 && CardNumSearch(CARD_ID_KAVAC_ICARUS)) {
        flee += 10;
    }
    if (n_A_SHOULDER_DEF_PLUS >= 9 && CardNumSearch(CARD_ID_ORC_BABY)) {
        flee += 5;
    }
    if (SU_STR >= 90 && EquipNumSearch(ITEM_ID_TOZOKUNO_YUBIWA)) {
        flee += 10 * EquipNumSearch(ITEM_ID_TOZOKUNO_YUBIWA);
    }
    if (EquipNumSearch(ITEM_ID_SAMAYOUMONO_NO_KASA)) {
        if (n_A_HEAD_DEF_PLUS >= 5) {
            flee += 5;
        }
        if (n_A_HEAD_DEF_PLUS >= 7) {
            flee += 2;
        }
    }
    if (SU_AGI >= 120 && EquipNumSearch(ITEM_ID_SHADOW_CROWN)) {
        flee += 3;
    }
    if (SU_INT >= 120 && EquipNumSearch(ITEM_ID_KAZE_NO_SASAYAKI)) {
        flee += 3;
    }
    if (EquipNumSearch(ITEM_ID_SHUZINNO_FUKU)) {
        flee += n_A_BODY_DEF_PLUS;
    }

    //----------------------------------------------------------------
    // 「二次職支援　属性場　バイオレントゲイル」の、効果
    //----------------------------------------------------------------
    if (g_confDataNizi[CCharaConfNizi.CONF_ID_ZOKUSEIBA_SHURUI] == CCharaConfNizi.CONF_ID_ZOKUSEIBA_SHURUI_VIOLENT_GALE &&
        g_confDataNizi[CCharaConfNizi.CONF_ID_ZOKUSEIBA_LEVEL] >= 1) {
        flee += g_confDataNizi[CCharaConfNizi.CONF_ID_ZOKUSEIBA_LEVEL] * 3;
    }

    if (n_A_Equip[EQUIP_REGION_ID_ARMS] == ITEM_ID_BLOODY_ROAR) {
        flee -= (n_A_BaseLV + SU_AGI);
    }
    if (n_A_BaseLV <= 79 && EquipNumSearch(ITEM_ID_TOY_SHIELD)) {
        flee += 5;
    }
    if (SU_AGI >= 80 && EquipNumSearch(ITEM_ID_SENTEHISSHONO_OMAMORI)) {
        let wx = EquipNumSearch(ITEM_ID_SENTEHISSHONO_OMAMORI);
        flee += 4 * wx;
        if (SU_AGI >= 100) {
            flee += 1 * wx;
        }
    }
    if (n_A_SHOULDER_DEF_PLUS >= 6 && EquipNumSearch(ITEM_ID_FUROSHIKI_MANT)) {
        flee += 2;
        if (n_A_SHOULDER_DEF_PLUS >= 8) {
            flee += 3;
        }
    }
    if (n_A_SHOULDER_DEF_PLUS >= 1 && EquipNumSearch(ITEM_ID_NABUNO_HOOD)) {
        flee += n_A_SHOULDER_DEF_PLUS * 2;
    }
    if (n_A_BODY_DEF_PLUS >= 1 && EquipNumSearch(ITEM_ID_SHIRAHANO_SUIT)) {
        flee += n_A_BODY_DEF_PLUS;
    }
    if (EquipNumSearch(ITEM_ID_SHUNBINNO_GLOVE)) {
        flee += ROUNDDOWN(SU_AGI / 10) * EquipNumSearch(ITEM_ID_SHUNBINNO_GLOVE);
    }
    if (n_A_SHOULDER_DEF_PLUS >= 9 && EquipNumSearch(ITEM_SET_ID_HIGHLEVEL_ORCBABY)) {
        flee += 5;
    }
    if (SU_VIT >= 110) {
        if (CardNumSearch(CARD_ID_ARFOSIO_BASIL_MVP)) {
            flee += 20;
        }
        if (CardNumSearch(CARD_ID_TRENTINI_MVP)) {
            flee += 20;
        }
    }
    if (EquipNumSearch(ITEM_ID_EXELION_WING)) {
        flee += 2 * n_A_SHOULDER_DEF_PLUS;
    }
    if (n_A_BODY_DEF_PLUS >= 7 && EquipNumSearch(ITEM_SET_ID_ULTIMATE_MODE_CHANGER_NABUNO_CLOTH)) {
        flee += 15;
    }
    if (EquipNumSearch(ITEM_ID_PUMPKIN_HAT_2010)) {
        if (EquipNumSearch(ITEM_ID_OPERA_MASK)) {
            flee += 20;
        }
    }

    //----------------------------------------------------------------
    // 「英雄マント」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_EIYU_MANT)) {
        flee += 3 * ROUNDDOWN(n_A_SHOULDER_DEF_PLUS / 3);
        if (n_A_SHOULDER_DEF_PLUS >= 10) {
            flee += 20;
        }
    }

    //----------------------------------------------------------------
    // 「霧の妖刀」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_KIRINO_YOTO, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_KIRINO_YOTO, EQUIP_REGION_ID_ARMS_LEFT);
    if (itemCountRight > 0) {
        if (n_A_Weapon_ATKplus >= 7) {
            flee += 20;
        }
        if (n_A_Weapon_ATKplus >= 9) {
            flee += 20;
        }
    }
    if (itemCountLeft > 0) {
        if (n_A_Weapon2_ATKplus >= 7) {
            flee += 20;
        }
        if (n_A_Weapon2_ATKplus >= 9) {
            flee += 20;
        }
    }

    //----------------------------------------------------------------
    // 「A-FLEE　ライオットチップセット」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_RIOTCHIP_A_FLEE)) {
        flee += 5 * ROUNDDOWN(n_A_HEAD_DEF_PLUS / 3);
    }

    //----------------------------------------------------------------
    // 「皇竜の天翼」の、職業による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_KORYUNO_TENYOKU)) {
        if (GetLowerJobSeriesID(n_A_JOB) == JOB_SERIES_ID_THIEF) {
            flee += 10;
        }
    }

    //----------------------------------------------------------------
    // 「セイヴザキング」の、騎兵修練【未習得】時における、「スピアクイッケン」習得による効果
    //----------------------------------------------------------------
    if (LearnedSkillSearch(SKILL_ID_KIHE_SHUREN) == 0) {
        if (EquipNumSearch(ITEM_ID_SAVE_THE_KING)) {
            flee += 2 * LearnedSkillSearch(SKILL_ID_SPEAR_QUICKEN);
        }
    }

    //----------------------------------------------------------------
    // 「陣羽織」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_ZINBAORI) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 7) {
            flee += 10;
        }
        if (n_A_SHOULDER_DEF_PLUS >= 9) {
            flee += 10;
        }
    }

    //----------------------------------------------------------------
    // 「物影」の、スキル習得による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_MONOKAGE)) > 0) {
        flee += 5 * LearnedSkillSearch(SKILL_ID_KASUMIGIRI) * itemCount;
    }

    //----------------------------------------------------------------
    // 「自警団の弓」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ZIKEIDANNO_YUMI)) > 0) {
        if (n_A_Weapon_ATKplus >= 9) {
            flee += 50 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「用心棒のスカーフ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_YOZINBONO_SCARF)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 7) {
            flee += 20;
        }
        if (n_A_SHOULDER_DEF_PLUS >= 9) {
            flee += 20;
        }
    }

    //----------------------------------------------------------------
    // 「名も無き剣士のブーツ　イグニゼム＝セニア（ＭＶＰ）カードセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_NAMONAKI_KENNSHINO_BOOTS_IGNISEM_CENIA_MVP)) > 0) {
        if (n_A_BaseLV <= 99) {
            flee += 5 * n_A_SHOES_DEF_PLUS * itemCount;
        } else {
            flee += 15 * n_A_SHOES_DEF_PLUS * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ジェネティックエミュール(MVP)カード」の、職業による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_GENETIC_EMUR_MVP)) > 0) {
        if (IsSameJobClass(JOB_ID_GENETIC)) {
            flee += 20 * cardCount;
        }
    }

    //----------------------------------------------------------------
    // 「名誉のニーヴ(回避)」の、精錬による効果
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_KAIHI, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_KAIHI, CARD_REGION_ID_ARMS_LEFT_ANY);
    cardCountHeadTop = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_KAIHI, CARD_REGION_ID_HEAD_TOP_ANY);
    cardCountShield = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_KAIHI, CARD_REGION_ID_SHIELD_ANY);
    cardCountBody = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_KAIHI, CARD_REGION_ID_BODY_ANY);
    cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_KAIHI, CARD_REGION_ID_SHOULDER_ANY);
    cardCountShoes = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_KAIHI, CARD_REGION_ID_SHOES_ANY);
    if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield +
        cardCountBody + cardCountShoulder + cardCountShoes > 0) {

        // 右手武器へのエンチャント
        let vartmp = 0;
        if (n_A_Weapon_ATKplus >= 7) vartmp += 10;
        if (n_A_Weapon_ATKplus >= 9) vartmp += 10;
        flee += vartmp * cardCountRight

        // 左手武器へのエンチャント
        vartmp = 0;
        if (n_A_Weapon2_ATKplus >= 7) vartmp += 10;
        if (n_A_Weapon2_ATKplus >= 9) vartmp += 10;
        flee += vartmp * cardCountLeft

        // 頭防具へのエンチャント
        vartmp = 0;
        if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 10;
        if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 10;
        flee += vartmp * cardCountHeadTop

        // 盾防具へのエンチャント
        vartmp = 0;
        if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 10;
        if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 10;
        flee += vartmp * cardCountShield

        // 体防具へのエンチャント
        vartmp = 0;
        if (n_A_BODY_DEF_PLUS >= 7) vartmp += 10;
        if (n_A_BODY_DEF_PLUS >= 9) vartmp += 10;
        flee += vartmp * cardCountBody

        // 肩防具へのエンチャント
        vartmp = 0;
        if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 10;
        if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 10;
        flee += vartmp * cardCountShoulder

        // 靴防具へのエンチャント
        vartmp = 0;
        if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 10;
        if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 10;
        flee += vartmp * cardCountShoes

        // アクセサリへのエンチャント
        // 精錬できないので処理不要
    }

    //----------------------------------------------------------------
    // 「カプリコーン」の、職業による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_CAPRICORN, CARD_REGION_ID_HEAD_TOP_ANY)) > 0) {
        if (IsSameJobClass(JOB_ID_SHADOWCHASER)) {
            flee += 5 * n_A_HEAD_DEF_PLUS * cardCount;
        }
    }

    //----------------------------------------------------------------
    // 「ヘヴンリーオーダー」の、素ＡＧＩによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_HEAVENLY_ORDER)) > 0) {
        flee += 2 * Math.floor(SU_AGI / 18) * itemCount;
    }

    //----------------------------------------------------------------
    // 「フロンティアブーツ　自警団の弓セット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_FRONTIER_BOOTS_ZIKEDANNO_YUMI)) > 0) {
        if (n_A_SHOES_DEF_PLUS >= 7) {
            if (SU_INT >= 120) {
                flee += 100 * itemCount;
            }
        }
    }

    //----------------------------------------------------------------
    // 「追撃者のシューズ」の、スキル習得による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TSUIGEKISHANO_SHOES)) > 0) {
        flee += 4 * LearnedSkillSearch(SKILL_ID_ESCAPE) * itemCount;
        flee += 4 * LearnedSkillSearch(SKILL_ID_FATAL_MENUS) * itemCount;
        flee += 4 * LearnedSkillSearch(SKILL_ID_FAINT_BOMB) * itemCount;
    }

    //----------------------------------------------------------------
    // 「下水クランプカード」の、素ＩＮＴによる効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_GESUI_CLAMP)) > 0) {
        flee += 3 * Math.floor(SU_INT / 10) * cardCount;
    }

    //----------------------------------------------------------------
    // 「身かわしのケープ」の、スキル習得による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_MIKAWASHINO_CAPE)) > 0) {
        flee += 10 * LearnedSkillSearch(SKILL_ID_SECRAMENT) * itemCount;
    }

    //----------------------------------------------------------------
    // 「辰戌の腕輪」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_TATSUINUNO_UDEWA)) > 0) {
        flee += 10 * LearnedSkillSearch(SKILL_ID_TENKETSU_HAN) * itemCount;
    }

    //----------------------------------------------------------------
    // 「インペリアルメナススーツ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_MENUS_SUIT)) > 0) {
        flee += 5 * LearnedSkillSearch(SKILL_ID_ESCAPE) * itemCount;
    }

    //----------------------------------------------------------------
    // 「グレースメナススーツ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_MENUS_SUIT)) > 0) {
        flee += 10 * LearnedSkillSearch(SKILL_ID_ESCAPE) * itemCount;
    }

    //----------------------------------------------------------------
    // 「剛勇無双の神輿」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_GOYUMUSONO_MIKOSHI)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 8) {
            if (LearnedSkillSearch(SKILL_ID_SHUCHURYOKU_KOZYO) >= 10) {
                flee += 50 * itemCount;
            }
        }
    }

    //----------------------------------------------------------------
    // 「インペリアルレインストームスーツ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_RAINSTORM_SUIT)) > 0) {
        flee += 3 * LearnedSkillSearch(SKILL_ID_ENDLESS_HUMMING_VOICE) * itemCount;
    }

    //----------------------------------------------------------------
    // 「グレースレインストームスーツ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_RAINSTORM_SUIT)) > 0) {
        flee += 10 * LearnedSkillSearch(SKILL_ID_ENDLESS_HUMMING_VOICE) * itemCount;
    }

    //----------------------------------------------------------------
    // 「懐郷のサクラ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KAIKYONO_SAKURA)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_TSUKINO_HIKARI) >= 5) {
            if (LearnedSkillSearch(SKILL_ID_TSUKINO_KAMAE) >= 3) {
                flee += 50 * itemCount;
            }
        }
    }

    //----------------------------------------------------------------
    // 「名も無き剣士のブーツ　封印されたイグニゼム＝セニア（ＭＶＰ）カードセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_NAMONAKI_KENNSHINO_BOOTS_FUINSARETA_IGNISEM_CENIA_MVP)) > 0) {
        if (n_A_BaseLV <= 99) {
            flee += 2 * n_A_SHOES_DEF_PLUS * itemCount;
        } else {
            flee += 5 * n_A_SHOES_DEF_PLUS * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「イージスシステム」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_AEGIS_SYSTEM)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 9) {
            if (LearnedSkillSearch(SKILL_ID_CLOAKING) >= 3) {
                flee += 100 * itemCount;
            }
        }
    }

    //----------------------------------------------------------------
    // 「デスブリンガー」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_DEATH_BRINGER)) > 0) {
        flee += 20 * LearnedSkillSearch(SKILL_ID_CROSS_IMPACT) * itemCount;
    }

    g_ITEM_SP_FLEE_PLUS_value_forCalcData = flee;

    //----------------------------------------------------------------
    // 基礎補正
    //----------------------------------------------------------------
    flee += 100 + n_A_BaseLV + n_A_AGI + Math.floor(n_A_LUK / 5);

	/** 二次職支援設定「口笛」の効果 */
	if ((sklLv = g_confDataNizi[CCharaConfNizi.CONF_ID_WHISTLE]) > 0) {
	    flee += 50 + 5 * sklLv;
	}

    //----------------------------------------------------------------
    // 「三次職支援　グルーミング/のどを鳴らす」の効果
    //----------------------------------------------------------------
    flee += 10 * g_confDataSanzi[CCharaConfSanzi.CONF_ID_GROOMING];

    //----------------------------------------------------------------
    // 「サモナー　生命の力」の、効果
    //----------------------------------------------------------------
    if (Math.max(LearnedSkillSearch(SKILL_ID_SEIMEINO_CHIKARA), UsedSkillSearch(SKILL_ID_SEIMEINO_CHIKARA)) > 0) {
        flee += 50;
    }

    //----------------------------------------------------------------
    // 「シーフ　回避率増加」の、効果
    //----------------------------------------------------------------
    if ([JOB_SERIES_ID_ASSASIN, JOB_SERIES_ID_ROGUE].indexOf(GetHigherJobSeriesID(n_A_JOB)) >= 0) {
        flee += 4 * Math.max(LearnedSkillSearch(SKILL_ID_KAIHIRITSU_ZOKA), UsedSkillSearch(SKILL_ID_KAIHIRITSU_ZOKA));
    } else {
        flee += 3 * Math.max(LearnedSkillSearch(SKILL_ID_KAIHIRITSU_ZOKA), UsedSkillSearch(SKILL_ID_KAIHIRITSU_ZOKA));
    }

    //----------------------------------------------------------------
    // 「ガンスリンガー　アジャストメント」の、効果
    //----------------------------------------------------------------
    if ((sklLv = UsedSkillSearch(SKILL_ID_ADJUSTMENT)) > 0) {
        flee += 30;
    }

    //----------------------------------------------------------------
    // 「ガンスリンガー　ガトリングフィーバー」の、効果
    //----------------------------------------------------------------
    if ((sklLv = UsedSkillSearch(SKILL_ID_GATLING_FEVER)) > 0) {
        if ((n_A_WeaponType == ITEM_KIND_GATLINGGUN) || (n_A_WeaponType == ITEM_KIND_NONE)) {
            flee -= 5 * sklLv;
        }
    }

    //----------------------------------------------------------------
    // 「モンク　見切り」の、効果
    //----------------------------------------------------------------
    if ((sklLv = Math.max(LearnedSkillSearch(SKILL_ID_MIKIRI), UsedSkillSearch(SKILL_ID_MIKIRI))) > 0) {
        flee += Math.floor(1.5 * sklLv);
    }

    //----------------------------------------------------------------
    // 「スナイパー　ウィンドウォーク」の、効果
    //----------------------------------------------------------------
    if ((sklLv = UsedSkillSearch(SKILL_ID_WIND_WALK)) > 0) {
        flee += Math.round(sklLv / 2);
    } else if ((sklLv = g_confDataNizi[CCharaConfNizi.CONF_ID_WIND_WALK]) > 0) {
        flee += Math.round(sklLv / 2);
    }

    //----------------------------------------------------------------
    // 「クルセイダー　スピアクイッケン」の、効果
    //----------------------------------------------------------------
    if ((sklLv = UsedSkillSearch(SKILL_ID_SPEAR_QUICKEN)) > 0) {
        if ((n_A_WeaponType == ITEM_KIND_SPEAR) || (n_A_WeaponType == ITEM_KIND_SPEAR_2HAND)) {
            flee += sklLv * 2;
        }
    }

    //----------------------------------------------------------------
    // 「ソーサラー　精霊サポートスキル　風１Ｄウィンドステップ」の、効果
    //----------------------------------------------------------------
    if ((sklLv = UsedSkillSearch(SKILL_ID_SERE_SUPPORT_SKILL)) == 20) {
        flee += 10;
    }

    //----------------------------------------------------------------
    // 「ソーサラー　精霊サポートスキル　風３Ｄゼファー」の、効果
    //----------------------------------------------------------------
    if ((sklLv = UsedSkillSearch(SKILL_ID_SERE_SUPPORT_SKILL)) == 26) {
        flee += 25;
    }

    //----------------------------------------------------------------
    // 「ソーサラー　精霊サポートスキル　水３Ｄウォーターバリア」の、効果
    //----------------------------------------------------------------
    if ((sklLv = UsedSkillSearch(SKILL_ID_SERE_SUPPORT_SKILL)) == 17) {
        flee -= 30;
    }

    //----------------------------------------------------------------
    // 「ローグ　クローズコンファイン」の、効果
    //----------------------------------------------------------------
    if ((sklLv = UsedSkillSearch(SKILL_ID_CLOSE_CONFINE)) > 0) {
        flee += 10;
    } else if (g_confDataNizi[CCharaConfNizi.CONF_ID_CLOSE_CONFINE] > 0) {
        flee += 10;
    }

    //----------------------------------------------------------------
    // 「拳聖　月の安楽」の、効果
    //----------------------------------------------------------------
    if ((sklLv = UsedSkillSearch(SKILL_ID_TSUKINO_ANRAKU)) > 0) {
        switch (UsedSkillSearch(SKILL_ID_TAIYOTO_TSUKITO_HOSHINO_HI)) {
            case 1: // 今日の日付
                let today = (new Date()).getDate();
                if (today % 2 == 0) break; // 月の日ではない（偶数）
            case 0: // 無条件発動
            case 3: // 月の日
                flee += Math.floor((n_A_BaseLV + n_A_LUK + n_A_DEX) / 10);
        }
    }

    //----------------------------------------------------------------
    // 「ギロチンクロス　ハルシネーションウォーク」の、効果
    //----------------------------------------------------------------
    if ((sklLv = UsedSkillSearch(SKILL_ID_HALLUCINATION_WALK)) > 0) {
        flee += 50 * sklLv;
    }

    if (n_A_PassSkill4[9]) flee += 50;
    if (n_A_PassSkill3[11]) flee -= (20 + 5 * n_A_PassSkill3[11]);

    if (n_A_PassSkill7[1]) flee += 30;
    else if (n_A_PassSkill7[27]) flee += 20;
    else if (n_A_PassSkill7[36]) flee += 10;
    else if (3 <= n_A_PassSkill8[22] && n_A_PassSkill8[22] <= 4) flee += 10;

    if (0 < n_A_PassSkill7[45] && n_A_PassSkill7[45] <= 50) flee += n_A_PassSkill7[45];

    //----------------------------------------------------------------
    // 「性能カスタマイズ」の、効果
    //----------------------------------------------------------------
    confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_FLEE_PLUS);
    if (confval != 0) {
        flee += confval;
    }

    //================================
    // 以下、計算順注意
    //================================

    //----------------------------------------------------------------
    // 「ロードナイト　バーサーク」の、効果（ペナルティ）
    //----------------------------------------------------------------
    if ((sklLv = UsedSkillSearch(SKILL_ID_BERSERK)) > 0) {
        flee /= 2;
    }

    //----------------------------------------------------------------
    // 「Ｓホム　オーバードブースト」の、効果
    //----------------------------------------------------------------
    if ((sklLv = UsedSkillSearch(SKILL_ID_OVERED_BOOST)) > 0) {
        flee = 300 + 40 * sklLv;
    }

    // 囲んでいる敵の数っぽい
    if (n_A_PassSkill8[12] >= 3) {
        var w = n_A_PassSkill8[12] - 2;
        if (w > 10) w = 10;
        flee -= Math.floor(flee * w * 10 / 100);
    }

	/**
	 * プレイヤー状態異常「メランコリー」の効果
	 */
	if (g_confDataDebuff[CCharaConfDebuff.CONF_ID_GLOOMYDAY] > 0) {
		flee -= (20 + 30 * g_confDataDebuff[CCharaConfDebuff.CONF_ID_GLOOMYDAY]);
	}

	/**
	 * プレイヤー状態異常「狂乱」の効果（マイナスを許容）
	 */
	if (g_confDataDebuff[CCharaConfDebuff.CONF_ID_SATURDAY_NIGHT_FEVER] > 0) {
		flee -= (20 + 30 * g_confDataDebuff[CCharaConfDebuff.CONF_ID_SATURDAY_NIGHT_FEVER]);
	}

	/**
	 * プレイヤー状態異常「暗黒」の効果（固定値ではなく割合減少）
	 */
	if (g_confDataDebuff[CCharaConfDebuff.CONF_ID_DARKNESS] > 0) {
		flee = Math.floor(flee * 0.75);
	}

    //----------------------------------------------------------------
    // 計算した結果をキャラクターデータに保存
    //----------------------------------------------------------------
    return Math.max(0, flee);
}

/**
 * 公式サイトで「」と表記される状態異常耐性の増加効果を適用する
 * グローバル変数の n_tok[ITEM_SP_RESIST_STATE_XXX] に直接作用するので戻り値はない
 */
function ApplyResistBadStatus() {
    let sklLv = 0;
    if (EquipNumSearch(534) || EquipNumSearch(1646) || EquipNumSearch(1717)) {
        let wSPVS = GetLowerJobSeriesID(n_A_JOB);
        if (wSPVS == 1 || wSPVS == 2 || wSPVS == 6) n_tok[ITEM_SP_RESIST_STATE_STUN] += 50;
        if (wSPVS == 3 || wSPVS == 4 || wSPVS == 5) n_tok[ITEM_SP_RESIST_STATE_SILENCE] += 50;
    }
    if (EquipNumSearch(828)) {
        n_tok[ITEM_SP_RESIST_STATE_STUN] += 2 * n_A_HEAD_DEF_PLUS;
        n_tok[ITEM_SP_RESIST_STATE_FROZEN] += 2 * n_A_HEAD_DEF_PLUS;
        n_tok[ITEM_SP_RESIST_STATE_STONE] += 2 * n_A_HEAD_DEF_PLUS;
    }

    //----------------------------------------------------------------
    // 「マッドハッター」の、職業ごとの効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_MAD_HATTER)) {
        let stateid = 0;
        switch (GetLowerJobSeriesID(n_A_JOB)) {
            case JOB_SERIES_ID_NOVICE:
                stateid = ITEM_SP_RESIST_STATE_FROZEN;
                break;
            case JOB_SERIES_ID_SWORDMAN:
                stateid = ITEM_SP_RESIST_STATE_CURSED;
                break;
            case JOB_SERIES_ID_THIEF:
                stateid = ITEM_SP_RESIST_STATE_BLIND;
                break;
            case JOB_SERIES_ID_ACOLYTE:
                stateid = ITEM_SP_RESIST_STATE_STONE;
                break;
            case JOB_SERIES_ID_ARCHER:
                stateid = ITEM_SP_RESIST_STATE_SLEEP;
                break;
            case JOB_SERIES_ID_MAGICIAN:
                stateid = ITEM_SP_RESIST_STATE_BLEEDING;
                break;
            case JOB_SERIES_ID_MERCHANT:
                stateid = ITEM_SP_RESIST_STATE_POISON;
                break;
            case JOB_SERIES_ID_TAEGKUON:
                stateid = ITEM_SP_RESIST_STATE_STUN;
                break;
            case JOB_SERIES_ID_NINJA:
                stateid = ITEM_SP_RESIST_STATE_SILENCE;
                break;
            case JOB_SERIES_ID_GUNSLINGER:
                stateid = ITEM_SP_RESIST_STATE_CONFUSE;
                break;
        }

        if (stateid != 0) {
            if (n_A_HEAD_DEF_PLUS < 5) {
                n_tok[stateid] += 20;
            } else if (n_A_HEAD_DEF_PLUS < 7) {
                n_tok[stateid] += 50;
            } else {
                n_tok[stateid] += 100;
            }
        }
    }

    //----------------------------------------------------------------
    // 「ジェミニ-S58の目」の、素ＡＧＩ９０以上の効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_GEMINIS58NO_ME)) {
        if (SU_AGI >= 90) {
            n_tok[ITEM_SP_RESIST_STATE_STUN] += 30;
            n_tok[ITEM_SP_RESIST_STATE_SILENCE] += 30;
        }
    }

    //----------------------------------------------------------------
    // 「勇者の怒りセット」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_YUSHANOIKARI_ORCISH_AXE_ORCISH_SWORD)) {
        if (n_A_Weapon_ATKplus + n_A_Weapon2_ATKplus >= 20) {
            n_tok[ITEM_SP_RESIST_STATE_STUN] += 100;
        }
    }

    //----------------------------------------------------------------
    // 「アインヘリヤルの鎧　イビルドルイドカードセット」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_EINHERJERNO_YOROI_EVIL_DRUID_CARD)) {
        if (n_A_BODY_DEF_PLUS >= 9) {
            n_tok[ITEM_SP_RESIST_STATE_CURSED] += 100;
        }
    }

    //----------------------------------------------------------------
    // 「聖なる白衣」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_SEINARU_HAKUI) > 0) {
        if (n_A_BODY_DEF_PLUS >= 9) {
            n_tok[ITEM_SP_RESIST_STATE_STONE] += 50;
        }
    }

    //----------------------------------------------------------------
    // 「聖なる白衣　アルギオペカードセット」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_SEINARU_HAKUI_ARGIOPE)) {
        if (n_A_BODY_DEF_PLUS >= 9) {
            n_tok[ITEM_SP_RESIST_STATE_FROZEN] += 100;
        }
    }

    //----------------------------------------------------------------
    // 「エーギルリング　アーマーセット」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_AEGIR_RING_AEGIR_ARMOR)) {
        if (n_A_BODY_DEF_PLUS >= 7) {
            n_tok[ITEM_SP_RESIST_STATE_STUN] += 25;
            n_tok[ITEM_SP_RESIST_STATE_SILENCE] += 25;
        }
    }

    //----------------------------------------------------------------
    // 「虹色の翼」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_NIZIIRONO_TSUBASA)) {
        if (n_A_BODY_DEF_PLUS >= 8) {
            n_tok[ITEM_SP_RESIST_STATE_STONE] += 25;
        }
    }

    //----------------------------------------------------------------
    // 「ジェミニ-S58の目」の、素ＶＩＴによる効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_GEMINIS58NO_ME_AKA)) {
        if (SU_VIT >= 90) {
            n_tok[ITEM_SP_RESIST_STATE_STONE] += 40;
            n_tok[ITEM_SP_RESIST_STATE_SLEEP] += 40;
        }
    }

    //----------------------------------------------------------------
    // 「ゴッズシールド」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_GODS_SHIELD)) {
        if (n_A_SHIELD_DEF_PLUS >= 10) {
            n_tok[ITEM_SP_RESIST_STATE_BLEEDING] += 100;
            n_tok[ITEM_SP_RESIST_STATE_STONE] += 100;
        }
    }

    //----------------------------------------------------------------
    // 「アンソニの服　アンソニカードセット」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_ANSONINO_FUKU_ANSONI_CARD)) {
        if (n_A_BODY_DEF_PLUS >= 7) {
            n_tok[ITEM_SP_RESIST_STATE_FROZEN] += 100;
        }
    }

    //----------------------------------------------------------------
    // 「カルデュイの法衣　エンジェリングカードセット」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearchMIG(ITEM_SET_ID_CARDYUINO_HOI_ANGELRING)) {
        if (n_A_BODY_DEF_PLUS >= 9) {
            n_tok[ITEM_SP_RESIST_STATE_FROZEN] += 100;
        }
    }

    /*
    		// 恐怖耐性、計算機未実装
    		//----------------------------------------------------------------
    		// 「古代龍の宝冠」の、精錬による効果
    		//----------------------------------------------------------------
    		if ((itemCount = EquipNumSearch(ITEM_ID_KODAIRYUNO_HOKAN)) > 0) {
    			n_tok[ITEM_SP_RESIST_STATE_FEAR] += 10 * n_A_HEAD_DEF_PLUS * itemCount;
    		}
    */

    //----------------------------------------------------------------
    // 「魔眼のアムダライスカード」の、精錬による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_MAGANNO_AMDARAIS)) > 0) {
        if (n_A_BODY_DEF_PLUS >= 9) {
            n_tok[ITEM_SP_RESIST_STATE_FROZEN] += 100;
        }
    }

    //----------------------------------------------------------------
    // 「ジターバグカード」の、職業による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_JITTER_BUG)) > 0) {
        if (IsSameJobClass(JOB_ID_MINSTREL) || IsSameJobClass(JOB_ID_WANDERER)) {
            n_tok[ITEM_SP_RESIST_STATE_FROZEN] += 100;
        }
    }

    //----------------------------------------------------------------
    // 「スティックキャンディロッド」の、ベースレベルによる効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_STICK_CANDY_ROD, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_STICK_CANDY_ROD, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        if (n_A_BaseLV >= 170) {
            n_tok[ITEM_SP_RESIST_STATE_CONFUSE] += 100 * (itemCountRight + itemCountLeft);
        }
    }

    //----------------------------------------------------------------
    // 「イリュージョン裏切り者」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_URAGIRIMONO)) > 0) {
        if (n_A_BaseLV >= 170) {
            n_tok[ITEM_SP_RESIST_STATE_SLEEP] += 100 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ディアボロスウィング　アーマーセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_DIAVOLOS_WING_DIAVOLOS_ARMOR)) > 0) {
        n_tok[ITEM_SP_RESIST_STATE_STUN] += 5 * n_A_BODY_DEF_PLUS * itemCount;
        n_tok[ITEM_SP_RESIST_STATE_STONE] += 5 * n_A_BODY_DEF_PLUS * itemCount;
    }

    //----------------------------------------------------------------
    // 「ふわふわタンポポシューズ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_FUWAFUWA_TANPOPO_SHOES)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_DAICHINO_TAMASHI) >= 1) {
            if (LearnedSkillSearch(SKILL_ID_INUHAKKA_SHOWER) >= 5) {
                n_tok[ITEM_SP_RESIST_STATE_CURSED] += 100;
            }
        }
    }

    //----------------------------------------------------------------
    // 「竜殺しの長剣　ランドグリスカードセット」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_RYUGOROSHINO_CHOKEN_RANDGRIS_CARD)) > 0) {
        if (n_A_BaseLV <= 99) {
            n_tok[ITEM_SP_RESIST_STATE_STUN] += 20 * itemCount;
            n_tok[ITEM_SP_RESIST_STATE_SILENCE] += 20 * itemCount;
        } else {
            n_tok[ITEM_SP_RESIST_STATE_STUN] += 50 * itemCount;
            n_tok[ITEM_SP_RESIST_STATE_SILENCE] += 50 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「リングオブヴィーナス」の、素ＤＥＸによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_RING_OF_VENUS, EQUIP_REGION_ID_ACCESSARY_1)) > 0) {
        n_tok[ITEM_SP_RESIST_STATE_STUN] += 3 * Math.floor(SU_DEX / 10) * itemCount;
    }

    //----------------------------------------------------------------
    // 「ちゃぷちゃぷニャンプーハット」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_CHAPUCHAPU_NYANPU_HAT)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_GROOMING) >= 5) {
            n_tok[ITEM_SP_RESIST_STATE_CONFUSE] += 100 * itemCount;
            n_tok[ITEM_SP_RESIST_STATE_SILENCE] += 100 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「インペリアルホーリーローブ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_HOLY_ROBE)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_HIGHNESS_HEAL) >= 5) {
            n_tok[ITEM_SP_RESIST_STATE_FROZEN] += 50 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「グレースホーリーローブ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_HOLY_ROBE)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_HIGHNESS_HEAL) >= 5) {
            n_tok[ITEM_SP_RESIST_STATE_FROZEN] += 100 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「きらきらニャンニャンチョーカー」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KIRAKIRA_NYANNYAN_CHOKER)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_NYAN_GRASS) >= 5) {
            n_tok[ITEM_SP_RESIST_STATE_STUN] += 50 * itemCount;
        }
    }

    if (CardNumSearch(176)) {
        if (SU_AGI >= 90) {
            n_tok[ITEM_SP_RESIST_STATE_STUN] += 30 * CardNumSearch(176);
            n_tok[ITEM_SP_RESIST_STATE_SILENCE] += 30 * CardNumSearch(176);
        }
        if (SU_VIT >= 80) {
            n_tok[ITEM_SP_RESIST_STATE_SLEEP] += 50 * CardNumSearch(176);
            n_tok[ITEM_SP_RESIST_STATE_STONE] += 50 * CardNumSearch(176);
        }
    }

    if (EquipNumSearch(ITEM_SET_ID_DEVILCH_HEADPHONE_PET)) {
        let wDH = GetLowerJobSeriesID(n_A_JOB);
        if (wDH == 3 || wDH == 4 || wDH == 5) {
            n_tok[ITEM_SP_RESIST_STATE_STUN] += 5;
            if (n_A_PassSkill8[17] == 6) n_tok[ITEM_SP_RESIST_STATE_STUN] += 15;
        }
    }

    if (n_A_BODY_DEF_PLUS >= 9 && EquipNumSearch(2455)) n_tok[ITEM_SP_RESIST_STATE_FROZEN] += 100;

    /**
     * 「２次職合奏 不死身のジークフリード」の効果
     */
    if ((sklLv = g_confDataNizi[CCharaConfNizi.CONF_ID_SIEGFRIED]) > 0) {
        n_tok[ITEM_SP_RESIST_STATE_BLIND] += 25 + 5 * sklLv;
        n_tok[ITEM_SP_RESIST_STATE_CONFUSE] += 25 + 5 * sklLv;
        n_tok[ITEM_SP_RESIST_STATE_SLEEP] += 25 + 5 * sklLv;
        n_tok[ITEM_SP_RESIST_STATE_STUN] += 25 + 5 * sklLv;
        n_tok[ITEM_SP_RESIST_STATE_STONE] += 25 + 5 * sklLv;
        n_tok[ITEM_SP_RESIST_STATE_SILENCE] += 25 + 5 * sklLv;
        n_tok[ITEM_SP_RESIST_STATE_FROZEN] += 25 + 5 * sklLv;
        n_tok[ITEM_SP_RESIST_STATE_CURSED] += 25 + 5 * sklLv;
    }

    if (UsedSkillSearch(SKILL_ID_SERE_SUPPORT_SKILL) == 35) {
        n_tok[ITEM_SP_RESIST_STATE_BLEEDING] += 100;
        n_tok[ITEM_SP_RESIST_STATE_STONE] += 100;
    }

    n_tok[ITEM_SP_RESIST_STATE_FROZEN] += n_tok[ITEM_SP_RESIST_FROZEN_GVGTE];

}

/**
 * 公式サイトで「◯属性攻撃で受けるダメージ - ◯%」と表記される属性ダメージの減少効果を適用する
 * グローバル変数の n_tok[ITEM_SP_RESIST_ELM_XXX] に直接作用するので戻り値はない
 */
function ApplyAdditionalResistElement() {
	let sklLv = 0;
    //----------------------------------------------------------------
    // ランダムエンチャント効果
    //----------------------------------------------------------------
    for (let idx = ITEM_SP_RESIST_ELM_VANITY; idx <= ITEM_SP_RESIST_ELM_UNDEAD; idx++) {
        n_tok[idx] += GetRndOptTotalValue(idx, null, false);
        // n_tok[idx] += GetRndEnchValue(idx);
    }

    if (EquipNumSearch(737)) n_tok[ITEM_SP_RESIST_ELM_VANITY] += n_A_SHOULDER_DEF_PLUS * 3;
    if (EquipNumSearch(957)) {
        for (let i = 0; i <= 9; i++) n_tok[60 + i] += 30;
    }
    if (n_A_SHOULDER_DEF_PLUS >= 9 && CardNumSearch(403)) n_tok[ITEM_SP_RESIST_ELM_VANITY] += 5;
    if (n_A_BaseLV <= 79 && EquipNumSearch(1251)) n_tok[ITEM_SP_RESIST_ELM_VANITY] += 5;
    if (n_A_HEAD_DEF_PLUS >= 8 && EquipNumSearch(1244)) n_tok[ITEM_SP_RESIST_ELM_WATER] += 5;
    if (n_A_HEAD_DEF_PLUS >= 2 && EquipNumSearch(1431)) {
        let w = ROUNDDOWN(n_A_HEAD_DEF_PLUS / 2);
        n_tok[ITEM_SP_RESIST_ELM_WATER] += w;
        n_tok[ITEM_SP_RESIST_ELM_EARTH] += w;
        n_tok[ITEM_SP_RESIST_ELM_FIRE] += w;
        n_tok[ITEM_SP_RESIST_ELM_WIND] += w;
    }
    if (n_A_SHIELD_DEF_PLUS >= 6 && EquipNumSearch(1455)) n_tok[ITEM_SP_RESIST_ELM_VANITY] += n_A_SHIELD_DEF_PLUS - 5;
    if (n_A_SHOULDER_DEF_PLUS >= 6 && EquipNumSearch(1531)) {
        n_tok[ITEM_SP_RESIST_ELM_VANITY] += 2;
        if (n_A_SHOULDER_DEF_PLUS >= 8) n_tok[ITEM_SP_RESIST_ELM_VANITY] += 3;
    }
    if (n_A_BODY_DEF_PLUS >= 7 && n_A_SHOULDER_DEF_PLUS >= 7 && n_A_SHOES_DEF_PLUS >= 7 && EquipNumSearch(1581)) n_tok[ITEM_SP_RESIST_ELM_VANITY] += 5;
    if (n_A_Weapon_ATKplus >= 7) {
        if (n_A_Equip[EQUIP_REGION_ID_ARMS] == 1616) n_tok[ITEM_SP_RESIST_ELM_WATER] += 3;
        if (n_A_Equip[EQUIP_REGION_ID_ARMS] == 1617) n_tok[ITEM_SP_RESIST_ELM_EARTH] += 3;
        if (n_A_Equip[EQUIP_REGION_ID_ARMS] == 1618) n_tok[ITEM_SP_RESIST_ELM_FIRE] += 3;
        if (n_A_Equip[EQUIP_REGION_ID_ARMS] == 1619) n_tok[ITEM_SP_RESIST_ELM_WIND] += 3;
    }
    if (n_A_Weapon2_ATKplus >= 7) {
        if (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == 1616) n_tok[ITEM_SP_RESIST_ELM_WATER] += 3;
        if (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == 1617) n_tok[ITEM_SP_RESIST_ELM_EARTH] += 3;
        if (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == 1618) n_tok[ITEM_SP_RESIST_ELM_FIRE] += 3;
        if (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == 1619) n_tok[ITEM_SP_RESIST_ELM_WIND] += 3;
    }
    if (EquipNumSearch(1794)) n_tok[ITEM_SP_RESIST_ELM_VANITY] += n_A_HEAD_DEF_PLUS;
    if (EquipNumSearch(1797)) {
        for (let i = 61; i <= 69; i++) n_tok[i] -= 3;
        if (n_A_SHOES_DEF_PLUS >= 6) n_tok[ITEM_SP_RESIST_ELM_VANITY] += (n_A_SHOES_DEF_PLUS - 5);
    }
    if (n_A_HEAD_DEF_PLUS >= 8 && EquipNumSearch(1798)) n_tok[ITEM_SP_RESIST_ELM_WIND] += 5;
    if (n_A_HEAD_DEF_PLUS >= 9 && EquipNumSearch(1815)) n_tok[ITEM_SP_RESIST_ELM_WATER] += 3;
    if (n_A_HEAD_DEF_PLUS >= 6 && EquipNumSearch(1817)) n_tok[ITEM_SP_RESIST_ELM_FIRE] += 5;
    if (n_A_SHIELD_DEF_PLUS >= 7 && EquipNumSearch(1886)) {
        for (let i = 60; i <= 69; i++) n_tok[i] += (n_A_SHIELD_DEF_PLUS - 6) * 2;
    }
    if (GetLowerJobSeriesID(n_A_JOB) == 3 && EquipNumSearch(1913)) n_tok[ITEM_SP_RESIST_ELM_UNDEAD] += 10;
    if (n_A_SHIELD_DEF_PLUS >= 3 && EquipNumSearch(1914)) n_tok[ITEM_SP_RESIST_ELM_WATER] += Math.floor(n_A_SHIELD_DEF_PLUS / 3) * 5;
    if (n_A_HEAD_DEF_PLUS >= 8 && EquipNumSearch(1915)) n_tok[ITEM_SP_RESIST_ELM_EARTH] += 5;
    if (n_A_HEAD_DEF_PLUS >= 6 && EquipNumSearch(1943)) n_tok[ITEM_SP_RESIST_ELM_VANITY] += n_A_HEAD_DEF_PLUS - 5;
    if (EquipNumSearch(2104)) {
        if (n_A_SHOULDER_DEF_PLUS >= 6) n_tok[ITEM_SP_RESIST_ELM_VANITY] += (n_A_SHOULDER_DEF_PLUS - 5);
    }
    if (n_A_SHIELD_DEF_PLUS >= 1) {
        for (let i = 2144; i <= 2152; i++) {
            if (EquipNumSearch(i)) n_tok[60 + (i - 2143)] += n_A_SHIELD_DEF_PLUS * 2;
        }
        if (EquipNumSearch(2143)) n_tok[ITEM_SP_RESIST_ELM_VANITY] += n_A_SHIELD_DEF_PLUS;
    }
    if (EquipNumSearch(2209)) n_tok[ITEM_SP_RESIST_ELM_VANITY] += n_A_HEAD_DEF_PLUS;
    if (n_A_Arrow == ARROW_ID_HONOONO_YA && EquipNumSearch(2356)) n_tok[ITEM_SP_RESIST_ELM_FIRE] += -10;
    if (n_A_SHOULDER_DEF_PLUS >= 9 && EquipNumSearch(2452)) n_tok[ITEM_SP_RESIST_ELM_VANITY] += 20;
    if (n_A_SHOULDER_DEF_PLUS >= 9 && EquipNumSearch(2453)) n_tok[ITEM_SP_RESIST_ELM_VANITY] += 5;
    if (EquipNumSearch(2548)) n_tok[ITEM_SP_RESIST_ELM_FIRE] += n_A_SHOES_DEF_PLUS;
    if (EquipNumSearch(2553)) n_tok[ITEM_SP_RESIST_ELM_WATER] += n_A_SHOES_DEF_PLUS;
    if (EquipNumSearch(2558)) n_tok[ITEM_SP_RESIST_ELM_WIND] += n_A_SHOES_DEF_PLUS;
    if (EquipNumSearch(2563)) n_tok[ITEM_SP_RESIST_ELM_EARTH] += n_A_SHOES_DEF_PLUS;

    //----------------------------------------------------------------
    // 「包装されなかった人形カード」の、＋９過剰による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_HOSOSARENAKATTA_NINGYO)) {
        if (n_A_SHOULDER_DEF_PLUS >= 9) {
            n_tok[ITEM_SP_RESIST_ELM_VANITY] += 10;
            n_tok[ITEM_SP_RESIST_ELM_PSYCO] += 10;
        }
    }

    //----------------------------------------------------------------
    // 「マッドハッター」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_MAD_HATTER)) {
        n_tok[ITEM_SP_RESIST_ELM_DARK] += 5 * n_A_HEAD_DEF_PLUS;
    }

    //----------------------------------------------------------------
    // 「ガーディアンセット」の、＋７過剰による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_GUARDIAN_SET)) {
        if (n_A_BODY_DEF_PLUS >= 7 &&
            n_A_SHOULDER_DEF_PLUS >= 7 &&
            n_A_SHOES_DEF_PLUS >= 7) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] += 10;
        }
    }

    //----------------------------------------------------------------
    // 「ルドのロールペーパー」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_RUDONO_ROLLPAPER)) {
        n_tok[ITEM_SP_RESIST_ELM_HOLY] += 2 * n_A_SHIELD_DEF_PLUS;
    }

    //----------------------------------------------------------------
    // 「ユニコーンの兜」の、スキル習得による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_UNICORNNO_KABUTO)) {
        if (LearnedSkillSearch(SKILL_ID_FAITH)) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 2 * LearnedSkillSearch(SKILL_ID_FAITH);
        }
    }

    //----------------------------------------------------------------
    // 「ユニコーンの兜」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_UNICORNNO_KABUTO)) {
        if (n_A_HEAD_DEF_PLUS >= 8) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] += 5;
            n_tok[ITEM_SP_RESIST_ELM_DARK] += 5;
        }
    }

    //----------------------------------------------------------------
    // 「堕天司祭の闇光外套」の、スキル習得による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_DATENSHISAINO_ANKOUGAITO)) {
        if (LearnedSkillSearch(SKILL_ID_FAITH)) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 3 * LearnedSkillSearch(SKILL_ID_FAITH);
        }
    }

    //----------------------------------------------------------------
    // 「堕天司祭の闇光外套」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_DATENSHISAINO_ANKOUGAITO)) {
        if (n_A_SHOULDER_DEF_PLUS >= 7) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] += 20;
            n_tok[ITEM_SP_RESIST_ELM_DARK] += 20;
        }
        if (n_A_SHOULDER_DEF_PLUS >= 9) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] += 10;
            n_tok[ITEM_SP_RESIST_ELM_DARK] += 10;
        }
    }

    //----------------------------------------------------------------
    // 「英雄マント」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_EIYU_MANT)) {
        n_tok[ITEM_SP_RESIST_ELM_VANITY] += 3 * ROUNDDOWN(n_A_SHOULDER_DEF_PLUS / 3);
        if (n_A_SHOULDER_DEF_PLUS >= 10) {
            n_tok[ITEM_SP_RESIST_ELM_VANITY] += 20;
        }
    }

    //----------------------------------------------------------------
    // 「皇竜の天翼」の、職業による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_KORYUNO_TENYOKU)) {
        if (GetLowerJobSeriesID(n_A_JOB) == JOB_SERIES_ID_MAGICIAN) {
            n_tok[ITEM_SP_RESIST_ELM_ALL] += 5;
        }
    }

    //----------------------------------------------------------------
    // 「魔呪のマント」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_MAZYUNO_MANT)) {
        if (n_A_SHOULDER_DEF_PLUS >= 7) {
            n_tok[ITEM_SP_RESIST_ELM_WATER] += 30;
            n_tok[ITEM_SP_RESIST_ELM_WIND] += 30;
        }
    }

    //----------------------------------------------------------------
    // 「ガイアシールド」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_GAIA_SHIELD) > 0) {
        if (n_A_SHIELD_DEF_PLUS >= 6) {
            n_tok[ITEM_SP_RESIST_ELM_EARTH] += 15;
        }
    }

    //----------------------------------------------------------------
    // 「ガーディアンプロセッサ　ガーディアンエンジンセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_GUARDIAN_PROCESSOR_GUARDIAN_ENGINE)) > 0) {
        let vartmp = 0;
        if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 15;
        if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 15;
        n_tok[ITEM_SP_RESIST_ELM_HOLY] += vartmp * itemCount;
        n_tok[ITEM_SP_RESIST_ELM_DARK] += vartmp * itemCount;
    }

    //----------------------------------------------------------------
    // 「マラン海賊団帽」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_MARAN_KAIZOKUDANBO) > 0) {
        if (n_A_HEAD_DEF_PLUS >= 8) n_tok[ITEM_SP_RESIST_ELM_WIND] += 15;
    }

    //----------------------------------------------------------------
    // 「アネモスシールド」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_ANEMOS_SHIELD) > 0) {
        if (n_A_SHIELD_DEF_PLUS >= 6) n_tok[ITEM_SP_RESIST_ELM_WIND] += 15;
    }

    //----------------------------------------------------------------
    // 「エーギルリング　マントセット」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_AEGIR_RING_AEGIR_MANT)) {
        if (n_A_SHOULDER_DEF_PLUS >= 7) {
            n_tok[ITEM_SP_RESIST_ELM_FIRE] += 25;
            n_tok[ITEM_SP_RESIST_ELM_WATER] += 25;
        }
    }

    //----------------------------------------------------------------
    // 「エンチャント　セイクレッド」の、スキル習得による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_ENCHANT_SACRED)) {
        if (LearnedSkillSearch(SKILL_ID_FAITH)) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 15 * CardNumSearch(CARD_ID_ENCHANT_SACRED);
        }
    }

    //----------------------------------------------------------------
    // 「悪魔崇拝者の靴　堕天司祭の闇光外套セット」の、スキル習得による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_AKUMASUHAISHANO_KUTSU_DATENSHISAINO_ANKOGAITO)) {
        if (LearnedSkillSearch(SKILL_ID_FAITH)) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 2 * LearnedSkillSearch(SKILL_ID_FAITH);
        }
    }

    //----------------------------------------------------------------
    // 「降霊術士の外套」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_KOREIZYUTSUSHINO_GAITO)) {
        n_tok[ITEM_SP_RESIST_ELM_FIRE] += 5 * n_A_SHOULDER_DEF_PLUS;
        n_tok[ITEM_SP_RESIST_ELM_WIND] += 5 * n_A_SHOULDER_DEF_PLUS;
    }

    //----------------------------------------------------------------
    // 「ルドの黒い羽　ルドのロールペーパーセット」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_RUDONO_KUROI_HANE_RUDONO_ROLLPAPER)) {
        n_tok[ITEM_SP_RESIST_ELM_HOLY] += 3 * n_A_SHIELD_DEF_PLUS;
    }

    //----------------------------------------------------------------
    // 「ディヴィッドシールド」の、スキル習得による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_DIVID_SHIELD)) {
        if (LearnedSkillSearch(SKILL_ID_FAITH)) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 2 * LearnedSkillSearch(SKILL_ID_FAITH);
        }
    }

    //----------------------------------------------------------------
    // 「ゴッズヘルム」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_GODS_HELM)) > 0) {
        n_tok[ITEM_SP_RESIST_ELM_FIRE] += 2 * ROUNDDOWN(n_A_HEAD_DEF_PLUS / 1) * itemCount;
        n_tok[ITEM_SP_RESIST_ELM_WATER] += 2 * ROUNDDOWN(n_A_HEAD_DEF_PLUS / 1) * itemCount;
    }

    //----------------------------------------------------------------
    // 「ゴッズアーマー」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_GODS_ARMOR)) {
        n_tok[ITEM_SP_RESIST_ELM_DARK] += 2 * n_A_BODY_DEF_PLUS;
    }

    //----------------------------------------------------------------
    // 「禁忌の魔導書」の、スキル習得による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_KINKINO_MADOSHO)) {
        n_tok[ITEM_SP_RESIST_ELM_FIRE] += 10 * LearnedSkillSearch(SKILL_ID_SUMMON_AGNI);
        n_tok[ITEM_SP_RESIST_ELM_WATER] += 10 * LearnedSkillSearch(SKILL_ID_SUMMON_AQUA);
        n_tok[ITEM_SP_RESIST_ELM_WIND] += 10 * LearnedSkillSearch(SKILL_ID_SUMMON_VENTOS);
        n_tok[ITEM_SP_RESIST_ELM_EARTH] += 10 * LearnedSkillSearch(SKILL_ID_SUMMON_TERA);
    }

    //----------------------------------------------------------------
    // 「サバイバルシューズ　サバイバルマントセット」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_SURVIVAL_SHOES_SURVIVAL_MANT)) {
        if (n_A_SHOULDER_DEF_PLUS >= 7) {
            n_tok[ITEM_SP_RESIST_ELM_WIND] += 15;
            n_tok[ITEM_SP_RESIST_ELM_EARTH] += 15;
        }
        if (n_A_SHOULDER_DEF_PLUS >= 9) {
            n_tok[ITEM_SP_RESIST_ELM_WIND] += 15;
            n_tok[ITEM_SP_RESIST_ELM_EARTH] += 15;
        }
    }

    //----------------------------------------------------------------
    // 「ゴーグルハット」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_GOOGLE_HAT)) {
        if (n_A_HEAD_DEF_PLUS >= 8) {
            n_tok[ITEM_SP_RESIST_ELM_POISON] += 15;
        }
    }

    //----------------------------------------------------------------
    // 「タウラスハット」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_TAURUS_HAT)) {
        if (n_A_HEAD_DEF_PLUS >= 8) {
            n_tok[ITEM_SP_RESIST_ELM_WIND] += 15;
        }
    }

    //----------------------------------------------------------------
    // 「実験成体ゴート型キャップ」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_ZIKKEN_SEITAI_GOATGATA_CAP)) {
        if (n_A_HEAD_DEF_PLUS >= 8) {
            n_tok[ITEM_SP_RESIST_ELM_EARTH] += 15;
        }
    }

    //----------------------------------------------------------------
    // 「ダークフェイスワームカード」の、スキル習得による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_DARK_FACEWORM)) {
        if (LearnedSkillSearch(SKILL_ID_FAITH)) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 20 * CardNumSearch(CARD_ID_DARK_FACEWORM);
        }
    }

    //----------------------------------------------------------------
    // 「虹色のスカーフ」の、矢との同時装備による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_NIZIIRONO_SCARF)) > 0) {
        // 「炎の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_HONOONO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_FIRE] += 75;
        }
        // 「水晶の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_SUISHONO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_WATER] += 75;
        }
        // 「風の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_KAZENO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_WIND] += 75;
        }
        // 「岩石の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_GANSEKINO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_EARTH] += 75;
        }
    }

    //----------------------------------------------------------------
    // 「キングスメイル　キングスガードセット」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_KINGS_MAIL_KINGS_GUARD)) {
        n_tok[ITEM_SP_RESIST_ELM_DARK] += 5 * n_A_BODY_DEF_PLUS;
    }

    //----------------------------------------------------------------
    // 「虹色のマフラー」の、矢との同時装備による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_NIZIIRONO_MUFFLER)) > 0) {
        // 「炎の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_HONOONO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_FIRE] += 75;
        }
        // 「水晶の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_SUISHONO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_WATER] += 75;
        }
        // 「風の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_KAZENO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_WIND] += 75;
        }
        // 「岩石の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_GANSEKINO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_EARTH] += 75;
        }
    }

    //----------------------------------------------------------------
    // 「降霊術士の手鏡」の、スキル習得による効果（ペナルティ）
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_KOREZYUTSUSHINO_TEKAGAMI)) {
        if (LearnedSkillSearch(SKILL_ID_FAITH)) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 2 * LearnedSkillSearch(SKILL_ID_FAITH);
        }
    }

    //----------------------------------------------------------------
    // 「ディアボロスウィング　マントセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_DIAVOLOS_WING_DIAVOLOS_MANT)) > 0) {
        n_tok[ITEM_SP_RESIST_ELM_FIRE] += 3 * n_A_SHOULDER_DEF_PLUS * itemCount;
        n_tok[ITEM_SP_RESIST_ELM_WATER] += 3 * n_A_SHOULDER_DEF_PLUS * itemCount;
        n_tok[ITEM_SP_RESIST_ELM_WIND] += 3 * n_A_SHOULDER_DEF_PLUS * itemCount;
    }

    //----------------------------------------------------------------
    // 「スピリチュアルクロース　エクリプスカードセット」の、スキル習得による効果（ペナルティ）
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_SPIRITUAL_CLOTH_ECLIPSE_CARD)) {
        if (LearnedSkillSearch(SKILL_ID_FAITH)) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 5 * LearnedSkillSearch(SKILL_ID_FAITH);
        }
    }

    //----------------------------------------------------------------
    // 「イルシオンウィングI」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ILUSION_WING_1)) > 0) {
        if (n_A_BaseLV >= 170) {
            n_tok[ITEM_SP_RESIST_ELM_VANITY] += 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「イルシオンウィングI　スーツIセット」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_ILUSION_WING_1_SUIT_1)) > 0) {
        if (n_A_BaseLV >= 170) {
            n_tok[ITEM_SP_RESIST_ELM_VANITY] += 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「イルシオンウィングII」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ILUSION_WING_2)) > 0) {
        if (n_A_BaseLV >= 170) {
            n_tok[ITEM_SP_RESIST_ELM_VANITY] += 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「イルシオンウィングII　スーツIIセット」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_ILUSION_WING_2_SUIT_2)) > 0) {
        if (n_A_BaseLV >= 170) {
            n_tok[ITEM_SP_RESIST_ELM_VANITY] += 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ガーディアンオブソウル」の、素ステータスによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_GUARDIAN_OF_SOUL)) > 0) {
        n_tok[ITEM_SP_RESIST_ELM_DARK] += 7 * Math.floor((SU_STR + SU_LUK) / 18) * itemCount;
        n_tok[ITEM_SP_RESIST_ELM_UNDEAD] += 7 * Math.floor((SU_STR + SU_LUK) / 18) * itemCount;
        n_tok[ITEM_SP_RESIST_ELM_FIRE] += 7 * Math.floor((SU_AGI + SU_VIT) / 18) * itemCount;
        n_tok[ITEM_SP_RESIST_ELM_WATER] += 7 * Math.floor((SU_AGI + SU_VIT) / 18) * itemCount;
        n_tok[ITEM_SP_RESIST_ELM_WIND] += 7 * Math.floor((SU_INT + SU_DEX) / 18) * itemCount;
        n_tok[ITEM_SP_RESIST_ELM_EARTH] += 7 * Math.floor((SU_INT + SU_DEX) / 18) * itemCount;
    }

    //----------------------------------------------------------------
    // 「リングオブヴィーナス」の、素ＤＥＸによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_RING_OF_VENUS, EQUIP_REGION_ID_ACCESSARY_1)) > 0) {
        if (SU_DEX >= 125) {
            n_tok[ITEM_SP_RESIST_ELM_FIRE] += 5 * itemCount;
            n_tok[ITEM_SP_RESIST_ELM_WATER] += 5 * itemCount;
            n_tok[ITEM_SP_RESIST_ELM_WIND] += 5 * itemCount;
            n_tok[ITEM_SP_RESIST_ELM_EARTH] += 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「暴威のマフラー」の、矢との同時装備による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_BOINO_MUFFLER)) > 0) {
        // 「炎の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_HONOONO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_FIRE] += 75;
        }
        // 「水晶の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_SUISHONO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_WATER] += 75;
        }
        // 「風の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_KAZENO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_WIND] += 75;
        }
        // 「岩石の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_GANSEKINO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_EARTH] += 75;
        }
    }

    //----------------------------------------------------------------
    // 「イルシオンシールド」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_ILUSION_SHIELD_1)) > 0) {
        if (n_A_BaseLV >= 170) {
            n_tok[ITEM_SP_RESIST_ELM_VANITY] += 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「溶岩のマント」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_YOGANNO_MANT)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_MAGMA_ILLUPTION) >= 5) {
            n_tok[ITEM_SP_RESIST_ELM_FIRE] += 50 * itemCount;
            n_tok[ITEM_SP_RESIST_ELM_EARTH] += 50 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「エンチャント　R-Saint」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_ENCHANT_R_SAINT)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_FAITH) > 0) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 25 * cardCount;
        }
    }

    //----------------------------------------------------------------
    // 「身かわしのケープ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_MIKAWASHINO_CAPE)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_PRAEFATIO) >= 10) {
            n_tok[ITEM_SP_RESIST_ELM_VANITY] += 50 * itemCount;
        }
        if (LearnedSkillSearch(SKILL_ID_HIGHNESS_HEAL) >= 5) {
            n_tok[ITEM_SP_RESIST_ELM_WATER] += 75 * itemCount;
            n_tok[ITEM_SP_RESIST_ELM_PSYCO] += 75 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「エリュマントスの皮」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_ERYMANTHNO_KAWA)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_WUG_RIDER) >= 3) {
            n_tok[ITEM_SP_RESIST_ELM_FIRE] += 100 * itemCount;
            n_tok[ITEM_SP_RESIST_ELM_PSYCO] += 30 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「グロトネリーア」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_GLOTONERIA)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_TRIANGLE_SHOT) >= 10) {
            n_tok[ITEM_SP_RESIST_ELM_WIND] += 50 * itemCount;
            n_tok[ITEM_SP_RESIST_ELM_EARTH] += 50 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「アヴァレーツォ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_AVARECO)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_HALLUCINATION_WALK) >= 5) {
            n_tok[ITEM_SP_RESIST_ELM_WATER] += 100 * itemCount;
            n_tok[ITEM_SP_RESIST_ELM_HOLY] += 30 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「無限のエクリプス」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_MUGENNO_ECLIPSE)) > 0) {
        n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 5 * LearnedSkillSearch(SKILL_ID_FAITH) * cardCount;
    }

    //----------------------------------------------------------------
    // 「エンチャント　Exam　P-Fear　セイクレッド」の、スキル習得による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_EXAM_ENCHANT_P_FEAR)) {
        if (LearnedSkillSearch(SKILL_ID_FAITH)) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 15 * CardNumSearch(CARD_SET_ID_ENCHANT_EXAM_ENCHANT_P_FEAR);
        }
    }

    //----------------------------------------------------------------
    // 「レギンレイヴカード」の、装備位置による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_REGINLEIF, CARD_REGION_ID_HEAD_MID)) > 0) {
        n_tok[ITEM_SP_RESIST_ELM_FIRE] += 10 * cardCount;
        n_tok[ITEM_SP_RESIST_ELM_WATER] += 10 * cardCount;
        n_tok[ITEM_SP_RESIST_ELM_DARK] += 10 * cardCount;
        n_tok[ITEM_SP_RESIST_ELM_UNDEAD] += 10 * cardCount;
    }

    //----------------------------------------------------------------
    // 「ブラックミスリルガード」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_BLACK_MITHRIL_GUARD)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_FAITH) >= 1) {
            if (n_A_SHIELD_DEF_PLUS >= 5) {
                n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 20 * itemCount;
            }
        }
    }

    //----------------------------------------------------------------
    // 「アッシュホッパー」カードの、矢との同時装備による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_ASH_HOPPER)) > 0) {

        // 「炎の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_HONOONO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_FIRE] += 50;
        }
    }

    //----------------------------------------------------------------
    // 「真夜中のユメヒメ」カードの、矢との同時装備による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_MAYONAKANO_YUMEHIME)) > 0) {

        // 「無形の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_MUKEINO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_PSYCO] += 50;
        }
    }

    //----------------------------------------------------------------
    // 「雪花のマント」の、スキル習得による効果（ペナルティ）
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_SEKKANO_MANT)) {
        if (LearnedSkillSearch(SKILL_ID_FAITH)) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 5 * LearnedSkillSearch(SKILL_ID_FAITH);
        }
    }

    //----------------------------------------------------------------
    // 「雪花のマフラー」の、スキル習得による効果（ペナルティ）
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_SEKKANO_MUFFLER)) {
        if (LearnedSkillSearch(SKILL_ID_FAITH)) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 5 * LearnedSkillSearch(SKILL_ID_FAITH);
        }
    }

    //----------------------------------------------------------------
    // 「アイスフナムシ」カードの、矢との同時装備による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_ICE_FUNAMUSHI)) > 0) {

        // 「水晶の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_SUISHONO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_WATER] += 50;
        }
    }

    //----------------------------------------------------------------
    // 「エクストラジョーカー」カードの、矢との同時装備による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_EXTRA_JORKER)) > 0) {

        // 「銀の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_GINNO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] += 50;
        }
    }

    //----------------------------------------------------------------
    // 「デッドセラ」カードの、矢との同時装備による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_DEAD_SERA)) > 0) {

        // 「錆びた矢」と同時装備
        if (n_A_Arrow == ARROW_ID_SABITA_YA) {
            n_tok[ITEM_SP_RESIST_ELM_POISON] += 50;
        }
    }

    //----------------------------------------------------------------
    // 「クマムシ」カードの、矢との同時装備による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_ICEBEAR)) > 0) {
        // 「岩石の矢」と同時装備
        if (n_A_Arrow == ARROW_ID_GANSEKINO_YA) {
            n_tok[ITEM_SP_RESIST_ELM_EARTH] += 50;
        }
    }

    //----------------------------------------------------------------
    // 「スプンタアールマティ」の、スキル習得による効果（ペナルティ）
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SPUNTA_ARLMATI)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_FAITH)) {
            if (n_A_SHIELD_DEF_PLUS >= 5) {
                n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 25 * itemCount;
            }
        }
    }

    //----------------------------------------------------------------
    // 「ルッキー」カードの、スキル習得による効果（ペナルティ）
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_LOOKIE)) {
        if (LearnedSkillSearch(SKILL_ID_FAITH)) {
            n_tok[ITEM_SP_RESIST_ELM_HOLY] -= 30;
        }
    }

    //----------------------------------------------------------------
    // 「ブラックスミス　スキンテンパリング」の効果
    //----------------------------------------------------------------
    n_tok[ITEM_SP_RESIST_ELM_VANITY] += Math.max(LearnedSkillSearch(SKILL_ID_SKIN_TEMPERING), UsedSkillSearch(SKILL_ID_SKIN_TEMPERING));
    n_tok[ITEM_SP_RESIST_ELM_FIRE] += 4 * Math.max(LearnedSkillSearch(SKILL_ID_SKIN_TEMPERING), UsedSkillSearch(SKILL_ID_SKIN_TEMPERING));

    //----------------------------------------------------------------
    // 「クルセイダー　フェイス」の効果
    //----------------------------------------------------------------
    n_tok[ITEM_SP_RESIST_ELM_HOLY] += 5 * Math.max(LearnedSkillSearch(SKILL_ID_FAITH), UsedSkillSearch(SKILL_ID_FAITH));

    //----------------------------------------------------------------
    // 「影狼・朧　符」の効果
    //----------------------------------------------------------------
    if (UsedSkillSearch(SKILL_ID_FU_ELEMENT_OF_FU) != 0) {
        n_tok[ITEM_SP_RESIST_ELM_VANITY + UsedSkillSearch(SKILL_ID_FU_ELEMENT_OF_FU)] += 2 * UsedSkillSearch(SKILL_ID_FU_COUNT_OF_FU);
    }

    //----------------------------------------------------------------
    // 「二次職支援　プロヴィデンス」の効果
    //----------------------------------------------------------------
    if (g_confDataNizi[CCharaConfNizi.CONF_ID_PROVIDENCE] && GetHigherJobSeriesID(n_A_JOB) != JOB_SERIES_ID_CRUSADER) {
        n_tok[ITEM_SP_RESIST_ELM_HOLY] += 5 * g_confDataNizi[CCharaConfNizi.CONF_ID_PROVIDENCE];
    }

    //----------------------------------------------------------------
    // 「ソーサラー　精霊支援スキル」の効果
    //----------------------------------------------------------------
    switch (UsedSkillSearch(SKILL_ID_SERE_SUPPORT_SKILL)) {
        case SERE_SUPPORT_SKILL_ID_FIRE_CLOAK:
            n_tok[ITEM_SP_RESIST_ELM_FIRE] += 100;
            n_tok[ITEM_SP_RESIST_ELM_WATER] -= 100;
            break;
        case SERE_SUPPORT_SKILL_ID_WATER_DROP:
            n_tok[ITEM_SP_RESIST_ELM_WATER] += 100;
            n_tok[ITEM_SP_RESIST_ELM_WIND] -= 100;
            break;
        case SERE_SUPPORT_SKILL_ID_WIND_CURTAIN:
            n_tok[ITEM_SP_RESIST_ELM_WIND] += 100;
            n_tok[ITEM_SP_RESIST_ELM_EARTH] -= 100;
            break;
        case SERE_SUPPORT_SKILL_ID_STONE_SHIELD:
            n_tok[ITEM_SP_RESIST_ELM_EARTH] += 100;
            n_tok[ITEM_SP_RESIST_ELM_FIRE] -= 100;
            break;
    }

    //----------------------------------------------------------------
    // 「四次精霊　ディフェンスモード」の効果
    //----------------------------------------------------------------
    switch (UsedSkillSearch(SKILL_ID_SERE_SUPPORT_SKILL)) {
        case SERE_SUPPORT_SKILL_ID_FLAME_ARMOR:
            n_tok[ITEM_SP_RESIST_ELM_FIRE] += 95;
            break;
        case SERE_SUPPORT_SKILL_ID_CRYSTAL_ARMOR:
            n_tok[ITEM_SP_RESIST_ELM_WATER] += 95;
            break;
        case SERE_SUPPORT_SKILL_ID_EYES_OF_STORM:
            n_tok[ITEM_SP_RESIST_ELM_WIND] += 95;
            break;
        case SERE_SUPPORT_SKILL_ID_STRONG_PROTECTION:
            n_tok[ITEM_SP_RESIST_ELM_EARTH] += 95;
            break;
        case SERE_SUPPORT_SKILL_ID_POISON_SHIELD:
            n_tok[ITEM_SP_RESIST_ELM_POISON] += 95;
            break;
    }

	/**
	 * 「２次職合奏 不死身のジークフリード」の効果
	 */
    if ((sklLv = g_confDataNizi[CCharaConfNizi.CONF_ID_SIEGFRIED]) > 0) {
        n_tok[ITEM_SP_RESIST_ELM_WATER] += 3 * sklLv;
        n_tok[ITEM_SP_RESIST_ELM_EARTH] += 3 * sklLv;
        n_tok[ITEM_SP_RESIST_ELM_FIRE] += 3 * sklLv;
        n_tok[ITEM_SP_RESIST_ELM_WIND] += 3 * sklLv;
    }

	/** 三次職支援設定「恋人たちのためのシンフォニー」の効果 */
	if ((sklLv = g_confDataSanzi[CCharaConfSanzi.CONF_ID_SYMPHONY_OF_LOVER]) > 0) {
		n_tok[ITEM_SP_RESIST_ELM_HOLY] += 3 * sklLv;
		n_tok[ITEM_SP_RESIST_ELM_PSYCO] += 3 * sklLv;
	}

    if (n_A_PassSkill7[11]) { // A7_Skill11 : レジストコールドポーション
        n_tok[ITEM_SP_RESIST_ELM_WATER] += 20;
        n_tok[ITEM_SP_RESIST_ELM_WIND] -= 15;
    }
    if (n_A_PassSkill7[12]) { // A7_Skill12 : レジストアースポーション
        n_tok[ITEM_SP_RESIST_ELM_EARTH] += 20;
        n_tok[ITEM_SP_RESIST_ELM_FIRE] -= 15;
    }
    if (n_A_PassSkill7[13]) { // A7_Skill13 : レジストファイアーポーション
        n_tok[ITEM_SP_RESIST_ELM_FIRE] += 20;
        n_tok[ITEM_SP_RESIST_ELM_WATER] -= 15;
    }
    if (n_A_PassSkill7[14]) { // A7_Skill14 : レジストウィンドポーション
        n_tok[ITEM_SP_RESIST_ELM_WIND] += 20;
        n_tok[ITEM_SP_RESIST_ELM_EARTH] -= 15;
    }
    if (n_tok[ITEM_SP_RESIST_ELM_ALL] != 0) {
        for (let i = ITEM_SP_RESIST_ELM_VANITY; i <= ITEM_SP_RESIST_ELM_UNDEAD; i++) n_tok[i] += n_tok[ITEM_SP_RESIST_ELM_ALL];
    }
    if (EquipNumSearch(ITEM_SET_ID_STRONG_SHIELD_JUSOHOHEI_NO_KABUTO)) {
        for (let i = ITEM_SP_RESIST_ELM_VANITY; i <= ITEM_SP_RESIST_ELM_UNDEAD; i++) n_tok[i] += 5;
    }

    //----------------------------------------------------------------
    // 「性能カスタマイズ」の、効果
    //----------------------------------------------------------------
    confval = g_objCharaConfCustomDef.GetConf(CCharaConfCustomDef.CONF_ID_RESIST_ELM);
    if (confval != 0) {
        for (i = ITEM_SP_RESIST_ELM_VANITY; i <= ITEM_SP_RESIST_ELM_UNDEAD; i++) {
            n_tok[i] += confval;
        }
    }

    // TODO: 四次対応
    for (idx = ITEM_SP_RESIST_ELM_VANITY; idx <= ITEM_SP_RESIST_ELM_UNDEAD; idx++) {
        n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
    }

}

/**
 * 公式サイトで「ヒール系スキルを受けた時のHP回復量 + ◯%」と表記される回復される量の増加
 * および「ヒール系スキル使用時のHP回復量 + ◯%」と表記される回復する量の増加
 * を適用する
 */
function ApplyHealRecoveryUp() {
    // USED : ヒール系スキルを受けた時のHP回復量
    // USING: ヒール系スキルを使った時のHP回復量

    //----------------------------------------------------------------
    // ランダムエンチャント効果
    //----------------------------------------------------------------
    for (idx = ITEM_SP_HEAL_UP_USING; idx <= ITEM_SP_HEAL_UP_USED; idx++) {
        n_tok[idx] += GetRndOptTotalValue(idx, null, false);
    }

    n_tok[ITEM_SP_HEAL_UP_USING] += n_tok[ITEM_SP_HEAL_UP_USING_ONLY_HEAL] + n_tok[ITEM_SP_HEAL_UP_USING_ONLY_HEAL_SERIES];

    n_tok[ITEM_SP_HEAL_UP_USING] += Math.max(LearnedSkillSearch(SKILL_ID_MEDITATIO), UsedSkillSearch(SKILL_ID_MEDITATIO)) * 2;

    // オフェルトリウム
    if ((bufLv = UsedSkillSearch(SKILL_ID_OFFERTORIUM)) > 0) {
        // 特定の戦闘エリアでの補正
        switch (n_B_TAISEI[MOB_CONF_PLAYER_ID_SENTO_AREA]) {
            case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_COLOSSEUM:
                n_tok[ITEM_SP_HEAL_UP_USING] += 400 + 200 * bufLv;
                break;
            default:
                n_tok[ITEM_SP_HEAL_UP_USING] += 30 * bufLv;
                break;
        }
    }

    if (EquipNumSearch(644)) n_tok[ITEM_SP_HEAL_UP_USING] += Math.floor(n_A_Weapon_ATKplus * 1.5);
    if (EquipNumSearch(1085)) {
        if (n_A_Weapon_ATKplus >= 7) n_tok[ITEM_SP_HEAL_UP_USING] += 5;
        if (n_A_Weapon_ATKplus >= 10) n_tok[ITEM_SP_HEAL_UP_USING] += 10;
        if (n_A_Weapon_ATKplus >= 7) {
            if (n_A_Weapon_ATKplus <= 10) n_tok[ITEM_SP_HEAL_UP_USING] += 2 * (n_A_Weapon_ATKplus - 5);
            else n_tok[ITEM_SP_HEAL_UP_USING] += 10;
        }
    }

    if (EquipNumSearch(ITEM_ID_TATSUZINNO_TSUCHI) || EquipNumSearch(ITEM_ID_TATSUZINNO_TSUCHI_S2)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += LearnedSkillSearch(SKILL_ID_DIVINE_PROTECTION);
    }

    if (EquipNumSearch(1359)) {
        if (n_A_HEAD_DEF_PLUS >= 7) n_tok[ITEM_SP_HEAL_UP_USING] += 3;
        if (EquipNumSearch(644)) n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon_ATKplus;
        if (EquipNumSearch(863)) n_tok[ITEM_SP_HEAL_UP_USING] += 3 * n_A_Weapon_ATKplus;
    }

    //----------------------------------------------------------------
    // 「魔法石の恩恵」の、装備効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_MAHOSEKINO_ONKE)) {
        if (n_A_HEAD_DEF_PLUS >= 5) n_tok[ITEM_SP_HEAL_UP_USING] += 3;
        if (n_A_HEAD_DEF_PLUS >= 7) n_tok[ITEM_SP_HEAL_UP_USING] += 5;
        if (n_A_HEAD_DEF_PLUS >= 9) n_tok[ITEM_SP_HEAL_UP_USING] += 7;
    }

    //----------------------------------------------------------------
    // 「ロザリオの首飾り　聖職者の看護帽セット」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_ROSARIONO_KUBIKAZARI_SEISHOKUSHANO_KANGOBO)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 2 * n_A_HEAD_DEF_PLUS;
    }

    //----------------------------------------------------------------
    // 「ソヒョンの羽衣」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_SOHIONNO_HAGOROMO)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 1 * n_A_SHOULDER_DEF_PLUS;
    }

    //----------------------------------------------------------------
    // 「熾天使の花冠」の、強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_SHITENSHINO_HANAKANMURI)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 1 * ROUNDDOWN(SU_INT / 8);
        if (SU_INT >= 108) n_tok[ITEM_SP_HEAL_UP_USING] += 5;
        if (SU_INT >= 120) n_tok[ITEM_SP_HEAL_UP_USING] += 10;
    }

    //----------------------------------------------------------------
    // 「皇竜の天翼」の、職業による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_KORYUNO_TENYOKU)) {
        if (GetLowerJobSeriesID(n_A_JOB) == JOB_SERIES_ID_ACOLYTE) {
            n_tok[ITEM_SP_HEAL_UP_USING] += 10;
        }
    }

    //----------------------------------------------------------------
    // 「セイヴザキング」の、騎兵修練【未習得】時における、過剰精錬による効果
    //----------------------------------------------------------------
    if (LearnedSkillSearch(SKILL_ID_KIHE_SHUREN) == 0) {
        if (EquipNumSearch(ITEM_ID_SAVE_THE_KING)) {
            if (n_A_Weapon_ATKplus >= 6) {
                n_tok[ITEM_SP_HEAL_UP_USING] += 40;
                n_tok[ITEM_SP_HEAL_UP_USED] += 15;
            }
            if (n_A_Weapon_ATKplus >= 8) {
                n_tok[ITEM_SP_HEAL_UP_USING] += 40;
                n_tok[ITEM_SP_HEAL_UP_USED] += 15;
            }
        }
    }

    //----------------------------------------------------------------
    // 「ガイアシールド」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_GAIA_SHIELD) > 0) {
        if (n_A_SHIELD_DEF_PLUS >= 8) {
            if (SU_VIT >= 90) {
                n_tok[ITEM_SP_HEAL_UP_USED] += 10;
            }
        }
    }

    //----------------------------------------------------------------
    // 「暴徒のスカーフ　グラスセット」の、素ＩＮＴと素ＤＥＸによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_GLASS)) > 0) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 10 * ROUNDDOWN((SU_INT + SU_DEX) / 80) * itemCount;
    }

    //----------------------------------------------------------------
    // 「暴徒のスカーフ　サングラスセット」の、素ＩＮＴと素ＤＥＸによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_SUNGLASS)) > 0) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 10 * ROUNDDOWN((SU_INT + SU_DEX) / 80) * itemCount;
    }


    //----------------------------------------------------------------
    // 「ディーヴァワンド」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_DIVA_WAND, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_DIVA_WAND, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon_ATKplus * 2 * itemCountRight;
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon2_ATKplus * 2 * itemCountLeft;
    }

    //----------------------------------------------------------------
    // 「ディーヴァスタッフ」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_DIVA_STUFF, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_DIVA_STUFF, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon_ATKplus * 2 * itemCountRight;
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon2_ATKplus * 2 * itemCountLeft;
    }

    //----------------------------------------------------------------
    // 「ディーヴァブック」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_DIVA_BOOK, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_DIVA_BOOK, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon_ATKplus * 2 * itemCountRight;
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon2_ATKplus * 2 * itemCountLeft;
    }

    //----------------------------------------------------------------
    // 「ミラージュワンド」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_MIRRORAGE_WAND, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_MIRRORAGE_WAND, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon_ATKplus * 2 * itemCountRight;
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon2_ATKplus * 2 * itemCountLeft;
    }

    //----------------------------------------------------------------
    // 「ミラージュスタッフ」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_MIRRORAGE_STUFF, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_MIRRORAGE_STUFF, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon_ATKplus * 2 * itemCountRight;
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon2_ATKplus * 2 * itemCountLeft;
    }

    //----------------------------------------------------------------
    // 「ミラージュブック」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_MIRRORAGE_BOOK, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_MIRRORAGE_BOOK, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon_ATKplus * 2 * itemCountRight;
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon2_ATKplus * 2 * itemCountLeft;
    }

    //----------------------------------------------------------------
    // 「アネモスシールド」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_ANEMOS_SHIELD) > 0) {
        if (n_A_SHIELD_DEF_PLUS >= 8) {
            if (SU_VIT >= 90) {
                n_tok[ITEM_SP_HEAL_UP_USED] += 10;
            }
        }
    }

    //----------------------------------------------------------------
    // 「聖なる白衣」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_SEINARU_HAKUI) > 0) {
        let vartmp = 0;
        if (n_A_BODY_DEF_PLUS >= 7) vartmp += 2;
        if (n_A_BODY_DEF_PLUS >= 8) vartmp += 3;
        if (n_A_BODY_DEF_PLUS >= 9) vartmp += 4;
        n_tok[ITEM_SP_HEAL_UP_USING] += 2 * vartmp;
        n_tok[ITEM_SP_HEAL_UP_USED] += 1 * vartmp;
    }

    //----------------------------------------------------------------
    // 「ソヒョンの小太刀　ソヒョンの羽衣セット」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_SOHIONNO_KODACHI_SOHIONNO_HAGOROMO)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 2 * n_A_SHOULDER_DEF_PLUS;
    }

    //----------------------------------------------------------------
    // 「ゴッズシールド」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_GODS_SHIELD)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 1 * n_A_SHIELD_DEF_PLUS;
    }

    //----------------------------------------------------------------
    // 「熾天使の羽毛　熾天使の花冠セット」の、素ＩＮＴによる効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_SHITENSHINO_UMO_SHITENSHINO_HANAKANMURI)) {
        let vartmp = 0;
        if (SU_INT >= 108) vartmp += 10;
        if (SU_INT >= 120) vartmp += 15;
        n_tok[ITEM_SP_HEAL_UP_USING] += vartmp;
        n_tok[ITEM_SP_HEAL_UP_USED] += vartmp;
    }

    //----------------------------------------------------------------
    // 「巡礼者の靴」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ZYUNREISHANO_KUTSU)) > 0) {
        if (sklLv = LearnedSkillSearch(SKILL_ID_HIGHNESS_HEAL)) {
            n_tok[ITEM_SP_HEAL_UP_USING] += 5 * sklLv * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「長い回復の猫じゃらし」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_NAGAI_KAIFUKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_NAGAI_KAIFUKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        let vartmp = 0;
        vartmp += 2 * n_A_Weapon_ATKplus;
        if (n_A_Weapon_ATKplus >= 7) vartmp += 10;
        if (n_A_Weapon_ATKplus >= 8) vartmp += 15;
        n_tok[ITEM_SP_HEAL_UP_USING] += vartmp * itemCountRight;

        vartmp = 0;
        vartmp += 2 * n_A_Weapon2_ATKplus;
        if (n_A_Weapon2_ATKplus >= 7) vartmp += 10;
        if (n_A_Weapon2_ATKplus >= 8) vartmp += 15;
        n_tok[ITEM_SP_HEAL_UP_USING] += vartmp * itemCountLeft;
    }

    //----------------------------------------------------------------
    // 「豊富な回復の猫じゃらし」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_HOUFUNA_KAIFUKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_HOUFUNA_KAIFUKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        vartmp = 0;
        vartmp += 5 * n_A_Weapon_ATKplus;
        if (n_A_Weapon_ATKplus >= 7) vartmp += 20;
        if (n_A_Weapon_ATKplus >= 8) vartmp += 30;
        n_tok[ITEM_SP_HEAL_UP_USING] += vartmp * itemCountRight;

        vartmp = 0;
        vartmp += 5 * n_A_Weapon2_ATKplus;
        if (n_A_Weapon2_ATKplus >= 7) vartmp += 20;
        if (n_A_Weapon2_ATKplus >= 8) vartmp += 30;
        n_tok[ITEM_SP_HEAL_UP_USING] += vartmp * itemCountLeft;
    }

    //----------------------------------------------------------------
    // 「トンボがとまった黄色い猫じゃらし」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_KIROI_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_KIROI_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 10 * n_A_Weapon_ATKplus * itemCountRight;
        n_tok[ITEM_SP_HEAL_UP_USING] += 10 * n_A_Weapon2_ATKplus * itemCountLeft;
    }

    //----------------------------------------------------------------
    // 「ディーヴァフォックステイル」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_DIVA_FOXTAIL, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_DIVA_FOXTAIL, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon_ATKplus * 2 * itemCountRight;
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon2_ATKplus * 2 * itemCountLeft;
    }

    //----------------------------------------------------------------
    // 「ミラージュフォックステイル」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_MIRRORAGE_FOXTAIL, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_MIRRORAGE_FOXTAIL, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon_ATKplus * 2 * itemCountRight;
        n_tok[ITEM_SP_HEAL_UP_USING] += n_A_Weapon2_ATKplus * 2 * itemCountLeft;
    }

    //----------------------------------------------------------------
    // 「可愛い草のネックレス」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KAWAII_KUSANO_NECKLACE)) > 0) {
        let sklLv = 0;
        sklLv += LearnedSkillSearch(SKILL_ID_SHINSENNA_EBI);
        sklLv += LearnedSkillSearch(SKILL_ID_EBI_ZANMAI);
        sklLv += LearnedSkillSearch(SKILL_ID_OTORO);
        sklLv += LearnedSkillSearch(SKILL_ID_MAGURO_SHIELD);
        sklLv += LearnedSkillSearch(SKILL_ID_GROOMING);
        sklLv += LearnedSkillSearch(SKILL_ID_NODOWO_NARASU);
        sklLv += LearnedSkillSearch(SKILL_ID_EBI_PARTY);
        n_tok[ITEM_SP_HEAL_UP_USING] += 4 * ROUNDDOWN(sklLv / 5) * itemCount;
    }

    //----------------------------------------------------------------
    // 「特選アジのお守り」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TOKUSEN_AZINO_OMAMORI)) > 0) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 2 * ROUNDDOWN(n_A_BaseLV / 10) * itemCount;
    }

    //----------------------------------------------------------------
    // 「イリュージョン看護帽」の、ベースレベルによる強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_ILLUSION_KANGOBO)) {
        if (n_A_BaseLV >= 170) {
            n_tok[ITEM_SP_HEAL_UP_USING] += 10;
        }
    }

    //----------------------------------------------------------------
    // 「もこもこお魚シューズ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_MOKOMOKO_OSAKANA_SHOES)) > 0) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 10 * LearnedSkillSearch(SKILL_ID_NODOWO_NARASU) * itemCount;
    }

    //----------------------------------------------------------------
    // 「ディアボロスウィング　ローブセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_DIAVOLOS_WING_DIAVOLOS_ROBE)) > 0) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 2 * n_A_BODY_DEF_PLUS * itemCount;
    }

    //----------------------------------------------------------------
    // 「[ECO] ミニー・ドゥ・アルマカード」の、精錬による効果
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_ECO_MINIY_DO_ARMA, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_ECO_MINIY_DO_ARMA, CARD_REGION_ID_ARMS_LEFT_ANY);
    if ((cardCountRight > 0) || (cardCountLeft > 0)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 1 * n_A_Weapon_ATKplus * cardCountRight;
        n_tok[ITEM_SP_HEAL_UP_USING] += 1 * n_A_Weapon2_ATKplus * cardCountLeft;
    }

    //----------------------------------------------------------------
    // 「ヴァルゴ」の、精錬による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_VIRGO, CARD_REGION_ID_HEAD_TOP_ANY)) > 0) {
        // アークビショップ限定の効果
        if (IsSameJobClass(JOB_ID_ARCBISHOP)) {
            n_tok[ITEM_SP_HEAL_UP_USING] += 2 * n_A_HEAD_DEF_PLUS * cardCount;
        }
    }

    //----------------------------------------------------------------
    // 「アークビショップマーガレッタ(MVP)カード」の、職業による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_ARCH_BISHOP_MARGARETTE_MVP)) > 0) {
        if (IsSameJobClass(JOB_ID_ARCBISHOP)) {
            n_tok[ITEM_SP_HEAL_UP_USING] += 15 * cardCount;
        }
    }

    //----------------------------------------------------------------
    // 「ちゃぷちゃぷニャンプーハット」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_CHAPUCHAPU_NYANPU_HAT)) > 0) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 20 * LearnedSkillSearch(SKILL_ID_NODOWO_NARASU) * itemCount;
    }

    //----------------------------------------------------------------
    // 「崇拝の指輪」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_SUHAINO_YUBIWA)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_ORATIO) >= 10) {
            n_tok[ITEM_SP_HEAL_UP_USING] += 30 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「粛清の靴」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SHUKUSEINO_KUTSU)) > 0) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 8 * LearnedSkillSearch(SKILL_ID_LAUDAAGNUS) * itemCount;
        n_tok[ITEM_SP_HEAL_UP_USING] += 8 * LearnedSkillSearch(SKILL_ID_LAUDARAMUS) * itemCount;
    }

    //----------------------------------------------------------------
    // 「異国の伝統帽子　ペクソジンカード」セットの、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_SET_ID_IKOKUNO_DENTO_BOSHI_PEKUSOZIN)) > 0) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 6 * n_A_HEAD_DEF_PLUS * itemCount;
    }

    //----------------------------------------------------------------
    // 「異国の伝統帽子　封印されたペクソジンカード」セットの、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_SET_ID_IKOKUNO_DENTO_BOSHI_FUINSARTA_PEKUSOZIN)) > 0) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 2 * n_A_HEAD_DEF_PLUS * itemCount;
    }

    //----------------------------------------------------------------
    // 「アメイジング・グレイス」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_AMAZING_GRACE)) > 0) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 3 * (LearnedSkillSearch(SKILL_ID_LAUDAAGNUS) + LearnedSkillSearch(SKILL_ID_LAUDARAMUS)) * itemCount;
        n_tok[ITEM_SP_HEAL_UP_USED] += 3 * (LearnedSkillSearch(SKILL_ID_LAUDAAGNUS) + LearnedSkillSearch(SKILL_ID_LAUDARAMUS)) * itemCount;
    }

    if (EquipNumSearch(1469)) {
        if (n_A_BODY_DEF_PLUS >= 5) n_tok[ITEM_SP_HEAL_UP_USING] += Math.floor((n_A_BODY_DEF_PLUS - 5) / 2) * 2 + 2;
        n_tok[ITEM_SP_HEAL_UP_USED] += Math.floor(n_A_BODY_DEF_PLUS / 2);
    }
    if (n_A_BaseLV <= 79 && EquipNumSearch(1533)) n_tok[ITEM_SP_HEAL_UP_USED] += 5;
    if (n_A_Weapon_ATKplus >= 7 && n_A_BODY_DEF_PLUS >= 7 && n_A_SHOULDER_DEF_PLUS >= 7 && n_A_SHOES_DEF_PLUS >= 7) {
        if (EquipNumSearch(1563) || EquipNumSearch(1565)) n_tok[ITEM_SP_HEAL_UP_USING] += 10;
    }
    if (EquipNumSearch(1695))
        if (GetLowerJobSeriesID(n_A_JOB) == 3 || GetLowerJobSeriesID(n_A_JOB) == 5) n_tok[ITEM_SP_HEAL_UP_USING] += 7;
    if (EquipNumSearch(1752) || EquipNumSearch(1753)) n_tok[ITEM_SP_HEAL_UP_USED] += Math.floor(n_A_SHOULDER_DEF_PLUS / 3);
    if (EquipNumSearch(1698)) n_tok[ITEM_SP_HEAL_UP_USING] += 6 * n_A_Weapon_ATKplus;
    if (n_A_HEAD_DEF_PLUS >= 7 && EquipNumSearch(1927)) n_tok[ITEM_SP_HEAL_UP_USING] += 10;
    if (EquipNumSearch(2244)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 2 * ROUNDDOWN(n_A_SHOES_DEF_PLUS / 2);
        if (EquipNumSearch(2246)) n_tok[ITEM_SP_HEAL_UP_USING] += 3 * ROUNDDOWN(n_A_HEAD_DEF_PLUS / 2);
    }
    if (EquipNumSearch(2282)) n_tok[ITEM_SP_HEAL_UP_USING] += 2 * n_A_HEAD_DEF_PLUS;
    if (n_A_HEAD_DEF_PLUS >= 5 && EquipNumSearch(2519)) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 6;
        if (n_A_HEAD_DEF_PLUS >= 7) n_tok[ITEM_SP_HEAL_UP_USING] += 9;
        if (n_A_HEAD_DEF_PLUS >= 9) n_tok[ITEM_SP_HEAL_UP_USING] += 12;
    }
    if (n_A_Weapon_ATKplus >= 1 && EquipNumSearch(2520)) n_tok[ITEM_SP_HEAL_UP_USING] += 4 * n_A_Weapon_ATKplus;
    if (GetLowerJobSeriesID(n_A_JOB) == 3 && n_A_card[CARD_REGION_ID_HEAD_TOP] == 623) n_tok[ITEM_SP_HEAL_UP_USING] += Math.floor(n_A_HEAD_DEF_PLUS / 2);
    if (CardNumSearch(826)) {
        if (n_A_HEAD_DEF_PLUS >= 7) n_tok[ITEM_SP_HEAL_UP_USING] += 2 * CardNumSearch(826);
        if (n_A_HEAD_DEF_PLUS >= 9) n_tok[ITEM_SP_HEAL_UP_USING] += 2 * CardNumSearch(826);
    }

    //----------------------------------------------------------------
    // 「[衣装]ビギナー帽」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((itemCount = CostumeNumSearch(COSTUME_ID_BEGINNER_BO)) > 0) {
        if (n_A_BaseLV >= 99) {
            n_tok[ITEM_SP_HEAL_UP_USING] -= 150;
        } else {
            switch (n_B_TAISEI[MOB_CONF_PLAYER_ID_SENTO_AREA]) {
                case MOB_CONF_PLAYER_ID_SENTO_AREA_GVG:
                case MOB_CONF_PLAYER_ID_SENTO_AREA_GVG_TE:
                case MOB_CONF_PLAYER_ID_SENTO_AREA_YE:
                case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_GVG_TE:
                case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_COLOSSEUM:
                case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_SHINKIRO:
                    n_tok[ITEM_SP_HEAL_UP_USING] -= 150;
                    break;
                default:
                    n_tok[ITEM_SP_HEAL_UP_USING] -= 10 * ROUNDDOWN(n_A_BaseLV / 10);
                    n_tok[ITEM_SP_HEAL_UP_USED] += 10 * ROUNDDOWN(n_A_BaseLV / 10);
                    break;
            }
        }

    }

    if (CardNumSearch(827)) {
        if (n_A_HEAD_DEF_PLUS >= 7) n_tok[ITEM_SP_HEAL_UP_USED] += 1 * CardNumSearch(827);
        if (n_A_HEAD_DEF_PLUS >= 9) n_tok[ITEM_SP_HEAL_UP_USED] += 1 * CardNumSearch(827);
    }

    //----------------------------------------------------------------
    // 「サモナー　海の力」の、効果
    //----------------------------------------------------------------
    if (Math.max(LearnedSkillSearch(SKILL_ID_UMINO_CHIKARA), UsedSkillSearch(SKILL_ID_UMINO_CHIKARA)) > 0) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 50;
        let summoner_skill_seafood_sum = 0;
        summoner_skill_seafood_sum += LearnedSkillSearch(SKILL_ID_SHINSENNA_EBI);
        summoner_skill_seafood_sum += LearnedSkillSearch(SKILL_ID_EBI_ZANMAI);
        summoner_skill_seafood_sum += LearnedSkillSearch(SKILL_ID_OTORO);
        summoner_skill_seafood_sum += LearnedSkillSearch(SKILL_ID_MAGURO_SHIELD);
        summoner_skill_seafood_sum += LearnedSkillSearch(SKILL_ID_GROOMING);
        summoner_skill_seafood_sum += LearnedSkillSearch(SKILL_ID_NODOWO_NARASU);
        summoner_skill_seafood_sum += LearnedSkillSearch(SKILL_ID_EBI_PARTY);
        if (Math.max(summoner_skill_seafood_sum, UsedSkillSearch(SKILL_ID_SEAFOOD_KEI_SHUTOKU_LEVEL_GOKEI)) >= 20) {
            n_tok[ITEM_SP_HEAL_UP_USING] += 100;
        }
    }

    //----------------------------------------------------------------
    // 「スーパーノービス＋　ブレイクスルー」の、効果
    //----------------------------------------------------------------
    if ((sklLv = Math.max(LearnedSkillSearch(SKILL_ID_BREAK_THROUGH), UsedSkillSearch(SKILL_ID_BREAK_THROUGH))) > 0) {
        n_tok[ITEM_SP_HEAL_UP_USED] += 2 * sklLv;
    }

	/**
	 * 「バード イドゥンの林檎」の、効果
	 */
    if ((sklLv = g_confDataNizi[CCharaConfNizi.CONF_ID_APPLEIDUN]) > 0) {
        n_tok[ITEM_SP_HEAL_UP_USED] += 20 + 3 * sklLv;
    }

    //----------------------------------------------------------------
    // 「スーパーノービス＋　トランセンデンス」の、効果
    //----------------------------------------------------------------
    if ((sklLv = Math.max(LearnedSkillSearch(SKILL_ID_TRANSCENDENCE), UsedSkillSearch(SKILL_ID_TRANSCENDENCE))) > 0) {
        n_tok[ITEM_SP_HEAL_UP_USING] += 3 * sklLv;
    }

    //----------------------------------------------------------------
    // 「性能カスタマイズ」の、効果
    //----------------------------------------------------------------
    let confval = g_objCharaConfCustomSkill.GetConf(CCharaConfCustomSkill.CONF_ID_HEAL_UP_USING);
    if (confval != 0) {
        n_tok[ITEM_SP_HEAL_UP_USING] += confval;
    }

    confval = g_objCharaConfCustomSkill.GetConf(CCharaConfCustomSkill.CONF_ID_HEAL_UP_USED);
    if (confval != 0) {
        n_tok[ITEM_SP_HEAL_UP_USED] += confval;
    }

    n_tok[ITEM_SP_HEAL_UP_USING] += n_tok[ITEM_SP_HEAL_UP_USING_GVGTE];
}

/**
 * 公式サイトで「スキルディレイ - ◯%」と表記されるディレイの減少効果を適用した
 * 最終的なディレイ減少率を取得する
 * @returns {Number}
 */
function getDelayTimeReductionRate() {

    let delay_time_reduction = 0;
    n_tok[ITEM_SP_SKILL_DELAY_DOWN] += GetRndOptTotalValue(ITEM_SP_SKILL_DELAY_DOWN, null, false);
    delay_time_reduction += n_tok[ITEM_SP_SKILL_DELAY_DOWN];

    if (n_A_Weapon_ATKplus >= 9 && (EquipNumSearch(934) || EquipNumSearch(ITEM_ID_TEGRYONG_S2))) {
        delay_time_reduction += 20;
    }
    if (EquipNumSearch(1036) && n_A_HEAD_DEF_PLUS >= 6) {
        delay_time_reduction += n_A_HEAD_DEF_PLUS - 5;
    }
    if (n_A_Weapon_ATKplus >= 9 && EquipNumSearch(1084)) {
        delay_time_reduction += 5;
    }
    if (EquipNumSearch(1085)) {
        if (n_A_Weapon_ATKplus >= 5) {
            delay_time_reduction += 5;
        }
        if (n_A_Weapon_ATKplus >= 7) {
            delay_time_reduction += 5;
        }
    }
    if (n_A_Weapon_ATKplus >= 9 && EquipNumSearch(1095)) {
        delay_time_reduction += 5;
    }
    if (EquipNumSearch(936)) {
        delay_time_reduction += Math.floor(n_A_Weapon_ATKplus * 1.5);
    }
    if (n_A_HEAD_DEF_PLUS >= 5 && EquipNumSearch(1279)) {
        delay_time_reduction += (n_A_HEAD_DEF_PLUS - 4);
    }
    if (n_A_HEAD_DEF_PLUS >= 7 && EquipNumSearch(1459)) {
        delay_time_reduction += 4;
        if (n_A_HEAD_DEF_PLUS >= 9) {
            delay_time_reduction += 5;
        }
    }
    if (SU_INT >= 100 && EquipNumSearch(1528)) {
        let wx = EquipNumSearch(1528);
        delay_time_reduction += 1 * wx;
        if (SU_INT >= 120) {
            delay_time_reduction += 2 * wx;
        }
    }
    if (EquipNumSearch(1629)) {
        if (n_A_Weapon_ATKplus >= 10) {
            delay_time_reduction += 10;
        }
    }
    if (EquipNumSearch(ITEM_ID_KENSENO_OKAN) > 0) {
        if (LearnedSkillSearch(SKILL_ID_YARI_SHUREN) == 10) {
            delay_time_reduction += 10;
        }
    }
    if (n_A_HEAD_DEF_PLUS >= 7 && EquipNumSearch(1897)) {
        delay_time_reduction += 5;
        if (n_A_HEAD_DEF_PLUS >= 9) {
            delay_time_reduction += 3;
        }
    }
    if (n_A_SHIELD_DEF_PLUS >= 1 && EquipNumSearch(1990)) {
        delay_time_reduction += n_A_SHIELD_DEF_PLUS * 2;
    }
    if (n_A_SHIELD_DEF_PLUS >= 7 && TimeItemNumSearch(66)) {
        delay_time_reduction += (n_A_SHIELD_DEF_PLUS - 6) * 5;
    }
    if (n_A_BODY_DEF_PLUS >= 7 && EquipNumSearch(2345)) {
        delay_time_reduction += 2;
    }
    if (EquipNumSearch(2346)) {
        delay_time_reduction += n_A_Weapon_ATKplus;
    }
    if (CardNumSearch(823)) {
        if (n_A_HEAD_DEF_PLUS >= 7) {
            delay_time_reduction += 1 * CardNumSearch(823);
        }
        if (n_A_HEAD_DEF_PLUS >= 9) {
            delay_time_reduction += 1 * CardNumSearch(823);
        }
    }
    if (EquipNumSearch(2440)) {
        delay_time_reduction += 2 * n_A_SHOES_DEF_PLUS;
    }
    if (n_A_BaseLV >= 130 && EquipNumSearch(2465)) {
        delay_time_reduction += 10;
    }
    if (EquipNumSearch(2539) && UsedSkillSearch(SKILL_ID_AURA_BLADE)) {
        delay_time_reduction += 70;
    }
    if (n_A_SHOES_DEF_PLUS >= 3 && EquipNumSearch(2568)) {
        delay_time_reduction += 10 * ROUNDDOWN(n_A_SHOES_DEF_PLUS / 3);
    }
    //----------------------------------------------------------------
    // 「古びたボーンサークレット」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_FURUBITA_BONECIRCRET)) {
        delay_time_reduction += n_A_HEAD_DEF_PLUS;
    }
    //----------------------------------------------------------------
    // 「執行者のマント」の、＋７以上精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_SHIKKOSHANO_MANT)) {
        if (n_A_SHOULDER_DEF_PLUS >= 7) {
            delay_time_reduction += 3;
        }
        if (n_A_SHOULDER_DEF_PLUS >= 9) {
            delay_time_reduction += 3;
        }
    }
    //----------------------------------------------------------------
    // 「魔呪のブーツ」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_MAZYUNO_BOOTS)) {
        if (n_A_SHOES_DEF_PLUS >= 7) {
            delay_time_reduction += 10;
        }
    }
    //----------------------------------------------------------------
    // 「[LOVA] バハムートカード」の、＋７以上精錬による強化
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_LOVA_BAHAMUT) > 0) {
        if (n_A_Weapon_ATKplus >= 7) {
            delay_time_reduction += 1 * CardNumSearch(CARD_ID_LOVA_BAHAMUT);
        }
    }
    //----------------------------------------------------------------
    // 「[LOVA] 真化バハムートカード」の、＋７以上精錬による強化
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_LOVA_SHINKA_BAHAMUT) > 0) {
        if (n_A_Weapon_ATKplus >= 7) {
            delay_time_reduction += 3 * CardNumSearch(CARD_ID_LOVA_SHINKA_BAHAMUT);
        }
    }
    //----------------------------------------------------------------
    // 「反逆者のスカーフ」の、スキル習得による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_HANGYAKUSHANO_SCARF)) > 0) {
        delay_time_reduction += 2 * LearnedSkillSearch(SKILL_ID_FIRE_RAIN) * itemCount;
    }
    //----------------------------------------------------------------
    // 「お座り教皇（私服）」の、精錬による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_OSUWARI_KYOKO_SHIFUKU)) > 0) {
        if (n_A_HEAD_DEF_PLUS >= 7) {
            delay_time_reduction += 10 * itemCount;
        }
        if (n_A_HEAD_DEF_PLUS >= 9) {
            delay_time_reduction += 10 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「グウィバーの皮」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_GWIBERNO_KAWA)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 8) {
            delay_time_reduction += 1 * ROUNDDOWN((SU_INT + SU_DEX) / 20) * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「Y.S.F.0.1.セット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_YSF01_PLATE_FULLSET)) > 0) {
        if (n_A_BODY_DEF_PLUS >= 7 && n_A_SHOULDER_DEF_PLUS >= 7 && n_A_SHOES_DEF_PLUS >= 7) {
            delay_time_reduction += 20 * itemCount;
        }
        if (n_A_BODY_DEF_PLUS >= 9 && n_A_SHOULDER_DEF_PLUS >= 9 && n_A_SHOES_DEF_PLUS >= 9) {
            delay_time_reduction += 20 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「天邪鬼の鬼面」の、素ＩＮＴよる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_AMANOZYAKUNO_KIMEN)) > 0) {
        delay_time_reduction += 1 * ROUNDDOWN(SU_INT / 18) * itemCount;
    }
    //----------------------------------------------------------------
    // 「用心棒のスーツ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_YOZINBONO_SUITS)) > 0) {
        if (n_A_BODY_DEF_PLUS >= 7) {
            delay_time_reduction += 5 * itemCount;
        }
        if (n_A_BODY_DEF_PLUS >= 9) {
            delay_time_reduction += 5 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「神喰らいの龍槍」の、精錬による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KAMIKURAINO_RYUSO)) > 0) {
        delay_time_reduction += 1 * n_A_Weapon_ATKplus * itemCount;
    }
    //----------------------------------------------------------------
    // 「猛炎と白魔の指輪」の、効果
    //----------------------------------------------------------------
    itemCountAccessary1 = EquipNumSearch(ITEM_ID_MOENTO_HAKUMANO_YUBIWA, EQUIP_REGION_ID_ACCESSARY_1);
    if (itemCountAccessary1 > 0) {
        delay_time_reduction += 15 * itemCountAccessary1;
    }
    //----------------------------------------------------------------
    // 「巡礼者の靴」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ZYUNREISHANO_KUTSU)) > 0) {
        if (sklLv = LearnedSkillSearch(SKILL_ID_PRAEFATIO)) {
            delay_time_reduction += 6 * sklLv * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「精巧な猫じゃらしの模型」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_SEIKONA_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_SEIKONA_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        if (n_A_Weapon_ATKplus >= 8) {
            delay_time_reduction += 10 * itemCountRight;
        }
        if (n_A_Weapon2_ATKplus >= 8) {
            delay_time_reduction += 10 * itemCountLeft;
        }
    }
    //----------------------------------------------------------------
    // 「豊富な回復の猫じゃらし」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_HOUFUNA_KAIFUKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_HOUFUNA_KAIFUKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        if (n_A_Weapon_ATKplus >= 8) {
            delay_time_reduction += 10 * itemCountRight;
        }
        if (n_A_Weapon2_ATKplus >= 8) {
            delay_time_reduction += 10 * itemCountLeft;
        }
    }
    //----------------------------------------------------------------
    // 「トンボがとまった魔力の猫じゃらし」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_MARYOKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_MARYOKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        if (n_A_Weapon_ATKplus >= 8) {
            delay_time_reduction += 10 * itemCountRight;
        }
        if (n_A_Weapon2_ATKplus >= 8) {
            delay_time_reduction += 10 * itemCountLeft;
        }
    }
    //----------------------------------------------------------------
    // 「抱きつきシャムネコ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_DAKITSUKI_SYAMNEKO)) > 0) {
        if (n_A_HEAD_DEF_PLUS >= 8) {
            delay_time_reduction += 100;
        }
    }
    //----------------------------------------------------------------
    // 「青リンゴ帽」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_AORINGOBO)) > 0) {
        delay_time_reduction += 2 * n_A_HEAD_DEF_PLUS * itemCount;
    }
    //----------------------------------------------------------------
    // 「高級ドラムスーツ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KOKYU_DORAM_SUITS)) > 0) {
        if (n_A_BODY_DEF_PLUS >= 8) {
            delay_time_reduction += 5 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「特選ドラムスーツ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TOKUSEN_DORAM_SUITS)) > 0) {
        if (n_A_BODY_DEF_PLUS >= 8) {
            delay_time_reduction += 10 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「パワードチップ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_POWERED_CHIP)) > 0) {
        if ((sklLv = LearnedSkillSearch(SKILL_ID_ARMS_CANNON)) >= 3) {
            delay_time_reduction += 30 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「虹色のスカーフ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_NIZIIRONO_SCARF)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_CAMOUFLAGE) >= 5) {
            delay_time_reduction += 10 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「エンチャント　名誉のニーヴ(熟練)」の、精錬による効果
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_ZYUKUREN, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_ZYUKUREN, CARD_REGION_ID_ARMS_LEFT_ANY);
    cardCountHeadTop = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_ZYUKUREN, CARD_REGION_ID_HEAD_TOP_ANY);
    cardCountShield = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_ZYUKUREN, CARD_REGION_ID_SHIELD_ANY);
    cardCountBody = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_ZYUKUREN, CARD_REGION_ID_BODY_ANY);
    cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_ZYUKUREN, CARD_REGION_ID_SHOULDER_ANY);
    cardCountShoes = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_ZYUKUREN, CARD_REGION_ID_SHOES_ANY);
    if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield +
        cardCountBody + cardCountShoulder + cardCountShoes > 0) {
        // 右手武器へのエンチャント
        let vartmp = 0;
        if (n_A_Weapon_ATKplus >= 7) vartmp += 5;
        if (n_A_Weapon_ATKplus >= 9) vartmp += 5;
        delay_time_reduction += vartmp * cardCountRight
        // 左手武器へのエンチャント
        vartmp = 0;
        if (n_A_Weapon2_ATKplus >= 7) vartmp += 5;
        if (n_A_Weapon2_ATKplus >= 9) vartmp += 5;
        delay_time_reduction += vartmp * cardCountLeft
        // 頭防具へのエンチャント
        vartmp = 0;
        if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 5;
        if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 5;
        delay_time_reduction += vartmp * cardCountHeadTop
        // 盾防具へのエンチャント
        vartmp = 0;
        if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 5;
        if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 5;
        delay_time_reduction += vartmp * cardCountShield
        // 体防具へのエンチャント
        vartmp = 0;
        if (n_A_BODY_DEF_PLUS >= 7) vartmp += 5;
        if (n_A_BODY_DEF_PLUS >= 9) vartmp += 5;
        delay_time_reduction += vartmp * cardCountBody
        // 肩防具へのエンチャント
        vartmp = 0;
        if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 5;
        if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 5;
        delay_time_reduction += vartmp * cardCountShoulder
        // 靴防具へのエンチャント
        vartmp = 0;
        if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 5;
        if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 5;
        delay_time_reduction += vartmp * cardCountShoes
        // アクセサリへのエンチャント
        // 精錬できないので処理不要
    }
    //----------------------------------------------------------------
    // 「獄エンチャント」の、職業による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_GOKU)) {
        // 職業限定の効果
        if (IsSameJobClass(JOB_ID_GILOTINCROSS)) {
            delay_time_reduction += 90;
        }
    }
    //----------------------------------------------------------------
    // 「スコーピオ」の、職業による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_SCORPIO, CARD_REGION_ID_HEAD_TOP)) {
        // 職業限定の効果
        if (IsSameJobClass(JOB_ID_GILOTINCROSS)) {
            delay_time_reduction += 1 * n_A_HEAD_DEF_PLUS;
        }
    }
    //----------------------------------------------------------------
    // 「イリュージョンバリスタ」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_BARISTA)) > 0) {
        if (n_A_BaseLV >= 170) {
            delay_time_reduction += 20 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「フローズヴィトニルの鎖　ヴァナルガンドの兜セット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_FROZVITNIRNO_KUSARI_VANARGANDNO_KABUTO)) > 0) {
        if (n_A_HEAD_DEF_PLUS >= 6) {
            delay_time_reduction += 5 * itemCount;
        }
        if (n_A_HEAD_DEF_PLUS >= 8) {
            delay_time_reduction += 10 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「イリュージョン風魔手裏剣・風鳥」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_FUMASHURIKEN_FUCHO)) > 0) {
        if (n_A_BaseLV >= 170) {
            delay_time_reduction += 20 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「ファフニールスケイル」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_FAFNIR_SCALE)) > 0) {
        delay_time_reduction += 2 * LearnedSkillSearch(SKILL_ID_WATER_DRAGON_BREATH) * itemCount;
    }
    //----------------------------------------------------------------
    // 「ヘヴンリーオーダー」の、素ＡＧＩによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_HEAVENLY_ORDER)) > 0) {
        delay_time_reduction += 2 * Math.floor(SU_AGI / 18) * itemCount;
    }
    //----------------------------------------------------------------
    // 「ジェジェキャップ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_JEJECAP)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_HOWLING_OF_MANDRAGORA) >= 5) {
            delay_time_reduction += 25 * itemCount;
        }
        delay_time_reduction += 6 * LearnedSkillSearch(SKILL_ID_CRAZY_WEED) * itemCount;
    }
    //----------------------------------------------------------------
    // 「シールドリング」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SHIELD_RING)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_EARTH_DRIVE) >= 5) {
            delay_time_reduction += 30 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「スナイピングシューズ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SNIPING_SHOES)) > 0) {
        delay_time_reduction += 8 * LearnedSkillSearch(SKILL_ID_UNLIMIT) * itemCount;
    }
    //----------------------------------------------------------------
    // 「傀儡の腕輪　ダークハンドセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KUGUTSUNO_UDEWA_DARK_HAND)) > 0) {
        if (n_A_HEAD_DEF_PLUS >= 6) {
            delay_time_reduction += 5 * itemCount;
        }
        if (n_A_HEAD_DEF_PLUS >= 8) {
            delay_time_reduction += 10 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「ぷりちーウリボウシューズ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_PRETTY_URIBO_SHOES)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_MURENO_CHIKARA) >= 5) {
            delay_time_reduction += 50 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「ゲフェニア氷の魔道具」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_GEFFENIA_KORINO_MADOGU)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_RECOGNIZED_SPELL) >= 5) {
            delay_time_reduction += 30 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「ジャガーノート」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_JAGUAR_NOTE)) > 0) {
        delay_time_reduction += 8 * LearnedSkillSearch(SKILL_ID_HOWLING_MINE) * itemCount;
    }
    //----------------------------------------------------------------
    // 「イルシオンウィングII　スーツIIセット」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_ILUSION_WING_2_SUIT_2)) > 0) {
        if (n_A_BaseLV >= 170) {
            delay_time_reduction += 10 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「ガーディアンオブソウル」の、素ＳＴＲと素ＬＵＫによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_GUARDIAN_OF_SOUL)) > 0) {
        delay_time_reduction += 1 * Math.floor((SU_STR + SU_LUK) / 18) * itemCount;
    }
    //----------------------------------------------------------------
    // 「ダークリング」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_DARK_RING)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_CROSS_IMPACT) >= 5) {
            delay_time_reduction += 30 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「知覚増幅リング」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_CHIKAKU_ZOFUKU_RING)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_PSYCHIC_WAVE) >= 5) {
            delay_time_reduction += 30 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「リングオブヴィーナス」の、素ＡＧＩによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_RING_OF_VENUS, EQUIP_REGION_ID_ACCESSARY_2)) > 0) {
        if (SU_AGI >= 125) {
            delay_time_reduction += 25 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「暴威のマフラー」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_BOINO_MUFFLER)) > 0) {
        if ((skllv = LearnedSkillSearch(SKILL_ID_MELANCHOLY)) >= 5) {
            delay_time_reduction += 10 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「精神拡張リング」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SEISHIN_KAKUCHO_RING)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_RECOGNIZED_SPELL) >= 5) {
            delay_time_reduction += 30 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「ぴかぴかニャンニャンクラウン」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_PIKAPIKA_NYANNYAN_CROWN)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_NYAN_GRASS) >= 5) {
            delay_time_reduction += 20 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「審判の天秤」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SHINPANNO_TENBIN)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_HESPERUS_SLIT) >= 5) {
            delay_time_reduction += 30 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「国王シュミッツセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOKUO_SCHMIDTNO_SEIFUKU_MANT)) > 0) {
        if ((n_A_BODY_DEF_PLUS >= 6) && (n_A_SHOULDER_DEF_PLUS >= 6)) {
            delay_time_reduction += 20 * itemCount;
        }
        if ((n_A_BODY_DEF_PLUS >= 8) && (n_A_SHOULDER_DEF_PLUS >= 8)) {
            delay_time_reduction += 20 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「追撃者のリング」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TSUIGEKISHANO_RING)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_FATAL_MENUS) >= 10) {
            delay_time_reduction += 30 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「リングオブパズズ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_RING_OF_PAZUZU)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_RECOGNIZED_SPELL) >= 5) {
            delay_time_reduction += 30 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「戦乙女の羽耳」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_IKUSAOTOMENO_HANEMIMI)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_PRAEFATIO) >= 10) {
            delay_time_reduction += 15 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「スカルリング」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SCALL_RING)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_SOUL_ENERGY_KENKYU) >= 5) {
            delay_time_reduction += 30 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「インペリアルグローリー」の、素ＡＧＩと素ＶＩＴによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_GLORY)) > 0) {
        delay_time_reduction += 3 * Math.floor((SU_AGI + SU_VIT) / 50) * itemCount;
    }
    //----------------------------------------------------------------
    // 「パワードウィング」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_POWERED_WING)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_ARMS_CANNON) >= 5) {
            delay_time_reduction += 20 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「アーヌルス イラ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_ANULUS_IRA)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_TENKETSU_HAN) >= 5) {
            delay_time_reduction += 15 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「山岳ヘルメット」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_SANGAKU_HELMET)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_FAW_SILVER_SNIPER) >= 5) {
            delay_time_reduction += 10 * itemCount;
        }
        if (LearnedSkillSearch(SKILL_ID_AXE_BOOMERANG) >= 5) {
            delay_time_reduction += 10 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「正義の冠」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_SEIGINO_KANMURI)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_INSPIRATION) >= 5) {
            delay_time_reduction += 15 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「教授のミニグラス」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_KYOZYUNO_MINIGLASS)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_VACUUM_EXTREME) >= 5) {
            delay_time_reduction += 15 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「リングオブケリュネイア」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_RING_OF_CERYNEIA)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_WUG_RIDER) >= 3) {
            delay_time_reduction += 20 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「パワードインカム」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_POWERED_INCOME)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_NUTRAL_BARRIER) >= 3) {
            delay_time_reduction += 15 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「ファフニールヘルム」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_FAFNIR_HELM)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_DRAGON_TRAINING) >= 5) {
            delay_time_reduction += 20 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「赤い猫耳魔女帽子」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_AKAI_NEKOMIMI_MAZYO_BOSHI)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_PSYCHIC_WAVE) >= 5) {
            delay_time_reduction += 20 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「粛清の靴」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SHUKUSEINO_KUTSU)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_ORATIO) >= 10) {
            delay_time_reduction += 50 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「グレースカルティベイションコート」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_GRACE_CULTIVATION_COAT)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_HOWLING_OF_MANDRAGORA) >= 5) {
            delay_time_reduction += 15 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「ウルフオフィサーハット」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_WOLF_OFFICER_HAT)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_WUG_RIDER) >= 3) {
            delay_time_reduction += 20 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「厄災の魔将　古のウータンガードカードセット」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_SET_ID_ENCHANT_YAKUSAINO_MASHO_INISHIENO_WOOTANG_GUARD)) > 0) {
        delay_time_reduction += 1 * LearnedSkillSearch(SKILL_ID_SOUL_BREAKER) * cardCount;
        delay_time_reduction += 1 * LearnedSkillSearch(SKILL_ID_METEOR_ASSALT) * cardCount;
    }
    //----------------------------------------------------------------
    // 「厄災の魔将　封印された古のウータンガードカードセット」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_SET_ID_ENCHANT_YAKUSAINO_MASHO_FUINSARETA_INISHIENO_WOOTANG_GUARD)) > 0) {
        delay_time_reduction += 1 * Math.floor((LearnedSkillSearch(SKILL_ID_SOUL_BREAKER) + LearnedSkillSearch(SKILL_ID_METEOR_ASSALT)) / 3) * cardCount;
    }
    //----------------------------------------------------------------
    // 「ミリタリーグローブ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_MILITARY_GLOVE)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_MAGMA_ILLUPTION) >= 5) {
            delay_time_reduction += 30 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「改良型パワードスーツ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KAIRYOGATA_POWERED_SUIT)) > 0) {
        delay_time_reduction += 10 * LearnedSkillSearch(SKILL_ID_PILE_BUNKER) * itemCount;
    }
    //----------------------------------------------------------------
    // 「幻獣の耳」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_GENZYUNO_MIMI)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_RECOGNIZED_SPELL) >= 5) {
            delay_time_reduction += 15 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「ツインヘッド・ドラゴンメイル」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TWIN_HEAD_DRAGON_MAIL)) > 0) {
        delay_time_reduction += 6 * LearnedSkillSearch(SKILL_ID_DRAGON_TRAINING) * itemCount;
    }
    //----------------------------------------------------------------
    // 「ゾディアック　巨蟹宮のクラウン」セットの、職業による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_KYOKAIKYUNO_CROWN)) {
        if (IsSameJobClass(JOB_ID_MECHANIC)) {
            delay_time_reduction += 3 * n_A_HEAD_DEF_PLUS;
        }
    }
    //----------------------------------------------------------------
    // 「ゾディアック　巨蟹宮のシューズ」セットの、職業による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_KYOKAIKYUNO_SHOES)) {
        if (IsSameJobClass(JOB_ID_MECHANIC)) {
            delay_time_reduction += 4 * n_A_SHOES_DEF_PLUS;
        }
    }
    //----------------------------------------------------------------
    // 「ゾディアック　天秤宮のマント」セットの、職業による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_TENBINKYUNO_MANT)) {
        if (IsSameJobClass(JOB_ID_RUNEKNIGHT)) {
            delay_time_reduction += 2 * n_A_SHOULDER_DEF_PLUS;
        }
    }
    //----------------------------------------------------------------
    // 「ゾディアック　白羊宮のシューズ」セットの、職業による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_HAKUYOKYUNO_SHOES)) {
        if (IsSameJobClass(JOB_ID_ROYALGUARD)) {
            delay_time_reduction += 3 * n_A_SHOES_DEF_PLUS;
        }
    }
    //----------------------------------------------------------------
    // 「ゾディアック　プロキオンクラウン」セットの、職業による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_PROCYON_CROWN)) {
        if (IsSameJobClass(JOB_ID_SOUL_REAPER)) {
            delay_time_reduction += 3 * n_A_HEAD_DEF_PLUS;
        }
    }
    //----------------------------------------------------------------
    // 「ゾディアック　プロキオンマント」セットの、職業による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_PROCYON_MANT)) {
        if (IsSameJobClass(JOB_ID_SOUL_REAPER)) {
            delay_time_reduction += 2 * n_A_SHOULDER_DEF_PLUS;
        }
    }
    //----------------------------------------------------------------
    // 「ゾディアック　プロキオンマント」セットの、職業による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_PROCYON_SHOES)) {
        if (IsSameJobClass(JOB_ID_SOUL_REAPER)) {
            delay_time_reduction += 3 * n_A_SHOES_DEF_PLUS;
        }
    }
    //----------------------------------------------------------------
    // 「ゾディアック　宝瓶宮のマント」セットの、職業による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_HOBINKYUNO_MANT)) {
        if (IsSameJobClass(JOB_ID_WARLOCK)) {
            delay_time_reduction += 2 * n_A_SHOULDER_DEF_PLUS;
        }
    }
    //----------------------------------------------------------------
    // 「反逆の懐中時計」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_HANGYAKUNO_KAICHU_DOKEI)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_PLATINUM_ALTER) >= 5) {
            delay_time_reduction += 15 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「ミステリーウィング」の、素ステータスによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_MYSTERY_WING)) > 0) {
        if (GetTotalPureBasicStatus() >= 400) {
            delay_time_reduction += 15 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「ラウドパーク」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_LOUD_PARK)) > 0) {
        delay_time_reduction += 6 * LearnedSkillSearch(SKILL_ID_YASURAGINO_KOMORIUTA) * itemCount;
    }
    //----------------------------------------------------------------
    // 「妖魔のささやき」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_YOMANO_SASAYAKI)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_WEAPON_BLOCKING) >= 5) {
            delay_time_reduction += 20 * itemCount;
        }
    }
    //----------------------------------------------------------------
    // 「マジックコンプレッション」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_MAGIC_COMPRESSION)) > 0) {
        delay_time_reduction += 5 * LearnedSkillSearch(SKILL_ID_ELEMENTAL_SYMPASY) * itemCount;
    }
    //----------------------------------------------------------------
    // 「性能カスタマイズ」の、効果
    //----------------------------------------------------------------
    const confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_DELAY_DOWN);
    if (confval != 0) {
        delay_time_reduction += confval;
    }
	/**
	 * 「バード ブラギの詩」の効果
	 */
    if ((bufLv = g_confDataNizi[CCharaConfNizi.CONF_ID_POEMBRAGI]) > 0) {
        delay_time_reduction += 10 + 2 * bufLv;
    }
	// 拡張情報 > 詠唱/ディレイ 表示用に確保
	delayDownForDisp = delay_time_reduction;

    return Math.min(100, delay_time_reduction);
}

/**
 * キャラクタの基礎値に加えて
 * 公式サイトで「詠唱時間短縮 ◯%」と表記される変動詠唱時間の減少効果を適用した
 * 最終的な変動詠唱時間の割合を取得する
 * @returns {Number}
 */
function getVariableCastTimeRate() {

    // 詠唱ステータスから残余詠唱時間の割合を計算する
	const casting_status = Math.max(0, n_A_DEX) + Math.max(0, n_A_INT) / 2;
    let cast_common = 1 - Math.sqrt(casting_status / CAST_PARAM_BORDER);
    cast_common = Math.max(0, cast_common);

    /* 詠唱時間の軽減率 */
    let reduction_rate = 100;

	//----------------------------------------------------------------
    // ランダムエンチャント効果
    //----------------------------------------------------------------
    for (idx = ITEM_SP_SKILL_CAST_TIME; idx <= ITEM_SP_SKILL_CAST_TIME; idx++) {
        n_tok[idx] -= GetRndOptTotalValue(idx, null, false);
    }
    reduction_rate += n_tok[ITEM_SP_SKILL_CAST_TIME];

    if (GetLowerJobSeriesID(n_A_JOB) == 5 && CardNumSearch(CARD_SET_ID_JOBSET_MAGICIAN)) {
        reduction_rate -= 15;
    }
    if (GetHigherJobSeriesID(n_A_JOB) == 18 && CardNumSearch(CARD_SET_ID_JOBSET_SAGE)) {
        reduction_rate -= 15;
    }
    if (EquipNumSearch(ITEM_SET_ID_SPIRITUAL_RING_AND_STUFF)) {
        reduction_rate -= n_A_Weapon_ATKplus;
    }
    if (n_A_card[CARD_REGION_ID_HEAD_TOP] === CARD_ID_KATRINN) {
        reduction_rate -= n_A_HEAD_DEF_PLUS;
    }
    if (EquipNumSearch(ITEM_ID_BALLOON_HAT)) {
        reduction_rate -= n_A_HEAD_DEF_PLUS;
    }
    if (n_A_Weapon_ATKplus >= 9 && EquipNumSearch(ITEM_ID_GLORIOUS_ARK_WAND)) {
        reduction_rate -= 5;
    }
    if (n_A_Weapon_ATKplus >= 9 && EquipNumSearch(ITEM_ID_GLORIOUS_MOKUSHIROKU)) {
        reduction_rate -= 5;
    }
    if (SU_DEX >= 120 && EquipNumSearch(ITEM_ID_MARYOKUSEKI_NO_BOUSHI)) {
        reduction_rate -= 2;
    }
    if (n_A_Weapon_ATKplus >= 10 && EquipNumSearch(ITEM_SET_ID_SKULL_CAP_AND_WAND)) {
        reduction_rate -= 10;
    }
    if (EquipNumSearch(ITEM_SET_ID_RUNE_BOOTS_RUNE_STONE)) {
        reduction_rate -= Math.floor(n_A_SHOES_DEF_PLUS / 2);
    }
    if (n_A_HEAD_DEF_PLUS >= 7 && EquipNumSearch(ITEM_ID_MAJO_NO_BOUSHI)) {
        reduction_rate -= 5;
    }
    if (SU_DEX >= 80 && EquipNumSearch(ITEM_ID_HYPPATSUHYAKUCHUNO_OMAMORI)) {
        let wx = EquipNumSearch(ITEM_ID_HYPPATSUHYAKUCHUNO_OMAMORI);
        reduction_rate -= 1 * wx;
        if (SU_DEX >= 100) {
            reduction_rate -= 2 * wx;
        }
    }
    if (EquipNumSearch(ITEM_ID_STUFF_OF_PIERCING_CASTTIME_REDUCTION)) {
        if (n_A_Weapon_ATKplus >= 10) {
            reduction_rate -= 10;
        }
    }
    if (EquipNumSearch(ITEM_ID_KENSENO_OKAN) > 0) {
        if (LearnedSkillSearch(SKILL_ID_ONO_SHUREN) == 10 ||
            LearnedSkillSearch(SKILL_ID_ONO_SHUREN_MECHANIC) == 10) {
            reduction_rate -= 15;
        }
    }
    if (n_A_Weapon_ATKplus >= 10 && EquipNumSearch(ITEM_ID_GENTLEMAN_STUFF_CASTTIME_REDCTION)) {
        reduction_rate -= 20;
    }
    if (n_A_HEAD_DEF_PLUS >= 1 && EquipNumSearch(ITEM_ID_MANEKI_MOCHIHANA_CASTTIME_REDCTION)) {
        reduction_rate += -2 * n_A_HEAD_DEF_PLUS;
    }
    if (n_A_BODY_DEF_PLUS >= 9 && EquipNumSearch(ITEM_ID_GEFFEN_MAGIC_ROBE)) {
        reduction_rate += -5;
    }
    if (n_A_SHIELD_DEF_PLUS >= 9 && EquipNumSearch(ITEM_ID_LAFINE_SHIELD_CASTTIME_REDUCTION)) {
        if (n_A_Weapon_ATKplus >= 10) {
            reduction_rate += -10;
        }
    }
    if (n_A_BODY_DEF_PLUS >= 7 && EquipNumSearch(ITEM_ID_SHINSHI_FUKU)) {
        reduction_rate += -2;
    }
    if (EquipNumSearch(ITEM_ID_YUSHANO_MAGIC_COAT)) {
        if (n_A_BODY_DEF_PLUS % 2 === 0) {
            reduction_rate += (-1 * ROUNDDOWN(n_A_BODY_DEF_PLUS / 2));
        } else {
            reduction_rate += 20;
        }
    }
    if (EquipNumSearch(ITEM_ID_YUSHANO_NEPENTES_BOOTS)) {
        if (n_A_SHOES_DEF_PLUS >= 8) {
            reduction_rate += -5;
        }
        if (n_A_SHOES_DEF_PLUS >= 9) {
            reduction_rate += (-1 * (n_A_SHOES_DEF_PLUS - 8));
        }
    }
    if (CardNumSearch(CARD_ID_ENCHANT_SOUGYOKYU)) {
        if (n_A_HEAD_DEF_PLUS >= 7) {
            reduction_rate += -1 * CardNumSearch(CARD_ID_ENCHANT_SOUGYOKYU);
        }
        if (n_A_HEAD_DEF_PLUS >= 9) {
            reduction_rate += -1 * CardNumSearch(CARD_ID_ENCHANT_SOUGYOKYU);
        }
    }
    if (EquipNumSearch(ITEM_SET_ID_APPLAUSE_SANDAL_CROWN_CASTTIME_REDUCTION) || EquipNumSearch(ITEM_SET_ID_APPLAUSE_SANDAL_TIARA_CASTTIME_REDUCTION)) {
        reduction_rate += -1 * ROUNDDOWN((n_A_SHOES_DEF_PLUS + n_A_HEAD_DEF_PLUS) / 2);
    }

    //----------------------------------------------------------------
    // 「[衣装]ビギナー帽」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((itemCount = CostumeNumSearch(COSTUME_ID_BEGINNER_BO)) > 0) {
        if (n_A_BaseLV >= 99) {
            reduction_rate += 10;
        } else {
            switch (n_B_TAISEI[MOB_CONF_PLAYER_ID_SENTO_AREA]) {
                case MOB_CONF_PLAYER_ID_SENTO_AREA_GVG:
                case MOB_CONF_PLAYER_ID_SENTO_AREA_GVG_TE:
                case MOB_CONF_PLAYER_ID_SENTO_AREA_YE:
                case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_GVG_TE:
                case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_COLOSSEUM:
                case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_SHINKIRO:
                    reduction_rate += 10;
                    break;
                default:
                    reduction_rate += ROUNDDOWN(n_A_BaseLV / 10);
                    break;
            }
        }

    }
    if (EquipNumSearchMIG(ITEM_ID_CARDYUINO_MIMI)) {
        if (SU_DEX >= 108) {
            reduction_rate += -10;
        }
        if (SU_DEX >= 120) {
            reduction_rate += -5;
        }
    }

    //----------------------------------------------------------------
    // 「ヴァルキリーハンマー」の、職業による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_VALKYRIE_HAMMER)) {
        switch (GetLowerJobSeriesID(n_A_JOB)) {
            // ノービス系
            case JOB_SERIES_ID_NOVICE:
                reduction_rate -= 1 * ROUNDDOWN(n_A_Weapon_ATKplus / 2);
                break;
                // ソードマン系
            case JOB_SERIES_ID_SWORDMAN:
                break;
                // マーチャント系
            case JOB_SERIES_ID_MERCHANT:
                reduction_rate -= 1 * ROUNDDOWN(n_A_Weapon_ATKplus / 2);
                break;
            default:
                switch (GetHigherJobSeriesID(n_A_JOB)) {
                    // プリースト系
                    case JOB_SERIES_ID_PRIEST:
                        break;
                        // モンク系
                    case JOB_SERIES_ID_MONK:
                        break;
                }
        }
    }

    //----------------------------------------------------------------
    // 「サラのローブセット」の、＋７精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_HEAL_PIERCED_TELEPORT_PIERCED_SARANO_ROBE)) {
        if (n_A_BODY_DEF_PLUS >= 7) {
            reduction_rate -= 10;
        }
    }

    //----------------------------------------------------------------
    // 「おしゃべりオウム」の、効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_OSHABERI_OUMU)) {
        reduction_rate -= ROUNDDOWN(SU_INT / 30);
    }

    //----------------------------------------------------------------
    // 「熾天使の花冠」の、強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_SHITENSHINO_HANAKANMURI)) {
        reduction_rate += 1 * ROUNDDOWN(SU_INT / 8);
        if (SU_INT >= 108) {
            reduction_rate += 4;
        }
        if (SU_INT >= 120) {
            reduction_rate += 6;
        }
    }

    //----------------------------------------------------------------
    // 「サバイバルオーブ　ロッドセット」の、装備効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_SURVIVAL_ORB_SURVIVAL_ROD_DEX) ||
        EquipNumSearch(ITEM_SET_ID_SURVIVAL_ORB_SURVIVAL_ROD_INT)) {
        if (n_A_Weapon_ATKplus >= 10) {
            if (n_A_BaseLV <= 99) {
                reduction_rate -= 3;
            } else {
                reduction_rate -= 9;
            }
        }
    }

    //----------------------------------------------------------------
    // 「サバイバルオーブ　サークレットセット」の、装備効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_SURVIVAL_ORB_SURVIVAL_CIRCLET)) {
        if (n_A_HEAD_DEF_PLUS >= 7) {
            reduction_rate -= 6;
        }
        if (n_A_HEAD_DEF_PLUS >= 9) {
            reduction_rate -= 6;
        }
    }

    //----------------------------------------------------------------
    // 「堕天司祭の闇光外套」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_DATENSHISAINO_ANKOUGAITO)) {
        if (n_A_SHOULDER_DEF_PLUS >= 9) {
            reduction_rate -= 5;
        }
    }

    //----------------------------------------------------------------
    // 「魔呪のブーツ」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_MAZYUNO_BOOTS)) {
        if (n_A_SHOES_DEF_PLUS >= 7) {
            reduction_rate -= 10;
        }
    }

    //----------------------------------------------------------------
    // 「ガイアシールド」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_GAIA_SHIELD) > 0) {
        if (n_A_SHIELD_DEF_PLUS >= 8) {
            if (SU_DEX >= 90) {
                reduction_rate -= 5;
            }
        }
    }

    //----------------------------------------------------------------
    // 「暴徒のスカーフ　グラスセット」の、素ＩＮＴと素ＤＥＸによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_GLASS)) > 0) {
        reduction_rate -= 3 * ROUNDDOWN((SU_INT + SU_DEX) / 80) * itemCount;
    }

    //----------------------------------------------------------------
    // 「暴徒のスカーフ　サングラスセット」の、素ＩＮＴと素ＤＥＸによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_SUNGLASS)) > 0) {
        reduction_rate -= 3 * ROUNDDOWN((SU_INT + SU_DEX) / 80) * itemCount;
    }

    //----------------------------------------------------------------
    // 「リンドブルムの皮」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_LINDWURMNO_KAWA)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 8) {
            reduction_rate -= 2 * ROUNDDOWN((SU_AGI + SU_VIT) / 20) * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「火雷大神靴」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_HONOIKAZUCHINOOOKAMI_KUTSU)) > 0) {
        reduction_rate -= 1 * n_A_SHOES_DEF_PLUS * itemCount;
    }

    //----------------------------------------------------------------
    // 「海竜の鎧」の、過剰精錬による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KAIRYUNO_YOROI)) > 0) {
        let vartmp = 0;
        if (n_A_BODY_DEF_PLUS >= 7) vartmp += 5;
        if (n_A_BODY_DEF_PLUS >= 9) vartmp += 5;
        reduction_rate -= vartmp * itemCount;
    }

    //----------------------------------------------------------------
    // 「アネモスシールド」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_ANEMOS_SHIELD) > 0) {
        if (n_A_SHIELD_DEF_PLUS >= 8) {
            if (SU_DEX >= 90) {
                reduction_rate -= 5;
            }
        }
    }

    //----------------------------------------------------------------
    // 「降霊術士の外套」の、過剰精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_KOREIZYUTSUSHINO_GAITO)) {
        if (n_A_SHOULDER_DEF_PLUS >= 7) {
            reduction_rate -= 5;
        }
        if (n_A_SHOULDER_DEF_PLUS >= 9) {
            reduction_rate -= 5;
        }
    }

    //----------------------------------------------------------------
    // 「怨恨のカーリッツバーグカード」の、精錬による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_ENKONNO_KHALITZBURG, CARD_REGION_ID_HEAD_TOP_ANY)) > 0) {
        reduction_rate -= n_A_HEAD_DEF_PLUS;
    }

    //----------------------------------------------------------------
    // 「巨大樹の若葉　カルデュイの耳セット」の、素ＤＥＸによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KYODAIZYUNO_WAKABA_CARDYUINO_MIMI)) > 0) {
        if (SU_DEX >= 108) {
            reduction_rate += -3 * itemCount;
        }
        if (SU_DEX >= 120) {
            reduction_rate += -5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「天邪鬼の鬼面」の、素ＶＩＴよる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_AMANOZYAKUNO_KIMEN)) > 0) {
        reduction_rate += -1 * ROUNDDOWN(SU_VIT / 18) * itemCount;
    }

    //----------------------------------------------------------------
    // 「ニーヴバレッタ　ニーヴ武器セット」の、素ＤＥＸによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_NIEVE_VALLETTA_NIEVE_ARMS)) > 0) {
        reduction_rate -= 1 * ROUNDDOWN(SU_DEX / 10) * itemCount;
    }

    //----------------------------------------------------------------
    // 「スカラバハイヒール　ラフィネスタッフセット」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearchMIG(ITEM_SET_ID_SCARABA_HIGHHEEL_LAFINE_STUFF) > 0) {
        if (n_A_SHOES_DEF_PLUS >= 7) {
            reduction_rate -= 20;
        }
    }

    //----------------------------------------------------------------
    // 「熾天使の羽毛　熾天使の花冠セット」の、素ＩＮＴによる効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_SHITENSHINO_UMO_SHITENSHINO_HANAKANMURI)) {
        reduction_rate -= 1 * ROUNDDOWN(SU_INT / 8);
        if (SU_INT >= 108) {
            reduction_rate -= 4;
        }
        if (SU_INT >= 120) {
            reduction_rate -= 6;
        }
    }

    //----------------------------------------------------------------
    // 「古代龍の宝冠」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KODAIRYUNO_HOKAN)) > 0) {
        reduction_rate -= 1 * n_A_HEAD_DEF_PLUS * itemCount;
    }

    //----------------------------------------------------------------
    // 「猛炎と白魔の指輪」の、効果
    //----------------------------------------------------------------
    itemCountAccessary2 = EquipNumSearch(ITEM_ID_MOENTO_HAKUMANO_YUBIWA, EQUIP_REGION_ID_ACCESSARY_2);
    if (itemCountAccessary2 > 0) {
        reduction_rate -= 15 * itemCountAccessary2;
    }

    //----------------------------------------------------------------
    // 「不死鳥の冠」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_FUSHICHONO_KANMURI)) {
        if (n_A_HEAD_DEF_PLUS >= 7) {
            reduction_rate -= 5;
        }
        if (n_A_HEAD_DEF_PLUS >= 9) {
            reduction_rate -= 5;
        }
    }

    //----------------------------------------------------------------
    // 「猫じゃらしの模型」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        if (n_A_Weapon_ATKplus >= 8) {
            reduction_rate -= 5 * itemCountRight;
        }
        if (n_A_Weapon2_ATKplus >= 8) {
            reduction_rate -= 5 * itemCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「繊細な猫じゃらしの模型」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_SENSAINA_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_SENSAINA_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        if (n_A_Weapon_ATKplus >= 8) {
            reduction_rate -= 10 * itemCountRight;
        }
        if (n_A_Weapon2_ATKplus >= 8) {
            reduction_rate -= 10 * itemCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「大きな猫じゃらしの模型」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_OKINA_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_OKINA_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        if (n_A_Weapon_ATKplus >= 8) {
            reduction_rate -= 5 * itemCountRight;
        }
        if (n_A_Weapon2_ATKplus >= 8) {
            reduction_rate -= 5 * itemCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「精巧な猫じゃらしの模型」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_SEIKONA_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_SEIKONA_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        if (n_A_Weapon_ATKplus >= 8) {
            reduction_rate -= 10 * itemCountRight;
        }
        if (n_A_Weapon2_ATKplus >= 8) {
            reduction_rate -= 10 * itemCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「長い回復の猫じゃらし」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_NAGAI_KAIFUKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_NAGAI_KAIFUKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        if (n_A_Weapon_ATKplus >= 8) {
            reduction_rate -= 10 * itemCountRight;
        }
        if (n_A_Weapon2_ATKplus >= 8) {
            reduction_rate -= 10 * itemCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「豊富な回復の猫じゃらし」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_HOUFUNA_KAIFUKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_HOUFUNA_KAIFUKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        if (n_A_Weapon_ATKplus >= 8) {
            reduction_rate -= 10 * itemCountRight;
        }
        if (n_A_Weapon2_ATKplus >= 8) {
            reduction_rate -= 10 * itemCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「トンボがとまった猫じゃらし」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        if (n_A_Weapon_ATKplus >= 8) {
            reduction_rate -= 5 * itemCountRight;
        }
        if (n_A_Weapon2_ATKplus >= 8) {
            reduction_rate -= 5 * itemCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「トンボがとまった妙なる猫じゃらし」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_MYOUNARU_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_MYOUNARU_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        if (n_A_Weapon_ATKplus >= 8) {
            reduction_rate -= 5 * itemCountRight;
        }
        if (n_A_Weapon2_ATKplus >= 8) {
            reduction_rate -= 5 * itemCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「トンボがとまった神妙な猫じゃらし」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_SHINMYOUNA_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_SHINMYOUNA_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        if (n_A_Weapon_ATKplus >= 8) {
            reduction_rate -= 10 * itemCountRight;
        }
        if (n_A_Weapon2_ATKplus >= 8) {
            reduction_rate -= 10 * itemCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「トンボがとまった魔力の猫じゃらし」の、精錬による効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_MARYOKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_MARYOKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        if (n_A_Weapon_ATKplus >= 8) {
            reduction_rate -= 10 * itemCountRight;
        }
        if (n_A_Weapon2_ATKplus >= 8) {
            reduction_rate -= 10 * itemCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「魔力の草のネックレス」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_MARYOKUNO_KUSANO_NECKLACE)) > 0) {
        sklLv = 0;
        sklLv += LearnedSkillSearch(SKILL_ID_MATATABI_LANCE);
        sklLv += LearnedSkillSearch(SKILL_ID_MATATABINO_NEKKO);
        sklLv += LearnedSkillSearch(SKILL_ID_INUHAKKA_METEOR);
        sklLv += LearnedSkillSearch(SKILL_ID_INUHAKKA_SHOWER);
        sklLv += LearnedSkillSearch(SKILL_ID_CHATTERING);
        sklLv += LearnedSkillSearch(SKILL_ID_MYAUMYAU);
        sklLv += LearnedSkillSearch(SKILL_ID_NYAN_GRASS);
        reduction_rate += -1 * ROUNDDOWN(sklLv / 5) * itemCount;
    }

    //----------------------------------------------------------------
    // 「高級ドラムケープ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KOKYU_DORAM_CAPE)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 8) {
            reduction_rate -= 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「特選ドラムケープ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TOKUSEN_DORAM_CAPE)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 8) {
            reduction_rate -= 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「高級ドラムシューズ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KOKYU_DORAM_SHOES)) > 0) {
        if (n_A_SHOES_DEF_PLUS >= 8) {
            reduction_rate -= 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「特選ドラムシューズ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TOKUSEN_DORAM_SHOES)) > 0) {
        if (n_A_SHOES_DEF_PLUS >= 8) {
            reduction_rate -= 15 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「精霊王の宝冠」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SEREONO_HOKAN)) > 0) {
        reduction_rate -= 6 * LearnedSkillSearch(SKILL_ID_ELEMENTAL_SYMPASY) * itemCount;
    }

    //----------------------------------------------------------------
    // 「降霊術士のドレス　降霊術士の外套セット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KORE_ZYUTSUSHINO_DRESS_KORE_ZYUTSUSHINO_GAITO)) > 0) {
        reduction_rate -= 2 * n_A_SHOULDER_DEF_PLUS * itemCount;
    }

    //----------------------------------------------------------------
    // 「ヘヴンリーオーダー」の、素ＶＩＴによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_HEAVENLY_ORDER)) > 0) {
        reduction_rate -= 2 * Math.floor(SU_VIT / 18) * itemCount;
    }

    //----------------------------------------------------------------
    // 「降霊術士の手鏡　外套セット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KOREZYUTSUSHINO_TEKAGAMI_GAITO)) > 0) {
        if (n_A_SHIELD_DEF_PLUS >= 8) {
            reduction_rate -= 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「エンチャント　名誉のニーヴ(集中)」の、精錬による効果
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_SHUCHU, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_SHUCHU, CARD_REGION_ID_ARMS_LEFT_ANY);
    cardCountHeadTop = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_SHUCHU, CARD_REGION_ID_HEAD_TOP_ANY);
    cardCountShield = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_SHUCHU, CARD_REGION_ID_SHIELD_ANY);
    cardCountBody = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_SHUCHU, CARD_REGION_ID_BODY_ANY);
    cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_SHUCHU, CARD_REGION_ID_SHOULDER_ANY);
    cardCountShoes = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_SHUCHU, CARD_REGION_ID_SHOES_ANY);
    if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield +
        cardCountBody + cardCountShoulder + cardCountShoes > 0) {
        // 右手武器へのエンチャント
        let vartmp = 0;
        if (n_A_Weapon_ATKplus >= 7) vartmp -= 5;
        if (n_A_Weapon_ATKplus >= 9) vartmp -= 5;
        reduction_rate += vartmp * cardCountRight
        // 左手武器へのエンチャント
        vartmp = 0;
        if (n_A_Weapon2_ATKplus >= 7) vartmp -= 5;
        if (n_A_Weapon2_ATKplus >= 9) vartmp -= 5;
        reduction_rate += vartmp * cardCountLeft
        // 頭防具へのエンチャント
        vartmp = 0;
        if (n_A_HEAD_DEF_PLUS >= 7) vartmp -= 5;
        if (n_A_HEAD_DEF_PLUS >= 9) vartmp -= 5;
        reduction_rate += vartmp * cardCountHeadTop
        // 盾防具へのエンチャント
        vartmp = 0;
        if (n_A_SHIELD_DEF_PLUS >= 7) vartmp -= 5;
        if (n_A_SHIELD_DEF_PLUS >= 9) vartmp -= 5;
        reduction_rate += vartmp * cardCountShield
        // 体防具へのエンチャント
        vartmp = 0;
        if (n_A_BODY_DEF_PLUS >= 7) vartmp -= 5;
        if (n_A_BODY_DEF_PLUS >= 9) vartmp -= 5;
        reduction_rate += vartmp * cardCountBody
        // 肩防具へのエンチャント
        vartmp = 0;
        if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp -= 5;
        if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp -= 5;
        reduction_rate += vartmp * cardCountShoulder
        // 靴防具へのエンチャント
        vartmp = 0;
        if (n_A_SHOES_DEF_PLUS >= 7) vartmp -= 5;
        if (n_A_SHOES_DEF_PLUS >= 9) vartmp -= 5;
        reduction_rate += vartmp * cardCountShoes
        // アクセサリへのエンチャント
        // 精錬できないので処理不要
    }

    //----------------------------------------------------------------
    // 「獄エンチャント」の、職業による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_GOKU)) {
        // 職業限定の効果
        if (IsSameJobClass(JOB_ID_SORCERER)) {
            reduction_rate -= 15;
        }
    }

    //----------------------------------------------------------------
    // 「サーペンタリウス」の、職業による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_SERPENTARIUS, CARD_REGION_ID_HEAD_TOP)) > 0) {
        // 職業限定の効果
        if (IsSameJobClass(JOB_ID_SUMMONER)) {
            reduction_rate -= 1 * n_A_HEAD_DEF_PLUS * cardCount;
        }
    }

    //----------------------------------------------------------------
    // 「ホロウシューズ　ヴェルゼブブカードセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_HOROW_SHOES_VERSEVV_CARD)) > 0) {
        if (n_A_BaseLV <= 99) {
            reduction_rate -= 2 * n_A_SHOES_DEF_PLUS * itemCount;
        } else {
            reduction_rate -= 7 * n_A_SHOES_DEF_PLUS * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「アジダハーカの皮」の、ステータスによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_AZI_DAHAKANO_KAWA)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 8) {
            reduction_rate -= 2 * Math.floor((SU_VIT + SU_LUK) / 20) * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「イルシオンウィングI　スーツⅠセット」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_ILUSION_WING_1_SUIT_1)) > 0) {
        if (n_A_BaseLV >= 170) {
            reduction_rate -= 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ガーディアンオブソウル」の、素ＩＮＴと素ＤＥＸによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_GUARDIAN_OF_SOUL)) > 0) {
        reduction_rate -= 1 * Math.floor((SU_INT + SU_DEX) / 18) * itemCount;
    }

    //----------------------------------------------------------------
    // 「知覚増幅リング」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_CHIKAKU_ZOFUKU_RING)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_CLOUD_KILL) >= 5) {
            reduction_rate -= 15 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「リングオブパズズ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_RING_OF_PAZUZU)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_DRAIN_LIFE) >= 5) {
            reduction_rate -= 15 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「不死鳥のリング」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_FUSHICHONO_RING)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_INSPIRATION) >= 5) {
            reduction_rate -= 30 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「崇拝の指輪」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_SUHAINO_YUBIWA)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_OFFERTORIUM) >= 5) {
            reduction_rate -= 30 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「インペリアルサイキックローブ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_PSYCHIC_ROBE)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_CLOUD_KILL) >= 5) {
            reduction_rate -= 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「グレースサイキックローブ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_PSYCHIC_ROBE)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_CLOUD_KILL) >= 5) {
            reduction_rate -= 15 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「粛清の靴」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SHUKUSEINO_KUTSU)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_ORATIO) >= 10) {
            reduction_rate -= 50 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「覚醒ホロウシューズ　ヴェルゼブブカードセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSE_HOROW_SHOES_VERSEVV_CARD)) > 0) {
        if (n_A_BaseLV <= 99) {
            reduction_rate -= 2 * n_A_SHOES_DEF_PLUS * itemCount;
        } else {
            reduction_rate -= 7 * n_A_SHOES_DEF_PLUS * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「覚醒ホロウシューズ　封印されたヴェルゼブブカードセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSE_HOROW_SHOES_FUINSARETA_VERSEVV_CARD)) > 0) {
        // 重複セットは発動しない
        if (EquipNumSearch(ITEM_SET_ID_KAKUSE_HOROW_SHOES_VERSEVV_CARD_FUINSARETA_VERSEVV_CARD) == 0) {
            if (n_A_BaseLV <= 99) {
                reduction_rate -= 2 * n_A_SHOES_DEF_PLUS * itemCount;
            } else {
                reduction_rate -= 7 * n_A_SHOES_DEF_PLUS * itemCount;
            }
        }
    }

    //----------------------------------------------------------------
    // 「ホロウシューズ　封印されたヴェルゼブブカードセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_HOROW_SHOES_FUINSARETA_VERSEVV_CARD)) > 0) {
        if (n_A_BaseLV <= 99) {
            reduction_rate -= 1 * n_A_SHOES_DEF_PLUS * itemCount;
        } else {
            reduction_rate -= 2 * n_A_SHOES_DEF_PLUS * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「光輝」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KOKI)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_SENRYU_SHOTEN) >= 10) {
            reduction_rate -= 15 * itemCount;
        }
    }

    // MIGRATION 暫定措置
    g_ITEM_SP_SKILL_CAST_TIME_value_forCalcData = reduction_rate;

	/**
	 * 「バード ブラギの詩」の効果
	 */
    if ((bufLv = g_confDataNizi[CCharaConfNizi.CONF_ID_POEMBRAGI]) > 0) {
        reduction_rate -= 10 + 2 * bufLv;
    }

    if (TimeItemNumSearch(1)) {
        reduction_rate -= 50;
    }

    //----------------------------------------------------------------
    // 「ウォーロック　テレキネシスインテンス」の効果
    //----------------------------------------------------------------
    if (UsedSkillSearch(SKILL_ID_TELECHINESIS_INSTENCE) > 0) {
        reduction_rate -= 10;
    }

    //----------------------------------------------------------------
    // 「ソウルリーパー　妖精の魂」の、効果
    //----------------------------------------------------------------
    if ((bufLv = g_confDataSanzi[CCharaConfSanzi.CONF_ID_YOSENO_TAMASHI]) > 0) {
        reduction_rate -= 25 + 5 * bufLv;
    }

    //----------------------------------------------------------------
    // 「性能カスタマイズ」の、効果
    //----------------------------------------------------------------
    const confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_CAST_DOWN);
    if (confval != 0) {
        reduction_rate += -1 * confval;
    }

    // 表示用変数に退避
    n_CastCutForDisp = reduction_rate;

    // ステータスによる詠唱時間軽減率に、装備・ステータスによる軽減率を適用する
    reduction_rate = Math.max(0, reduction_rate);
    cast_common *= reduction_rate / 100;

    /**
     * サフラギウムの効果
     */
    if (g_confDataNizi[CCharaConfNizi.CONF_ID_SUFFRAGIUM]) {
        cast_common *= (100 - 15 * g_confDataNizi[CCharaConfNizi.CONF_ID_SUFFRAGIUM]) / 100;
    }

    //----------------------------------------------------------------
    // 「プロフェッサー　メモライズ」の効果
    //----------------------------------------------------------------
    if (UsedSkillSearch(SKILL_ID_MEMORIZE) > 0) {
        cast_common = cast_common / 2;
    }

    //----------------------------------------------------------------
    // 「影狼・朧　十六夜」の効果
    //----------------------------------------------------------------
    if (UsedSkillSearch(SKILL_ID_IZAYOI) > 0) {
        cast_common = cast_common / 2;
    }

    return cast_common;
}

/**
 * 公式サイトで「消費SP - ◯%」と表記される消費SP減少効果を適用した
 * 最終的な消費SP軽減率を取得する
 * @returns {Number}
 */
function getSPCostReductionRate() {
    let cost_reduction = n_tok[ITEM_SP_COST_DOWN];

    //----------------------------------------------------------------
    // ランダムエンチャント効果
    //----------------------------------------------------------------
    cost_reduction += GetRndOptTotalValue(ITEM_SP_COST_DOWN, null, false);


    if (EquipNumSearch(646)) {
        cost_reduction += (-2 * n_A_Weapon_ATKplus);
    }
    if (EquipNumSearch(765) && SU_DEX >= 70) {
        cost_reduction += 10;
    }
    if (EquipNumSearch(646) && n_A_Weapon_ATKplus >= 9) {
        cost_reduction += 20;
    }
    if (n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == 1078 || n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == 1079) {
        if (n_A_Weapon2_ATKplus >= 5) {
            cost_reduction += 5;
        }
        if (n_A_Weapon2_ATKplus >= 7) {
            cost_reduction += 5;
        }
    }
    if (n_A_Equip[EQUIP_REGION_ID_ARMS] == 1078 || n_A_Equip[EQUIP_REGION_ID_ARMS] == 1079) {
        if (n_A_Weapon_ATKplus >= 5) {
            cost_reduction += 5;
        }
        if (n_A_Weapon_ATKplus >= 7) {
            cost_reduction += 5;
        }
    }
    if (EquipNumSearch(ITEM_ID_STUFF_OF_ORD) && LearnedSkillSearch(SKILL_ID_DRAGONOLOGY) == 5) {
        cost_reduction += 15;
    }
    if (EquipNumSearch(1280) && n_A_HEAD_DEF_PLUS >= 3) {
        cost_reduction += n_A_HEAD_DEF_PLUS - 2;
    }
    if (EquipNumSearch(1414)) {
        if (n_A_HEAD_DEF_PLUS >= 7) {
            cost_reduction += 1;
        }
        if (n_A_HEAD_DEF_PLUS >= 9) {
            cost_reduction += 1;
        }
    }
    if (EquipNumSearch(1476) && n_A_Weapon_ATKplus >= 6) {
        cost_reduction += n_A_Weapon_ATKplus - 5;
    }
    if (EquipNumSearch(1760) && n_A_HEAD_DEF_PLUS >= 6) {
        cost_reduction += (n_A_HEAD_DEF_PLUS - 5) * 10;
    }
    if (SU_DEX >= 100 && EquipNumSearch(1787)) {
        cost_reduction += 5;
        if (SU_DEX >= 120) {
            cost_reduction += 5;
        }
    }
    if (EquipNumSearch(ITEM_ID_KENSENO_OKAN) && LearnedSkillSearch(SKILL_ID_RYOUTKEN_SHUREN) == 10) {
        cost_reduction += 5;
    }
    if (EquipNumSearch(ITEM_SET_ID_TORIKAINO_KAGITSUME_TORIKAINO_YUMIKAKE)) {
        cost_reduction += 2 * LearnedSkillSearch(SKILL_ID_BEAST_BANE);
    }
    if (EquipNumSearch(2208)) {
        cost_reduction += 2 * n_A_HEAD_DEF_PLUS;
    }
    if (n_A_BODY_DEF_PLUS >= 7 && EquipNumSearch(2250)) {
        cost_reduction += 5;
    }
    if (EquipNumSearch(2368) && n_A_SHOES_DEF_PLUS >= 8) {
        cost_reduction += (n_A_SHOES_DEF_PLUS - 7);
    }
    if (CardNumSearch(831)) {
        if (n_A_HEAD_DEF_PLUS >= 7) {
            cost_reduction += 2 * CardNumSearch(831);
        }
        if (n_A_HEAD_DEF_PLUS >= 9) {
            cost_reduction += 1 * CardNumSearch(831);
        }
    }
    if (SU_STR >= 108 && EquipNumSearch(2427)) {
        cost_reduction += 20;
        if (SU_STR >= 120) {
            cost_reduction += 30;
        }
    }
    if (n_A_SHOULDER_DEF_PLUS >= 3 && EquipNumSearch(2488)) {
        cost_reduction += 2 * ROUNDDOWN(n_A_SHOULDER_DEF_PLUS / 3);
    }
    //----------------------------------------------------------------
    // 「ドゥクス・ティアのティアラ」の、過剰精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_DOKUSTIANO_TIARA) && n_A_HEAD_DEF_PLUS >= 5) {
        cost_reduction += 3 * (n_A_HEAD_DEF_PLUS - 4);
    }
    //----------------------------------------------------------------
    // 「魔法石の恩恵」の、過剰精錬による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_MAHOSEKINO_ONKE)) > 0) {
        if (n_A_HEAD_DEF_PLUS >= 5) {
            cost_reduction += 25;
        }
        if (n_A_HEAD_DEF_PLUS >= 7) {
            cost_reduction += 25;
        }
        if (n_A_HEAD_DEF_PLUS >= 9) {
            cost_reduction += 25;
        }
    }
    //----------------------------------------------------------------
    // 「ヴァルキリーナイフ」の、職業による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE)) {
        switch (GetLowerJobSeriesID(n_A_JOB)) {
            case JOB_SERIES_ID_NOVICE:
            case JOB_SERIES_ID_MAGICIAN:
            case JOB_SERIES_ID_THIEF:
                break;
            default:
                if (GetHigherJobSeriesID(n_A_JOB) === JOB_SERIES_ID_HUNTER) {
                    cost_reduction += 5;
                }
        }
    }

    //----------------------------------------------------------------
    // 「テグリョン」の、過剰精錬による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TEGRYONG)) > 0) {
        if (n_A_Weapon_ATKplus >= 9) {
            cost_reduction += 20;
        }
    }
    if ((itemCount = EquipNumSearch(ITEM_ID_TEGRYONG_S2)) > 0) {
        if (n_A_Weapon_ATKplus >= 9) {
            cost_reduction += 20;
        }
    }

    //----------------------------------------------------------------
    // 「海竜の鎧」の、過剰精錬による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KAIRYUNO_YOROI)) > 0) {
        vartmp = 0;
        if (n_A_BODY_DEF_PLUS >= 7) {
            vartmp += 5;
        }
        if (n_A_BODY_DEF_PLUS >= 9) {
            vartmp += 5;
        }
        cost_reduction += vartmp * itemCount;
    }

    //----------------------------------------------------------------
    // 「用心棒のスーツ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_YOZINBONO_SUITS)) > 0) {
        vartmp = 0;
        if (n_A_BODY_DEF_PLUS >= 7) {
            vartmp += 5;
        }
        if (n_A_BODY_DEF_PLUS >= 9) {
            vartmp += 5;
        }
        cost_reduction += vartmp * itemCount;
    }

    //----------------------------------------------------------------
    // 「巡礼者の靴」の、精錬による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ZYUNREISHANO_KUTSU)) > 0) {
        vartmp = 0;
        if (n_A_SHOES_DEF_PLUS >= 5) {
            vartmp += 3;
        }
        if (n_A_SHOES_DEF_PLUS >= 7) {
            vartmp += 5;
        }
        cost_reduction += vartmp * itemCount;
    }

    //----------------------------------------------------------------
    // 「古びたドライバーバンド」の、精錬による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_FURUBITA_DRIVERBAND_KIRO)) > 0) {
        cost_reduction += 2 * n_A_HEAD_DEF_PLUS * itemCount;
    }
    if ((itemCount = EquipNumSearch(ITEM_ID_FURUBITA_DRIVERBAND_AKA)) > 0) {
        cost_reduction += 2 * n_A_HEAD_DEF_PLUS * itemCount;
    }

    //----------------------------------------------------------------
    // 「イリュージョンスタッフオブオルド」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_STUFF_OF_OLDE)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_DRAGONOLOGY) >= 5) {
            cost_reduction += 15 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「勇者のブローチ」の、職業による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_YUSHANO_BROACH)) > 0) {
        if (IsSameJobClass(JOB_ID_MECHANIC) || IsSameJobClass(JOB_ID_GENETIC)) {
            cost_reduction += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ブラックフェザー」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_BLACK_FEATHER)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_REPORDUCE) >= 10) {
            cost_reduction += 30 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ヘヴンリーオーダー」の、素ＩＮＴによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_HEAVENLY_ORDER)) > 0) {
        cost_reduction += 2 * Math.floor(SU_INT / 18) * itemCount;
    }

    //----------------------------------------------------------------
    // 「インペリアルガトリングスーツ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_GATLING_SUIT)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_FIRE_RAIN) >= 5) {
            cost_reduction += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「グレースガトリングスーツ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_GATLING_SUIT)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_FIRE_RAIN) >= 5) {
            cost_reduction += 20 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「崇拝の指輪」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_SUHAINO_YUBIWA)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_ORATIO) >= 10) {
            cost_reduction += 10 * itemCount;
        }
    }

    if (CardNumSearch(457) && GetHigherJobSeriesID(n_A_JOB) == 14) {
        cost_reduction += 20;
    }
    if (CardNumSearch(458) && GetHigherJobSeriesID(n_A_JOB) == 15) {
        cost_reduction += 10;
    }

	/**
	 * 「ダンサー　サービスフォーユー」の、効果
	 */
	if ((bufLv = g_confDataNizi[CCharaConfNizi.CONF_ID_SERVICEFORYOU]) > 0) {
	    cost_reduction += 10 + 2 * bufLv;
	}
	/**
	 * プレイヤー状態異常「メランコリー」の効果
	 */
	cost_reduction -= 20 * g_confDataDebuff[CCharaConfDebuff.CONF_ID_GLOOMYDAY];

	/**
	 * 「マナリチャージ」の効果
	 */
    cost_reduction += 4 * Math.max(LearnedSkillSearch(SKILL_ID_MANA_RECHARGE), UsedSkillSearch(SKILL_ID_MANA_RECHARGE));

    //----------------------------------------------------------------
    // 「性能カスタマイズ」の、効果
    //----------------------------------------------------------------
    const confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_COST_DOWN);
    if (confval != 0) {
        cost_reduction += confval;
    }

    costDownForDisp = cost_reduction;
    cost_reduction = Math.min(100, cost_reduction);
    cost_reduction = 100 - cost_reduction;

    if (UsedSkillSearch(SKILL_ID_RECOGNIZED_SPELL) > 0) {
        cost_reduction = cost_reduction * -1;
    }

    // オフェルトリウム
    if ((bufLv = UsedSkillSearch(SKILL_ID_OFFERTORIUM)) > 0) {
        // 特定の戦闘エリアでの補正
        switch (n_B_TAISEI[MOB_CONF_PLAYER_ID_SENTO_AREA]) {
            case MOB_CONF_PLAYER_ID_SENTO_AREA_YE_COLOSSEUM:
                cost_reduction = Math.floor(cost_reduction * (100 + 20 * bufLv) / 10) / 10;
                break;
            default:
                cost_reduction = Math.floor(cost_reduction * (200 + 20 * bufLv) / 10) / 10;
                break;
        }
    }

    return cost_reduction;
}

/**
 * 公式サイトで「クリティカル攻撃で与えるダメージ + ◯%」と表記されるダメージの増加率を取得する
 * @returns {Number}
 */
function getCriticalDamageRate() {
    let damage_ratio = n_tok[ITEM_SP_CRITICAL_DAMAGE_UP];

    damage_ratio += GetRndOptTotalValue(ITEM_SP_CRITICAL_DAMAGE_UP, null, false);

    if (EquipNumSearch(1089)) {
        damage_ratio += (2 * n_A_Weapon_ATKplus);
    }
    if (EquipNumSearch(1091)) {
        if (n_A_Weapon_ATKplus >= 5) {
            damage_ratio += 10;
        }
        if (n_A_Weapon_ATKplus >= 7) {
            damage_ratio += 10;
        }
    }
    if (EquipNumSearch(1358)) {
        if (n_A_Arrow == ARROW_ID_SURUDOI_YA) {
            damage_ratio += 5;
            if (n_A_HEAD_DEF_PLUS >= 7) {
                damage_ratio += 5;
            }
        }
    }
    if (n_A_BODY_DEF_PLUS >= 7 && n_A_SHOULDER_DEF_PLUS >= 7 && n_A_SHOES_DEF_PLUS >= 7 && EquipNumSearch(1591)) {
        damage_ratio += 15;
    }
    if (EquipNumSearch(1592)) {
        damage_ratio += n_A_SHOULDER_DEF_PLUS;
    }
    if (n_A_SHOULDER_DEF_PLUS >= 5 && EquipNumSearch(1631)) {
        damage_ratio += 3;
        if (n_A_SHOULDER_DEF_PLUS >= 7) {
            damage_ratio += 4;
        }
    }
    if (EquipNumSearch(1801)) {
        damage_ratio += 2 * n_A_Weapon_ATKplus;
    }
    if (n_A_SHOES_DEF_PLUS >= 7 && EquipNumSearch(1812)) {
        damage_ratio += 3;
    }

    if (EquipNumSearch(ITEM_ID_KENSENO_OKAN) && LearnedSkillSearch(SKILL_ID_KATAR_SHUREN) == 10) {
        damage_ratio += 20;
    }

    // 幸運の時空ブーツ
    if (n_A_SHOES_DEF_PLUS >= 3 && EquipNumSearch(1922)) {
        damage_ratio += 2 * ROUNDDOWN(n_A_SHOES_DEF_PLUS / 3);
    }
    if (SU_LUK >= 120 && EquipNumSearch(1922)) {
        damage_ratio += 30;
    }
    if (n_A_SHOES_DEF_PLUS >= 3 && EquipNumSearch(ITEM_ID_KOUNNO_ZIKU_BOOTS_S1)) {
        damage_ratio += 2 * ROUNDDOWN(n_A_SHOES_DEF_PLUS / 3);
    }
    if (SU_LUK >= 120 && EquipNumSearch(ITEM_ID_KOUNNO_ZIKU_BOOTS_S1)) {
        damage_ratio += 30;
    }

    if (SU_LUK >= 110 && EquipNumSearch(1951)) {
        damage_ratio += 1 * EquipNumSearch(1951);
    }
    if (n_A_BODY_DEF_PLUS >= 5 && EquipNumSearchMIG(2170)) {
        damage_ratio += 4;
        if (n_A_BODY_DEF_PLUS >= 7) {
            damage_ratio += 6;
        }
    }
    if (EquipNumSearch(2242)) {
        if (SU_LUK >= 108) {
            damage_ratio += 10;
        }
        if (SU_LUK >= 120) {
            damage_ratio += 17;
        }
        damage_ratio -= 2 * ROUNDDOWN(SU_DEX / 10);
    }
    if (n_A_SHOULDER_DEF_PLUS >= 5 && EquipNumSearch(2288)) {
        damage_ratio += 3;
        if (n_A_SHOULDER_DEF_PLUS >= 7) {
            damage_ratio += 4;
        }
    }
    if (GetLowerJobSeriesID(n_A_JOB) == 4 && EquipNumSearch(2517)) {
        damage_ratio += 15;
    }

    //----------------------------------------------------------------
    // 「戦死者のマント」の、純粋なＬＵＫが１３０の時
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_SENSHISHANO_MANT)) {
        if (SU_LUK >= 130) {
            if (EquipNumSearchFurubitaSet() > 0) {
                damage_ratio += 10;
            } else {
                damage_ratio += 5;
            }
        }
    }

    //----------------------------------------------------------------
    // 「蒼き夜光石」の、ステによる強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_AOKI_YAKOSEKI)) {
        if (SU_LUK >= 100) {
            damage_ratio += 10 * EquipNumSearch(ITEM_ID_AOKI_YAKOSEKI);
        }
    }

    //----------------------------------------------------------------
    // 「ヴァルキリーナイフ」の、職業による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE)) {
        switch (GetLowerJobSeriesID(n_A_JOB)) {
            // ノービス系
            case JOB_SERIES_ID_NOVICE:
                damage_ratio += 1 * n_A_Weapon_ATKplus * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE);
                break;
                // マジシャン系
            case JOB_SERIES_ID_MAGICIAN:
                break;
                // シーフ系
            case JOB_SERIES_ID_THIEF:
                damage_ratio += 1 * n_A_Weapon_ATKplus * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE, EQUIP_REGION_ID_ARMS);
                damage_ratio += 1 * n_A_Weapon2_ATKplus * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE, EQUIP_REGION_ID_ARMS_LEFT);
                break;
            default:
                switch (GetHigherJobSeriesID(n_A_JOB)) {
                    // ハンター系
                    case JOB_SERIES_ID_HUNTER:
                        break;
                        // バード系、ダンサー系
                    case JOB_SERIES_ID_BARD:
                    case JOB_SERIES_ID_DANCER:
                        break;
                }
        }
    }

    //----------------------------------------------------------------
    // 「ローラカード」の、強化
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_LOLA)) {
        if (n_A_WeaponType == ITEM_KIND_CLUB) {
            damage_ratio += (10 + 1 * n_A_Weapon_ATKplus) * CardNumSearch(CARD_ID_LOLA);
        }
    }

    //----------------------------------------------------------------
    // 「アヴェンジャージャマダハル」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_AVENGER_JAMADHAR)) {
        if (n_A_Weapon_ATKplus >= 5) {
            damage_ratio += 20;
        }
        if (n_A_Weapon_ATKplus >= 7) {
            damage_ratio += 20;
        }
    }

    //----------------------------------------------------------------
    // 「アヴェンジャーハンターボウ」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_AVENGER_HUNTERBOW)) {
        damage_ratio += 2 * n_A_Weapon_ATKplus;
    }

    //----------------------------------------------------------------
    // 「リス耳フード帽」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_RISUMIMI_HOODBO)) {
        if (n_A_HEAD_DEF_PLUS >= 5) {
            damage_ratio += 2;
        }
        if (n_A_HEAD_DEF_PLUS >= 7) {
            damage_ratio += 6;
        }
        if (n_A_HEAD_DEF_PLUS >= 9) {
            damage_ratio += 12;
        }
    }

    //----------------------------------------------------------------
    // 「ガイアシールド」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_GAIA_SHIELD) > 0) {
        if (n_A_SHIELD_DEF_PLUS >= 8) {
            if (SU_LUK >= 90) {
                damage_ratio += 5;
            }
        }
    }

    //----------------------------------------------------------------
    // 「反逆者のスカーフ」の、スキル習得による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_HANGYAKUSHANO_SCARF)) > 0) {
        damage_ratio += 3 * LearnedSkillSearch(SKILL_ID_DRAGON_TAIL) * itemCount;
    }

    //----------------------------------------------------------------
    // 「暴徒のスカーフ　グラスセット」の、素ＳＴＲと素ＬＵＫによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_GLASS)) > 0) {
        damage_ratio += 10 * ROUNDDOWN((SU_STR + SU_LUK) / 80) * itemCount;
    }

    //----------------------------------------------------------------
    // 「暴徒のスカーフ　サングラスセット」の、素ＳＴＲと素ＬＵＫによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_SUNGLASS)) > 0) {
        damage_ratio += 10 * ROUNDDOWN((SU_STR + SU_LUK) / 80) * itemCount;
    }

    //----------------------------------------------------------------
    // 「アネモスシールド」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_ANEMOS_SHIELD) > 0) {
        if (n_A_SHIELD_DEF_PLUS >= 8) {
            if (SU_LUK >= 90) {
                damage_ratio += 5;
            }
        }
    }

    //----------------------------------------------------------------
    // 「マラクの皮」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_MARRACONO_KAWA)) {
        if (n_A_SHOULDER_DEF_PLUS >= 7) {
            damage_ratio += 5;
        }
        if (n_A_SHOULDER_DEF_PLUS >= 9) {
            damage_ratio += 5;
        }
    }

    //----------------------------------------------------------------
    // 「くわえたハートのエース　ギャンブラーシールセット」の、素ＤＥＸによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KUWAETA_HEARTNO_ACE_GAMBLER_SEAL)) > 0) {
        damage_ratio += 2 * ROUNDDOWN(SU_DEX / 10) * itemCount;
    }

    //----------------------------------------------------------------
    // 「くわえたハートのエース　ギャンブラーシールセット」の、素ＬＵＫによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KUWAETA_HEARTNO_ACE_GAMBLER_SEAL)) > 0) {
        if (SU_LUK >= 108) {
            damage_ratio += 2 * itemCount;
        }
        if (SU_LUK >= 120) {
            damage_ratio += 4 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「灰羽のブーツ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_HAIHANENO_BOOTS)) > 0) {
        vartmp = 0;
        if (n_A_SHOES_DEF_PLUS >= 5) vartmp += 3;
        if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 5;
        damage_ratio += vartmp * itemCount;
    }

    //----------------------------------------------------------------
    // 「灰羽のブーツ　白羽スーツセット」の、素ＬＵＫによる強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_HAIHANENO_BOOTS_SHIRAHANO_SUITS)) > 0) {
        damage_ratio += 4 * ROUNDDOWN(SU_LUK / 20) * itemCount;
    }

    //----------------------------------------------------------------
    // 「不死の軍団認識票　リンディーホップセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_FUSHINO_GUNDAN_NINSHIKIHYO_LINDY_HOP)) > 0) {
        damage_ratio += 3 * n_A_Weapon_ATKplus * itemCount;
    }

    //----------------------------------------------------------------
    // 「イリュージョンカウンターダガー」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_COUNTER_DAGGER)) > 0) {
        if (n_A_BaseLV >= 170) {
            damage_ratio += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「キックアンドキックカード」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_KICK_AND_KICK)) {
        if (n_A_SHOES_DEF_PLUS >= 7) damage_ratio += 3;
        if (n_A_SHOES_DEF_PLUS >= 9) damage_ratio += 2;
    }

    //----------------------------------------------------------------
    // 「死のニーヴ(幸運)」の、精錬による効果
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_KOUN, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_KOUN, CARD_REGION_ID_ARMS_LEFT_ANY);
    cardCountHeadTop = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_KOUN, CARD_REGION_ID_HEAD_TOP_ANY);
    cardCountShield = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_KOUN, CARD_REGION_ID_SHIELD_ANY);
    cardCountBody = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_KOUN, CARD_REGION_ID_BODY_ANY);
    cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_KOUN, CARD_REGION_ID_SHOULDER_ANY);
    cardCountShoes = CardNumSearch(CARD_ID_ENCHANT_SHINO_NIEVE_KOUN, CARD_REGION_ID_SHOES_ANY);
    if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield +
        cardCountBody + cardCountShoulder + cardCountShoes > 0) {

        // 右手武器へのエンチャント
        vartmp = 0;
        if (n_A_Weapon_ATKplus >= 7) vartmp += 1;
        if (n_A_Weapon_ATKplus >= 9) vartmp += 1;
        damage_ratio += vartmp * cardCountRight

        // 左手武器へのエンチャント
        vartmp = 0;
        if (n_A_Weapon2_ATKplus >= 7) vartmp += 1;
        if (n_A_Weapon2_ATKplus >= 9) vartmp += 1;
        damage_ratio += vartmp * cardCountLeft

        // 頭防具へのエンチャント
        vartmp = 0;
        if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 1;
        if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 1;
        damage_ratio += vartmp * cardCountHeadTop

        // 盾防具へのエンチャント
        vartmp = 0;
        if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 1;
        if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 1;
        damage_ratio += vartmp * cardCountShield

        // 体防具へのエンチャント
        vartmp = 0;
        if (n_A_BODY_DEF_PLUS >= 7) vartmp += 1;
        if (n_A_BODY_DEF_PLUS >= 9) vartmp += 1;
        damage_ratio += vartmp * cardCountBody

        // 肩防具へのエンチャント
        vartmp = 0;
        if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 1;
        if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 1;
        damage_ratio += vartmp * cardCountShoulder

        // 靴防具へのエンチャント
        vartmp = 0;
        if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 1;
        if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 1;
        damage_ratio += vartmp * cardCountShoes

        // アクセサリへのエンチャント
        // 精錬できないので処理不要
    }

    //----------------------------------------------------------------
    // 「サイドライダーカード」の、素ＬＵＫによる効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_SIDE_RIDER)) > 0) {
        if (SU_LUK >= 120) {
            damage_ratio += 5 * cardCount;
        }
    }

    //----------------------------------------------------------------
    // 「フロンティアブーツ　物影セット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_FRONTIER_BOOTS_MONOKAGE)) > 0) {
        if (n_A_SHOES_DEF_PLUS >= 7) {
            damage_ratio += 30 * itemCount;
        }
        if (n_A_SHOES_DEF_PLUS >= 9) {
            damage_ratio += 20 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「スナイピングシューズ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SNIPING_SHOES)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_AIMED_BOLT) >= 10) {
            damage_ratio += 25 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「モイスラ-OS」の、ベースレベルによる効果
    //----------------------------------------------------------------
    itemCountRight = EquipNumSearch(ITEM_ID_MOISURA_OS, EQUIP_REGION_ID_ARMS);
    itemCountLeft = EquipNumSearch(ITEM_ID_MOISURA_OS, EQUIP_REGION_ID_ARMS_LEFT);
    if ((itemCountRight > 0) || (itemCountLeft > 0)) {
        damage_ratio += 1 * n_A_BaseLV * itemCountRight;
        damage_ratio += 1 * n_A_BaseLV * itemCountLeft;
    }

    //----------------------------------------------------------------
    // 「E-EA1Lカード」の、武器種別による効果
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_E_EA1L, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_E_EA1L, CARD_REGION_ID_ARMS_LEFT_ANY);
    if ((cardCountRight > 0) || (cardCountLeft > 0)) {
        if (n_A_WeaponType == ITEM_KIND_BOW) {
            damage_ratio += 1 * (10 + 1 * n_A_Weapon_ATKplus) * cardCountRight;
            damage_ratio += 1 * (10 + 1 * n_A_Weapon2_ATKplus) * cardCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「コトネスカード」の、武器種別による効果 クリティカルダメージUP
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_COTNESS, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_COTNESS, CARD_REGION_ID_ARMS_LEFT_ANY);
    if ((cardCountRight > 0) || (cardCountLeft > 0)) {
        if (n_A_WeaponType == ITEM_KIND_FIST) {
            damage_ratio += (10 + 1 * n_A_Weapon_ATKplus) * cardCountRight;
            damage_ratio += (10 + 1 * n_A_Weapon2_ATKplus) * cardCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「ペタルの尻尾　リス耳フード帽セット」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_PETALNO_SHIPPO_RISUMIMI_HOOD_BO)) {
        if (n_A_HEAD_DEF_PLUS >= 6) damage_ratio += 10;
        if (n_A_HEAD_DEF_PLUS >= 8) damage_ratio += 15;
    }

    //----------------------------------------------------------------
    // 「ミステリーウィング」の、素ステータスによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_MYSTERY_WING)) > 0) {
        damage_ratio += 5 * Math.floor(GetTotalPureBasicStatus() / 100) * itemCount;
    }

    //----------------------------------------------------------------
    // 「ハートハンターATカード」の、強化
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_HEART_HUNTER_AT, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_HEART_HUNTER_AT, CARD_REGION_ID_ARMS_LEFT_ANY);
    if ((cardCountRight > 0) || (cardCountLeft > 0)) {
        if (n_A_WeaponType == ITEM_KIND_KATAR) {
            damage_ratio += (10 + 1 * n_A_Weapon_ATKplus) * cardCountRight;
            damage_ratio += (10 + 1 * n_A_Weapon2_ATKplus) * cardCountLeft;
        }
    }

    if (GetLowerJobSeriesID(n_A_JOB) == 2 && n_A_card[CARD_REGION_ID_HEAD_TOP] == 624) damage_ratio += Math.floor(n_A_HEAD_DEF_PLUS / 2);
    if (CardNumSearch(738)) damage_ratio += 2 * ROUNDDOWN(SU_LUK / 10);
    if (EquipNumSearch(1357)) {
        if (EquipNumSearch(261)) n_tok[45] += 10;
        if (EquipNumSearch(1221)) n_tok[36] += 10;
        if (EquipNumSearch(364)) n_tok[30] += 10;
        if (EquipNumSearch(1023)) n_tok[37] += 10;
        if (EquipNumSearch(382)) n_tok[32] += 10;
    }

	/**
	 * 「ダンサー 幸運のキス」の効果
	 */
    if ((bufLv = g_confDataNizi[CCharaConfNizi.CONF_ID_FORTUNEKISS]) > 0) {
        damage_ratio += 5 + bufLv;
    }	

    /**
     * 「三次職支援　ラウダラムス」の効果
     */
    if ((bufLv = g_confDataSanzi[CCharaConfSanzi.CONF_ID_LAUDARAMUS]) > 0) {
        damage_ratio += [0, 6, 9, 12, 15][bufLv];
    }

    // TODO: 四次対応
    damage_ratio = ApplySpecModify(ITEM_SP_CRITICAL_DAMAGE_UP, damage_ratio);

    //----------------------------------------------------------------
    // 「性能カスタマイズ」の、効果
    //----------------------------------------------------------------
    const confval = g_objCharaConfCustomAtk.GetConf(CCharaConfCustomAtk.CONF_ID_CRITICAL_DAMAGE_UP);
    if (confval != 0) {
        damage_ratio += confval;
    }

    return damage_ratio;
}

/**
 * 公式サイトで「攻撃速度 + ◯%」と表記されるASPDの増加値を取得する
 * @returns {Number} ASPDが増加される％
 */
function GetAdditionalAspdPercent() {
	/** 最終的に返されるASPD増加率 */
    let tmp_percent = 0;
    let vartmp = 0;
    let sklLv = 0;
    let cardCountRight = 0;
    let cardCountLeft = 0;
    let cardCountHeadTop = 0;
    let cardCountShield = 0;
    let cardCountBody = 0;
    let cardCountShoulder = 0;
    let cardCountShoes = 0;
    //----------------------------------------------------------------
    // ランダムエンチャント効果
    //----------------------------------------------------------------
    for (let idx = ITEM_SP_ASPD_UP; idx <= ITEM_SP_ASPD_UP; idx++) {
        n_tok[idx] += GetRndOptTotalValue(idx, null, false);
    }

    tmp_percent += n_tok[ITEM_SP_ASPD_UP];
    if (EquipNumSearch(654)) tmp_percent += Math.floor(SU_AGI / 14);
    if (n_A_Equip[EQUIP_REGION_ID_ARMS] == 484 && SU_STR >= 50) tmp_percent += 5;
    if (EquipNumSearch(624)) tmp_percent += (n_A_Weapon_ATKplus);
    if (EquipNumSearch(641)) tmp_percent += n_A_Weapon_ATKplus;
    if (EquipNumSearch(903) && GetHigherJobSeriesID(n_A_JOB) == 13) tmp_percent += 20;
    if (SU_STR >= 77 && EquipNumSearch(944)) tmp_percent += 4;
    if (n_A_Weapon_ATKplus >= 7 && n_A_Equip[EQUIP_REGION_ID_ARMS] == 1077) tmp_percent += 10;
    if (n_A_Weapon2_ATKplus >= 7 && n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT] == 1077) tmp_percent += 10;
    if (n_A_Weapon_ATKplus >= 5 && EquipNumSearch(1081)) {
        tmp_percent += 5;
        if (n_A_Weapon_ATKplus >= 9) tmp_percent += 5;
    }
    if (n_A_Weapon_ATKplus >= 5 && EquipNumSearch(1086)) {
        tmp_percent += 5;
        if (n_A_Weapon_ATKplus >= 9) tmp_percent += 5;
    }
    if (n_A_Weapon_ATKplus >= 5 && EquipNumSearch(1088)) {
        tmp_percent += 5;
        if (n_A_Weapon_ATKplus >= 9) tmp_percent += 5;
    }

    if ((IsSameJobClass(JOB_ID_LORDKNIGHT) || IsSameJobClass(JOB_ID_RUNEKNIGHT)) && EquipNumSearch(855)) {
        tmp_percent -= 5;
    }

    if (EquipNumSearch(1121) && GetLowerJobSeriesID(n_A_JOB) == 2) tmp_percent += 3;
    if (SU_STR >= 95 && EquipNumSearch(1167)) tmp_percent += 3;
    if (n_A_HEAD_DEF_PLUS >= 2 && EquipNumSearch(1462)) tmp_percent += Math.floor(n_A_HEAD_DEF_PLUS / 2);
    if (n_A_BaseLV >= 80 && EquipNumSearch(1485)) {
        tmp_percent += 1;
        if (n_A_BaseLV >= 100) tmp_percent += 1;
        if (n_A_BaseLV >= 150) tmp_percent += 1;
    }
    if (SU_AGI >= 100 && EquipNumSearch(1525)) {
        let wx = EquipNumSearch(1525);
        tmp_percent += 2 * wx;
        if (SU_AGI >= 120) tmp_percent += 2 * wx;
    }
    if (EquipNumSearch(1644)) tmp_percent += n_A_Weapon_ATKplus;
    if (SU_AGI >= 108 && EquipNumSearch(1791)) tmp_percent += 1;
    if (n_A_Weapon_ATKplus >= 2 && EquipNumSearch(1821)) tmp_percent += Math.floor(n_A_Weapon_ATKplus / 2);
    if (n_A_BODY_DEF_PLUS >= 6 && EquipNumSearch(2059)) tmp_percent += n_A_BODY_DEF_PLUS - 5;
    if (EquipNumSearch(2254)) tmp_percent += n_A_Weapon_ATKplus;
    if (SU_VIT >= 108 && EquipNumSearch(2257)) tmp_percent += -5;
    if (n_A_HEAD_DEF_PLUS >= 7 && EquipNumSearch(2258)) tmp_percent += 5;
    if (n_A_BODY_DEF_PLUS >= 7 && EquipNumSearch(2345)) tmp_percent += 2;
    if (EquipNumSearch(1888) && LearnedSkillSearch(SKILL_ID_MACE_SHUREN) == 10) tmp_percent += 10;

    // 俊敏の時空ブーツ
    if (n_A_SHOES_DEF_PLUS >= 3 && EquipNumSearch(1919)) {
        tmp_percent += 3 * ROUNDDOWN(n_A_SHOES_DEF_PLUS / 3);
    }
    if (n_A_SHOES_DEF_PLUS >= 3 && EquipNumSearch(ITEM_ID_SHUNBINNO_ZIKU_BOOTS_S1)) {
        tmp_percent += 3 * ROUNDDOWN(n_A_SHOES_DEF_PLUS / 3);
    }

    if (n_A_HEAD_DEF_PLUS >= 1 && EquipNumSearch(2164)) tmp_percent += n_A_HEAD_DEF_PLUS;
    if (CardNumSearch(737)) {
        tmp_percent += 2 * ROUNDDOWN(SU_AGI / 10);
        if (EquipNumSearch(2415)) tmp_percent -= 2 * ROUNDDOWN(SU_AGI / 10);
    }
    if (n_A_SHIELD_DEF_PLUS >= 8 && EquipNumSearch(2241)) tmp_percent += -3;
    if (EquipNumSearch(2294)) tmp_percent += 6 * ROUNDDOWN(n_A_SHIELD_DEF_PLUS / 3);
    if (EquipNumSearch(2298)) tmp_percent += ROUNDDOWN(n_A_BaseLV / 20);
    if (CardNumSearch(825)) {
        if (n_A_HEAD_DEF_PLUS >= 7) tmp_percent += 1 * CardNumSearch(825);
        if (n_A_HEAD_DEF_PLUS >= 9) tmp_percent += 1 * CardNumSearch(825);
    }
    if (n_A_HEAD_DEF_PLUS >= 5 && TimeItemNumSearch(82)) {
        tmp_percent += 5;
        if (n_A_HEAD_DEF_PLUS >= 7) tmp_percent += 10;
        if (n_A_HEAD_DEF_PLUS >= 9) tmp_percent += 40;
    }

    // オウルバロンのマント　時限効果
    if (TimeItemNumSearch(TIME_ITEM_ID_AWL_BARRONNO_MANT)) {
        if (n_A_SHOULDER_DEF_PLUS >= 7) tmp_percent += 10;
        if (n_A_SHOULDER_DEF_PLUS >= 9) tmp_percent += 10;
        if (n_A_SHOULDER_DEF_PLUS >= 10) tmp_percent += 20;
    }

    if (n_A_SHOULDER_DEF_PLUS >= 5 && EquipNumSearch(2414)) {
        tmp_percent += 1 * ROUNDDOWN(SU_AGI / 10);
        if (n_A_SHOULDER_DEF_PLUS >= 7) tmp_percent += 1 * ROUNDDOWN(SU_AGI / 10);
    }
    if (EquipNumSearch(2456)) tmp_percent += n_A_Weapon_ATKplus;

    if (UsedSkillSearch(SKILL_ID_FIGHTING_SPIRIT) > 0) {
        if (EquipNumSearch(ITEM_ID_RUNE_HELM) > 0) {
            tmp_percent += 10;
        } else if (EquipNumSearch(ITEM_ID_ZYASPER_CIRCLET) > 0) {
            tmp_percent += 10;
        } else if (EquipNumSearch(ITEM_ID_TENBINKYUNO_DIADEM) > 0) {
            if (IsSameJobClass(JOB_ID_RUNEKNIGHT)) {
                tmp_percent += 10;
            }
        } else if (EquipNumSearch(ITEM_ID_FAFNIR_HELM) > 0) {
            tmp_percent += 10;
        }
    }

    //----------------------------------------------------------------
    // 「貴族の仮面」の、ベースレベル依存の効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_KIZOKUNO_KAMEN)) {
        if (n_A_BaseLV >= 100) {
            tmp_percent += 1;
        }
        if (n_A_BaseLV >= 150) {
            tmp_percent += 1;
        }
    }

    //----------------------------------------------------------------
    // 「ヴァルキリーハンマー」の、職業による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_VALKYRIE_HAMMER)) {
        switch (GetLowerJobSeriesID(n_A_JOB)) {
            // ノービス系
            case JOB_SERIES_ID_NOVICE:
                tmp_percent += 1 * n_A_Weapon_ATKplus;
                break;
                // ソードマン系
            case JOB_SERIES_ID_SWORDMAN:
                break;
                // マーチャント系
            case JOB_SERIES_ID_MERCHANT:
                break;
            default:
                switch (GetHigherJobSeriesID(n_A_JOB)) {
                    // プリースト系
                    case JOB_SERIES_ID_PRIEST:
                        tmp_percent += 1 * n_A_Weapon_ATKplus;
                        break;
                        // モンク系
                    case JOB_SERIES_ID_MONK:
                        break;
                }
        }
    }

    //----------------------------------------------------------------
    // 「古びたルーンサークレット」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_FURUBITA_RUNECIRCRET)) {
        tmp_percent += 1 * n_A_HEAD_DEF_PLUS;
    }

    //----------------------------------------------------------------
    // 「S-Atk　ライオットチップセット」の、効果
    // 「S-Matk　ライオットチップセット」の、効果
    // 「S-Avoid　ライオットチップセット」の、効果
    // 「S-MaxHP　ライオットチップセット」の、効果
    // 「S-Quick　ライオットチップセット」の、効果
    // 「S-Cri　ライオットチップセット」の、効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_RIOTCHIP_S_ATK) ||
        EquipNumSearch(ITEM_SET_ID_RIOTCHIP_S_MATK) ||
        EquipNumSearch(ITEM_SET_ID_RIOTCHIP_S_AVOID) ||
        EquipNumSearch(ITEM_SET_ID_RIOTCHIP_S_MAXHP) ||
        EquipNumSearch(ITEM_SET_ID_RIOTCHIP_S_QUICK) ||
        EquipNumSearch(ITEM_SET_ID_RIOTCHIP_S_CRI)
    ) {

        // ライオットチップとのセット効果
        tmp_percent += 1 * ROUNDDOWN(n_A_HEAD_DEF_PLUS / 2);
    }

    //----------------------------------------------------------------
    // 「セリーヌ・キミカード　ノーブルセット」の、精錬による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_CELINE_KIMI_NOBLE_CROSS)) {
        tmp_percent += 2 * n_A_Weapon_ATKplus;
    }

    //----------------------------------------------------------------
    // 「ヴァルキリーナイフ」の、職業による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE)) {
        switch (GetLowerJobSeriesID(n_A_JOB)) {
            // ノービス系
            case JOB_SERIES_ID_NOVICE:
                tmp_percent += 10 * n_A_Weapon_ATKplus * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE);
                break;
                // マジシャン系
            case JOB_SERIES_ID_MAGICIAN:
                break;
                // シーフ系
            case JOB_SERIES_ID_THIEF:
                break;
            default:
                switch (GetHigherJobSeriesID(n_A_JOB)) {
                    // ハンター系
                    case JOB_SERIES_ID_HUNTER:
                        break;
                        // バード系、ダンサー系
                    case JOB_SERIES_ID_BARD:
                    case JOB_SERIES_ID_DANCER:
                        tmp_percent += 10 * n_A_Weapon_ATKplus * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE);
                        break;
                }
        }
    }

    //----------------------------------------------------------------
    // 「与一の肩掛け」の、＋７以上精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_YOICHINO_KATAKAE)) {
        if (n_A_SHOULDER_DEF_PLUS >= 7) {
            tmp_percent += 3;
        }
        if (n_A_SHOULDER_DEF_PLUS >= 9) {
            tmp_percent += 3;
        }
    }

    //----------------------------------------------------------------
    // 「ガーディアンブースター」の、＋８以上精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_GUARDIAN_BOOSTER)) {
        if (n_A_SHOES_DEF_PLUS >= 8) {
            tmp_percent += (n_A_SHOES_DEF_PLUS - 7);
        }
    }

    //----------------------------------------------------------------
    // 「勇者の怒りセット」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_YUSHANOIKARI_ORCISH_AXE_ORCISH_SWORD)) {
        tmp_percent += 5 * ROUNDDOWN((n_A_Weapon_ATKplus + n_A_Weapon2_ATKplus) / 2);
    }

    //----------------------------------------------------------------
    // 「魔羊の咆哮　クレセントサイダーセット」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_MAHITSUZINO_HOKO_CRESCENT_CIZER)) {
        tmp_percent += 5 * n_A_Weapon_ATKplus;
    }

    //----------------------------------------------------------------
    // 「魔羊の咆哮　テグリョンセット」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_MAHITSUZINO_HOKO_TEGRYONG) ||
        EquipNumSearch(ITEM_SET_ID_MAHITSUZINO_HOKO_TEGRYONG_S2)) {
        tmp_percent += 5 * n_A_Weapon_ATKplus;
    }

    //----------------------------------------------------------------
    // 「古王の双刃」の、過剰精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_KOONO_SOZIN)) {
        if (n_A_Weapon_ATKplus >= 7) {
            tmp_percent += 5;
        }
        if (n_A_Weapon_ATKplus >= 9) {
            tmp_percent += 5;
        }
    }

    //----------------------------------------------------------------
    // 「アヴェンジャーブラッディロア」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_AVENGER_BLOODYROAR)) {
        if (n_A_Weapon_ATKplus >= 5) tmp_percent += 5;
        if (n_A_Weapon_ATKplus >= 7) tmp_percent += 5;
    }

    //----------------------------------------------------------------
    // 「セイヴザキング」の、騎兵修練【未習得】時における、「スピアクイッケン」習得による効果
    //----------------------------------------------------------------
    if (LearnedSkillSearch(SKILL_ID_KIHE_SHUREN) == 0) {
        if (EquipNumSearch(ITEM_ID_SAVE_THE_KING)) {
            tmp_percent += 3 * LearnedSkillSearch(SKILL_ID_SPEAR_QUICKEN);
        }
    }

    //----------------------------------------------------------------
    // 「魔呪のブーツ」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_MAZYUNO_BOOTS)) {
        if (n_A_SHOES_DEF_PLUS >= 7) {
            tmp_percent += 10;
        }
    }

    //----------------------------------------------------------------
    // 「ガイアシールド」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_GAIA_SHIELD) > 0) {
        if (n_A_SHIELD_DEF_PLUS >= 8) {
            if (SU_AGI >= 90) {
                tmp_percent += 5;
            }
        }
    }

    //----------------------------------------------------------------
    // 「反逆者のスカーフ」の、スキル習得による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_HANGYAKUSHANO_SCARF)) > 0) {
        tmp_percent += 2 * LearnedSkillSearch(SKILL_ID_MASS_SPIRAL) * itemCount;
    }

    //----------------------------------------------------------------
    // 「ガーディアンプロセッサ　パイルバンカーセット」の、過剰精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_GUARDIAN_PROCESSOR_PILEBUNKER)) {
        if (n_A_Weapon_ATKplus >= 7) {
            tmp_percent += 10;
        }
        if (n_A_Weapon_ATKplus >= 9) {
            tmp_percent += 10;
        }
    }

    //----------------------------------------------------------------
    // 「ガーディアンプロセッサ　ガーディアンブースターセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_GUARDIAN_PROCESSOR_GUARDIAN_BOOSTER)) > 0) {
        vartmp = 0;

        if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 5;
        if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 5;

        tmp_percent += vartmp * itemCount;
    }

    //----------------------------------------------------------------
    // 「エンチャント　名誉のニーヴ(迅速)」の、精錬による効果
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_ZINSOKU, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_ZINSOKU, CARD_REGION_ID_ARMS_LEFT_ANY);
    cardCountHeadTop = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_ZINSOKU, CARD_REGION_ID_HEAD_TOP_ANY);
    cardCountShield = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_ZINSOKU, CARD_REGION_ID_SHIELD_ANY);
    cardCountBody = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_ZINSOKU, CARD_REGION_ID_BODY_ANY);
    cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_ZINSOKU, CARD_REGION_ID_SHOULDER_ANY);
    cardCountShoes = CardNumSearch(CARD_ID_ENCHANT_MEIYONO_NIEVE_ZINSOKU, CARD_REGION_ID_SHOES_ANY);
    if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield +
        cardCountBody + cardCountShoulder + cardCountShoes > 0) {

        // 右手武器へのエンチャント
        vartmp = 0;
        if (n_A_Weapon_ATKplus >= 7) vartmp += 3;
        if (n_A_Weapon_ATKplus >= 9) vartmp += 2;
        tmp_percent += vartmp * cardCountRight

        // 左手武器へのエンチャント
        vartmp = 0;
        if (n_A_Weapon2_ATKplus >= 7) vartmp += 3;
        if (n_A_Weapon2_ATKplus >= 9) vartmp += 2;
        tmp_percent += vartmp * cardCountLeft

        // 頭防具へのエンチャント
        vartmp = 0;
        if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 3;
        if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 2;
        tmp_percent += vartmp * cardCountHeadTop

        // 盾防具へのエンチャント
        vartmp = 0;
        if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 3;
        if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 2;
        tmp_percent += vartmp * cardCountShield

        // 体防具へのエンチャント
        vartmp = 0;
        if (n_A_BODY_DEF_PLUS >= 7) vartmp += 3;
        if (n_A_BODY_DEF_PLUS >= 9) vartmp += 2;
        tmp_percent += vartmp * cardCountBody

        // 肩防具へのエンチャント
        vartmp = 0;
        if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 3;
        if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 2;
        tmp_percent += vartmp * cardCountShoulder

        // 靴防具へのエンチャント
        vartmp = 0;
        if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 3;
        if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 2;
        tmp_percent += vartmp * cardCountShoes

        // アクセサリへのエンチャント
        // 精錬できないので処理不要
    }

    //----------------------------------------------------------------
    // 「麒麟の角」の、素ＡＧＩによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KIRINNO_TSUNO)) > 0) {
        if (SU_AGI >= 100) {
            tmp_percent += 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「暴徒のスカーフ　グラスセット」の、素ＡＧＩと素ＶＩＴによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_GLASS)) > 0) {
        tmp_percent += 5 * ROUNDDOWN((SU_AGI + SU_VIT) / 80) * itemCount;
    }

    //----------------------------------------------------------------
    // 「暴徒のスカーフ　サングラスセット」の、素ＡＧＩと素ＶＩＴによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_SUNGLASS)) > 0) {
        tmp_percent += 5 * ROUNDDOWN((SU_AGI + SU_VIT) / 80) * itemCount;
    }

    //----------------------------------------------------------------
    // 「勇者の靴　達人の槌　セット」の、スキル習得による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_YUSHANO_KUTSU_TATSUZINNO_TSUCHI)) > 0) {
        tmp_percent += 1 * LearnedSkillSearch(SKILL_ID_DUPLELIGHT) * itemCount;
    }
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_YUSHANO_KUTSU_TATSUZINNO_TSUCHI_S2)) > 0) {
        tmp_percent += 1 * LearnedSkillSearch(SKILL_ID_DUPLELIGHT) * itemCount;
    }

    //----------------------------------------------------------------
    // 「業風石　ペオースグリーブセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_GOFUSEKI_PEORTH_GREEVE)) > 0) {
        vartmp = 0;
        if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 10;
        if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 10;
        tmp_percent += vartmp * itemCount;
    }

    //----------------------------------------------------------------
    // 「アネモスシールド」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_ANEMOS_SHIELD) > 0) {
        if (n_A_SHIELD_DEF_PLUS >= 8) {
            if (SU_AGI >= 90) {
                tmp_percent += 5;
            }
        }
    }

    //----------------------------------------------------------------
    // 「マラクの皮」の、素ＳＴＲと素ＬＵＫによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_MARRACONO_KAWA)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 8) {
            tmp_percent += 1 * ROUNDDOWN((SU_STR + SU_LUK) / 20) * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「守護騎士の首飾り　インペリアルセット」の、素ＡＧＩによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_SHUGOKISHINO_KUBIKAZARI_IMPERIAL_FEATHER)) > 0) {
        vartmp = 0;
        if (SU_AGI >= 108) vartmp += 5;
        if (SU_AGI >= 120) vartmp += 7;
        tmp_percent += vartmp * itemCount
    }

    //----------------------------------------------------------------
    // 「ケミカルグローブ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_CHEMICAL_GLOVE)) > 0) {
        tmp_percent += 1 * LearnedSkillSearch(SKILL_ID_CART_KAIZO) * itemCount;
    }

    //----------------------------------------------------------------
    // 「陣羽織」の、精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_ZINBAORI) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 7) tmp_percent += 3;
        if (n_A_SHOULDER_DEF_PLUS >= 9) tmp_percent += 3;
    }

    //----------------------------------------------------------------
    // 「Y.S.F.0.1.マント」の、精錬による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_YSF01_MANT)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 9) {
            tmp_percent += 15 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「天狗の下駄」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TENGUNO_GETA)) > 0) {
        if (sklLv = LearnedSkillSearch(SKILL_ID_TENKETSU_HAN)) {
            tmp_percent += 2 * sklLv * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「獄エンチャント」の、職業による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_GOKU)) {
        // 職業限定の効果
        if (IsSameJobClass(JOB_ID_MECHANIC)) {
            tmp_percent += 20;
        }
    }

    //----------------------------------------------------------------
    // 「太極の護符　灼熱の剣　デイヴィッドシールドセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_TAIKYOKUNO_GOFU_SHAKUNETSUNO_KEN_DIVID_SHIELD)) > 0) {
        tmp_percent += 4 * n_A_Weapon_ATKplus * itemCount;
    }

    //----------------------------------------------------------------
    // 「太極の護符　浄化の剣　デイヴィッドシールドセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_TAIKYOKUNO_GOFU_ZYOKANO_KEN_DIVID_SHIELD)) > 0) {
        tmp_percent += 4 * n_A_Weapon_ATKplus * itemCount;
    }

    //----------------------------------------------------------------
    // 「太極の護符　奈落の剣　デイヴィッドシールドセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_TAIKYOKUNO_GOFU_NARAKUNO_KEN_DIVID_SHIELD)) > 0) {
        tmp_percent += 4 * n_A_Weapon_ATKplus * itemCount;
    }

    //----------------------------------------------------------------
    // 「灰羽のブーツ　白羽スーツセット」の、精錬による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_HAIHANENO_BOOTS_SHIRAHANO_SUITS)) > 0) {
        if (n_A_BODY_DEF_PLUS >= 7) {
            tmp_percent += 8 * itemCount;
        }
        if (n_A_BODY_DEF_PLUS >= 9) {
            tmp_percent += 4 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「トップサイドライダーカード」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (cardcount = CardNumSearch(CARD_ID_TOP_SIDE_RIDER)) {
        switch (n_A_WeaponType) {
            case ITEM_KIND_STUFF:
            case ITEM_KIND_STUFF2HAND:
                // 杖系統のみの効果
                tmp_percent += 1 * n_A_Weapon_ATKplus * cardcount;
                break;
        }
    }

    //----------------------------------------------------------------
    // 「カニバラウスカード」の、素ＩＮＴによる効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_CARNIVARAUS)) > 0) {
        tmp_percent += 1 * ROUNDDOWN(SU_INT / 10) * cardCount;
    }

    //----------------------------------------------------------------
    // 「プラズマラットカード」の、素ＳＴＲによる効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_PLASMA_RAT)) > 0) {
        tmp_percent += 1 * ROUNDDOWN(SU_STR / 10) * cardCount;
    }

    //----------------------------------------------------------------
    // 「ラウンドライダーカード」の、素ＡＧＩによる効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_ROUND_RIDER)) > 0) {
        if (SU_AGI >= 120) {
            tmp_percent += 3 * cardCount;
        }
    }

    //----------------------------------------------------------------
    // 「自警団の弓」の、素ＩＮＴによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ZIKEIDANNO_YUMI)) > 0) {
        tmp_percent += 1 * ROUNDDOWN(SU_INT / 10) * itemCount;
    }

    //----------------------------------------------------------------
    // 「風魔手裏剣・花吹雪」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_FUMASHURIKEN_HANAFUBUKI)) > 0) {
        tmp_percent += 1 * n_A_Weapon_ATKplus * itemCount;
    }

    //----------------------------------------------------------------
    // 「ニーヴバレッタ　ニーヴ武器セット」の、素ＡＧＩによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_NIEVE_VALLETTA_NIEVE_ARMS)) > 0) {
        tmp_percent += 1 * ROUNDDOWN(SU_AGI / 10) * itemCount;
    }

    //----------------------------------------------------------------
    // 「名も無き剣士のブーツ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_NAMONAKI_KENNSHINO_BOOTS)) > 0) {
        tmp_percent += 1 * n_A_SHOES_DEF_PLUS * itemCount;
    }

    //----------------------------------------------------------------
    // 「神喰らいの龍槍」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KAMIKURAINO_RYUSO)) > 0) {
        tmp_percent += 2 * n_A_Weapon_ATKplus * itemCount;
    }

    //----------------------------------------------------------------
    // 「悪魔の手」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_AKUMANO_TE)) {
        if (n_A_HEAD_DEF_PLUS >= 7) {
            tmp_percent += 5;
        }
        if (n_A_HEAD_DEF_PLUS >= 9) {
            tmp_percent += 5;
        }
    }

    //----------------------------------------------------------------
    // 「日月神示」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_HITSUKISHINZI)) > 0) {
        tmp_percent += 1 * n_A_Weapon_ATKplus * itemCount;
    }

    //----------------------------------------------------------------
    // 「巡礼者の靴」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ZYUNREISHANO_KUTSU)) > 0) {
        if (sklLv = LearnedSkillSearch(SKILL_ID_CANTOCANDIDUS)) {
            tmp_percent += 4 * sklLv * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「新鮮な草のネックレス」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SHINSENNA_KUSANO_NECKLACE)) > 0) {
        sklLv = 0;
        sklLv += LearnedSkillSearch(SKILL_ID_PIKKI_TSUKI);
        sklLv += LearnedSkillSearch(SKILL_ID_ARCLOUSE_DASH);
        sklLv += LearnedSkillSearch(SKILL_ID_TAROUNO_KIZU);
        sklLv += LearnedSkillSearch(SKILL_ID_CARROT_BEAT);
        sklLv += LearnedSkillSearch(SKILL_ID_KEIKAI);
        sklLv += LearnedSkillSearch(SKILL_ID_MURENO_CHIKARA);
        sklLv += LearnedSkillSearch(SKILL_ID_SAVAGENO_TAMASHI);
        tmp_percent += 1 * ROUNDDOWN(sklLv / 5) * itemCount;
    }

    //----------------------------------------------------------------
    // 「高級ドラムスーツ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KOKYU_DORAM_SUITS)) > 0) {
        if (n_A_BODY_DEF_PLUS >= 7) {
            tmp_percent += 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「特選ドラムスーツ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TOKUSEN_DORAM_SUITS)) > 0) {
        if (n_A_BODY_DEF_PLUS >= 7) {
            tmp_percent += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「高級ドラムケープ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KOKYU_DORAM_CAPE)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 7) {
            tmp_percent += 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「特選ドラムケープ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TOKUSEN_DORAM_CAPE)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 7) {
            tmp_percent += 15 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「高級ドラムシューズ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_KOKYU_DORAM_SHOES)) > 0) {
        if (n_A_SHOES_DEF_PLUS >= 7) {
            tmp_percent += 5 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「特選ドラムシューズ」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TOKUSEN_DORAM_SHOES)) > 0) {
        if (n_A_SHOES_DEF_PLUS >= 7) {
            tmp_percent += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「トラベラーシューズ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_TRAVELER_SHOES)) > 0) {
        tmp_percent += 4 * LearnedSkillSearch(SKILL_ID_HARMONIZE) * itemCount;
    }

    //----------------------------------------------------------------
    // 「リーブラ」の、職業による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_LIBRA, CARD_REGION_ID_HEAD_TOP)) {
        // 職業限定の効果
        if (IsSameJobClass(JOB_ID_RUNEKNIGHT)) {
            tmp_percent += 1 * n_A_HEAD_DEF_PLUS;
        }
    }

    //----------------------------------------------------------------
    // 「勇者のブローチ」の、職業による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_YUSHANO_BROACH)) > 0) {
        if (IsSameJobClass(JOB_ID_ARCBISHOP) || IsSameJobClass(JOB_ID_SHURA)) {
            tmp_percent += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「フローズヴィトニルの鎖　ヴァナルガンドの兜セット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_FROZVITNIRNO_KUSARI_VANARGANDNO_KABUTO)) > 0) {
        if (n_A_HEAD_DEF_PLUS >= 6) {
            tmp_percent += 5 * itemCount;
        }
        if (n_A_HEAD_DEF_PLUS >= 8) {
            tmp_percent += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「フルフォース　ドッペルゲンガーカードセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_FULL_FORCE_DOPPELGANGER_CARD)) > 0) {
        if (n_A_BaseLV <= 99) {
            tmp_percent += 2 * n_A_Weapon_ATKplus * itemCount;
        } else {
            tmp_percent += 5 * n_A_Weapon_ATKplus * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ヘヴンリーオーダー」の、素ＤＥＸによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_HEAVENLY_ORDER)) > 0) {
        tmp_percent += 2 * Math.floor(SU_DEX / 18) * itemCount;
    }

    //----------------------------------------------------------------
    // 「虹色のマフラー」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_NIZIIRONO_MUFFLER)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_FRIGNO_UTA) >= 5) {
            tmp_percent += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「虹色のねこじゃらし　レインボウセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_NIZIIRONO_NEKOZYARASHI_RAIN_BO)) > 0) {
        tmp_percent += 2 * n_A_HEAD_DEF_PLUS * itemCount;
    }

    //----------------------------------------------------------------
    // 「古のメガリスカード」の、素ＬＵＫによる効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_INISHIENO_MEGLIS)) > 0) {
        tmp_percent += 1 * Math.floor(SU_LUK / 10) * cardCount;
    }

    //----------------------------------------------------------------
    // 「古のウータンシューターカード」の、素ＬＵＫによる効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_INISHIENO_WOOTANG_SHOOTER)) > 0) {
        tmp_percent += 1 * Math.floor(SU_LUK / 10) * cardCount;
    }

    //----------------------------------------------------------------
    // 「八卦の封呪」の、素ＩＮＴと素ＤＥＸによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_HAKKEINO_FUZYU)) > 0) {
        tmp_percent += 2 * ROUNDDOWN((SU_INT + SU_DEX) / 50) * itemCount;
    }

    //----------------------------------------------------------------
    // 「フロンティアブーツ　自警団の弓セット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_FRONTIER_BOOTS_ZIKEDANNO_YUMI)) > 0) {
        if (n_A_SHOES_DEF_PLUS >= 7) {
            tmp_percent += 6 * ROUNDDOWN(SU_INT / 40) * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「フロンティアブーツ　物影セット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_FRONTIER_BOOTS_MONOKAGE)) > 0) {
        if (n_A_SHOES_DEF_PLUS >= 9) {
            tmp_percent += 20 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ふわふわタンポポシューズ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_FUWAFUWA_TANPOPO_SHOES)) > 0) {
        tmp_percent += 5 * LearnedSkillSearch(SKILL_ID_CHATTERING) * itemCount;
    }

    //----------------------------------------------------------------
    // 「悪鬼羅刹の指輪」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_AKKI_RASETSUNO_YUBIWA)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_RAIKODAN) >= 5) {
            tmp_percent += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「アジダハーカの皮」の、ステータスによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_AZI_DAHAKANO_KAWA)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 8) {
            tmp_percent += 2 * Math.floor((SU_VIT + SU_LUK) / 20) * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ぷりちーウリボウシューズ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_PRETTY_URIBO_SHOES)) > 0) {
        tmp_percent += 5 * LearnedSkillSearch(SKILL_ID_KEIKAI) * itemCount;
    }

    //----------------------------------------------------------------
    // 「ジャガーノート」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_JAGUAR_NOTE)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_FALLIN_ANGEL) >= 1) {
            tmp_percent += 20 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ギガンテスカード」の、斧系統の効果
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_GIGANTES, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_GIGANTES, CARD_REGION_ID_ARMS_LEFT_ANY);
    if (cardCountRight > 0) {
        if ((n_A_WeaponType == ITEM_KIND_AXE) || (n_A_WeaponType == ITEM_KIND_AXE_2HAND)) {
            tmp_percent += 3 * cardCountRight;
        }
    }
    if (cardCountLeft > 0) {
        if ((n_A_Weapon2Type == ITEM_KIND_AXE) || (n_A_Weapon2Type == ITEM_KIND_AXE_2HAND)) {
            tmp_percent += 3 * cardCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「イリュージョンテグリョン　魔羊の咆哮セット」の、精錬による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_ILLUSION_TEGRYONG_MAHITSUZINO_HOKO)) {
        tmp_percent += 5 * n_A_Weapon_ATKplus;
    }

    //----------------------------------------------------------------
    // 「イリュージョンミリタリーブーツ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_MILITARY_BOOTS)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_FAW_MAGIC_DECOY) >= 5) {
            tmp_percent += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ガーディアンオブソウル」の、素ＡＧＩと素ＶＩＴによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_GUARDIAN_OF_SOUL)) > 0) {
        tmp_percent += 2 * Math.floor((SU_AGI + SU_VIT) / 18) * itemCount;
    }

    //----------------------------------------------------------------
    // 「黒無常帽　覚醒ローブセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KUROMUZYO_BO_KAKUSEI_ROBE)) > 0) {
        tmp_percent += 1 * n_A_BODY_DEF_PLUS * itemCount;
    }

    //----------------------------------------------------------------
    // 「精神拡張リング」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SEISHIN_KAKUCHO_RING)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_HELL_INFERNO) >= 5) {
            tmp_percent += 15 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ぴかぴかニャンニャンクラウン」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_PIKAPIKA_NYANNYAN_CROWN)) > 0) {
        tmp_percent += 3 * LearnedSkillSearch(SKILL_ID_CHATTERING) * itemCount;
    }

    //----------------------------------------------------------------
    // 「よちよちウリボウスタイ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_YOCHIYOCHI_URIBO_SUTAI)) > 0) {
        tmp_percent += 2 * LearnedSkillSearch(SKILL_ID_KEIKAI) * itemCount;
    }

    //----------------------------------------------------------------
    // 「試験管ブーツ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SHIKENKAN_BOOTS)) > 0) {
        tmp_percent += 4 * LearnedSkillSearch(SKILL_ID_CART_BOOST_WS) * itemCount;
        tmp_percent += 4 * LearnedSkillSearch(SKILL_ID_CART_BOOST_GENETIC) * itemCount;
    }

    //----------------------------------------------------------------
    // 「スカルリング」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_SCALL_RING)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_TAMASHINO_CHIKUSEKI) >= 5) {
            tmp_percent += 15 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「不死鳥のリング」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_FUSHICHONO_RING)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_FORCE_OF_BANGUARD) >= 5) {
            tmp_percent += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「あざといケロケロカッパ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_AZATOI_KEROKERO_KAPPA)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_CHATTERING) >= 5) {
            tmp_percent += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ジャスパーリング」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_ZYASPER_RING)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_SONIC_WAVE) >= 10) {
            tmp_percent += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「崇拝の指輪」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_SUHAINO_YUBIWA)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_ADORAMUS) >= 10) {
            tmp_percent += 15 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「正義の冠」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_SEIGINO_KANMURI)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_DEBOTION) >= 5) {
            tmp_percent += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「インペリアル天地スーツ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_TENCHI_SUIT)) > 0) {
        tmp_percent += 1 * LearnedSkillSearch(SKILL_ID_TENKETSU_HAN) * itemCount;
    }

    //----------------------------------------------------------------
    // 「グレース天地スーツ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_TENCHI_SUIT)) > 0) {
        tmp_percent += 2 * LearnedSkillSearch(SKILL_ID_TENKETSU_HAN) * itemCount;
    }

    //----------------------------------------------------------------
    // 「メタルピック」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_METAL_PICK)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_YASURAGINO_KOMORIUTA) >= 5) {
            tmp_percent += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「パラケルススグローブ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_PARACELSUS_GLOVE)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_CART_BOOST_GENETIC) >= 5) {
            tmp_percent += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「深海のセドラカード」の、楽器・鞭系統の効果
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_SHINKAINO_CEDORA, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_SHINKAINO_CEDORA, CARD_REGION_ID_ARMS_LEFT_ANY);
    if (cardCountRight > 0) {
        if ((n_A_WeaponType == ITEM_KIND_MUSICAL) || (n_A_WeaponType == ITEM_KIND_WHIP)) {
            tmp_percent += 3 * cardCountRight;
        }
    }
    if (cardCountLeft > 0) {
        if ((n_A_Weapon2Type == ITEM_KIND_MUSICAL) || (n_A_Weapon2Type == ITEM_KIND_WHIP)) {
            tmp_percent += 3 * cardCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「インペリアルコンフィデンシャルメイル」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_IMPERIAL_CONFIDENCIAL_MAIL)) > 0) {
        tmp_percent += 1 * Math.floor(LearnedSkillSearch(SKILL_ID_SONIC_WAVE) / 3) * itemCount;
    }

    //----------------------------------------------------------------
    // 「グレースコンフィデンシャルメイル」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_GRACE_CONFIDENCIAL_MAIL)) > 0) {
        tmp_percent += 1 * LearnedSkillSearch(SKILL_ID_SONIC_WAVE) * itemCount;
    }

    //----------------------------------------------------------------
    // 「ウルフオフィサーハット」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_WOLF_OFFICER_HAT)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_AIMED_BOLT) >= 10) {
            tmp_percent += 15 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「覚醒フルフォース　ドッペルゲンガーカードセット」の、ベースレベルと精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSE_FULL_FORCE_DOPPELGANGER_CARD)) > 0) {
        if (n_A_BaseLV <= 99) {
            tmp_percent += 2 * n_A_Weapon_ATKplus * itemCount;
        } else {
            tmp_percent += 5 * n_A_Weapon_ATKplus * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「覚醒フルフォース　封印されたドッペルゲンガーカードセット」の、ベースレベルと精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSE_FULL_FORCE_FUINSARETA_DOPPELGANGER_CARD)) > 0) {
        if (n_A_BaseLV <= 99) {
            tmp_percent += 2 * n_A_Weapon_ATKplus * itemCount;
        } else {
            tmp_percent += 5 * n_A_Weapon_ATKplus * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「フルフォース　封印されたドッペルゲンガーカードセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_FULL_FORCE_FUINSARETA_DOPPELGANGER_CARD)) > 0) {
        if (n_A_BaseLV <= 99) {
            tmp_percent += 1 * n_A_Weapon_ATKplus * itemCount;
        } else {
            tmp_percent += 2 * n_A_Weapon_ATKplus * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ミリタリーグローブ」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_MILITARY_GLOVE)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_AXE_BOOMERANG) >= 5) {
            tmp_percent += 10 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「怨霊怪異の耳」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ONRYO_KAIINO_MIMI)) > 0) {
        if (LearnedSkillSearch(SKILL_ID_RAIKODAN) >= 5) {
            tmp_percent += 15 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ゾディアック　白羊宮のマント」セットの、職業による効果
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_HAKUYOKYUNO_MANT)) {
        if (IsSameJobClass(JOB_ID_ROYALGUARD)) {
            tmp_percent += 2 * n_A_SHOULDER_DEF_PLUS;
        }
    }

    //----------------------------------------------------------------
    // 「エレメンタルポゼッション」の、スキル習得による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_ELEMENTAL_POSSESSION)) > 0) {
        tmp_percent += 1 * LearnedSkillSearch(SKILL_ID_SUMMON_AGNI) * itemCount;
        tmp_percent += 1 * LearnedSkillSearch(SKILL_ID_SUMMON_AQUA) * itemCount;
        tmp_percent += 1 * LearnedSkillSearch(SKILL_ID_SUMMON_VENTOS) * itemCount;
        tmp_percent += 1 * LearnedSkillSearch(SKILL_ID_SUMMON_TERA) * itemCount;
    }

    //----------------------------------------------------------------
    // 「魔力中毒プラガカード」の、斧系統の効果
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_MARYOKU_CHUDOKU_PLAGA, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_MARYOKU_CHUDOKU_PLAGA, CARD_REGION_ID_ARMS_LEFT_ANY);
    if (cardCountRight > 0) {
        if (n_A_WeaponType == ITEM_KIND_FIST) {
            tmp_percent += 3 * cardCountRight;
        }
    }
    if (cardCountLeft > 0) {
        if (n_A_Weapon2Type == ITEM_KIND_FIST) {
            tmp_percent += 3 * cardCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「ミステリーウィング」の、素ステータスによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearchMIG(ITEM_ID_MYSTERY_WING)) > 0) {
        if (GetTotalPureBasicStatus() >= 400) {
            tmp_percent += 15 * itemCount;
        }
    }

    // MIGRATION 暫定措置
    g_ITEM_SP_ASPD_UP_value_forCalcData = tmp_percent;

    if (n_A_PassSkill7[22]) tmp_percent += 10;

	/**
	 * 「バード 楽器の練習」の、効果
	 */
	if ((sklLv = Math.max(LearnedSkillSearch(SKILL_ID_GAKKINO_RENSHU), UsedSkillSearch(SKILL_ID_GAKKINO_RENSHU))) > 0) {
		if(n_A_WeaponType === ITEM_KIND_MUSICAL) {
			tmp_percent += Math.round(0.5 * sklLv);
		}
	}

    //----------------------------------------------------------------
    // 「三次職支援　ペインキラー」の効果
    //----------------------------------------------------------------
    tmp_percent -= 10 * g_confDataSanzi[CCharaConfSanzi.CONF_ID_PAIN_KILLER];
	
	/** 二次職支援設定「夕陽のアサシンクロス」の効果 */
	if ((skilLv = g_confDataNizi[CCharaConfNizi.CONF_ID_ASSASSINCROSS]) > 0) {
		tmp_percent += 10 + 2 * skilLv;
	}

	/**
	 * プレイヤー状態異常「私を忘れないで…」の効果
	 */
	if (g_confDataDebuff[CCharaConfDebuff.CONF_ID_DONTFORGETME] > 0) {
		tmp_percent -= 5 + g_confDataDebuff[CCharaConfDebuff.CONF_ID_DONTFORGETME];
	}
	/**
	 * プレイヤー状態異常「メランコリー」の効果
	 */
	tmp_percent -= 3 * g_confDataDebuff[CCharaConfDebuff.CONF_ID_GLOOMYDAY];

    //----------------------------------------------------------------
    // 「修羅　点穴 -反-」の効果
    //----------------------------------------------------------------
    tmp_percent += Math.floor(SU_AGI * UsedSkillSearch(SKILL_ID_TENKETSU_HAN) / 60);

    //----------------------------------------------------------------
    // 「ガンスリンガー　ガトリングフィーバー」の効果
    //----------------------------------------------------------------
    if (n_A_WeaponType == ITEM_KIND_NONE || n_A_WeaponType == ITEM_KIND_GATLINGGUN) {
        tmp_percent += UsedSkillSearch(SKILL_ID_GATLING_FEVER);
    }

    //----------------------------------------------------------------
    // 「モンク　金剛」の効果
    //----------------------------------------------------------------
    if (UsedSkillSearch(SKILL_ID_KONGO) > 0) {
        tmp_percent -= 25;
    }

    //----------------------------------------------------------------
    // 「シャドウチェイサー　インビジビリティ」の効果
    //----------------------------------------------------------------
    if (UsedSkillSearch(SKILL_ID_INVISIBILITY) > 0) {
        tmp_percent -= (50 - 10 * UsedSkillSearch(SKILL_ID_INVISIBILITY));
    }

    //----------------------------------------------------------------
    // 「星帝　星の構え」の効果
    //----------------------------------------------------------------
    tmp_percent += 5 * UsedSkillSearch(SKILL_ID_HOSHINO_KAMAE);
    if (n_A_PassSkill3[11]) tmp_percent -= 3 * n_A_PassSkill3[11];
    if (g_confDataDebuff[CCharaConfDebuff.CONF_ID_FREEZING]) tmp_percent -= 30;

    //----------------------------------------------------------------
    // 「性能カスタマイズ」の、効果
    //----------------------------------------------------------------
	let confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_ASPD_UP);
    if (confval > 0) {
        tmp_percent += confval;
    }

    return tmp_percent;
}

/**
 * 公式サイトで「Cri + ◯」と表記されるクリティカル率の加算値を取得する
 * @param {Array} mobData 対象に応じてクリティカル率が増加する場合に参照される 
 * @returns 最終的に加算されるCRIの値
 */
function GetAdditionalCriticalRate(mobData) {
    /** 最終的に返されるCRIの値 */
    let cri = 0;
    /** 計算途中のCRIの値 */
    let tmp_cri = 0;

    //----------------------------------------------------------------
    // ランダムエンチャント効果
    //----------------------------------------------------------------
    for (idx = ITEM_SP_CRI_PLUS; idx <= ITEM_SP_CRI_PLUS; idx++) {
        n_tok[idx] += GetRndOptTotalValue(idx, null, false);
    }

    // TODO: 四次対応
    for (idx = ITEM_SP_CRI_PLUS; idx <= ITEM_SP_CRI_PLUS; idx++) {
        n_tok[idx] = ApplySpecModify(idx, n_tok[idx]);
    }

    // CRI増加のアイテムSPを加算する
    tmp_cri += n_tok[ITEM_SP_CRI_PLUS];

    // 特定種族へCRI増加のアイテムSPを加算する
    tmp_cri += n_tok[ITEM_SP_CRITICAL_UP_RACE_SOLID + mobData[19]];

    // カードによるCRI増加能力を加算する
    if (CardNumSearch(CARD_ID_CHUNGE) > 0) tmp_cri += n_A_SHOULDER_DEF_PLUS;
    if (GetLowerJobSeriesID(n_A_JOB) === JOB_ID_THIEF) tmp_cri += 4 * CardNumSearch(CARD_ID_MOBSTER);
    if (GetLowerJobSeriesID(n_A_JOB) === JOB_ID_ACOLYTE) {
        if (mobData[19] === 1 || mobData[19] === 6) tmp_cri += 9 * CardNumSearch(CARD_ID_FUR_SEAL);
    }
    if (SU_LUK >= 80 && CardNumSearch(CARD_ID_KYODAI_WHISPER)) tmp_cri += 3;
    if (n_A_WeaponType === 3 || n_A_WeaponType === 2) tmp_cri += CardNumSearch(CARD_ID_SWORD_GUARDIAN) * 5;
    if (n_A_WeaponType === 10) tmp_cri += CardNumSearch(CARD_ID_BOW_GUARDIAN) * 5;
    if (CardNumSearch(CARD_ID_EFREET)) tmp_cri += Math.floor(n_A_JobLV / 10) * CardNumSearch(CARD_ID_EFREET);

    // 装備によるCRI増加能力を加算する
    if (n_A_HEAD_DEF_PLUS >= 6 && EquipNumSearch(785)) tmp_cri += (n_A_HEAD_DEF_PLUS - 5);
    if (EquipNumSearch(640)) tmp_cri += Math.floor(SU_LUK / 5);
    if (EquipNumSearch(689)) tmp_cri += Math.floor(SU_LUK / 10);
    if (SU_AGI >= 90 && EquipNumSearch(442)) tmp_cri += 10 * EquipNumSearch(442);
    if (GetLowerJobSeriesID(n_A_JOB) == 41 && EquipNumSearch(675)) tmp_cri += 5;
    if (EquipNumSearch(623)) tmp_cri += n_A_Weapon_ATKplus;
    if (EquipNumSearch(1122) && GetLowerJobSeriesID(n_A_JOB) == 6) tmp_cri += 5;
    if (n_A_Weapon_ATKplus >= 7 && mobData[19] == 7 && EquipNumSearch(1091)) tmp_cri += 5;
    if (EquipNumSearch(ITEM_ID_TATSUZINNO_TSUCHI) || EquipNumSearch(ITEM_ID_TATSUZINNO_TSUCHI_S2)) {
        tmp_cri += (2 * LearnedSkillSearch(SKILL_ID_MACE_SHUREN));
    }
    if (SU_DEX >= 90 && EquipNumSearch(1164)) tmp_cri += 5;
    if (n_A_HEAD_DEF_PLUS >= 7)
        if (EquipNumSearch(1267)) tmp_cri += 5;
    if (SU_STR >= 120 && EquipNumSearch(1313)) tmp_cri += 3;
    if (SU_AGI >= 120 && EquipNumSearch(1200)) tmp_cri += 4 * EquipNumSearch(1200);
    if (EquipNumSearch(1412)) tmp_cri += Math.floor(n_A_SHOES_DEF_PLUS / 2);
    if (n_A_BODY_DEF_PLUS >= 7 && n_A_SHOULDER_DEF_PLUS >= 7 && n_A_SHOES_DEF_PLUS >= 7 && EquipNumSearch(1591)) tmp_cri += 8;
    if (EquipNumSearch(1661)) tmp_cri += n_A_Weapon_ATKplus;
    if (n_A_SHOES_DEF_PLUS >= 7 && EquipNumSearch(1812)) tmp_cri += 3;
    if (EquipNumSearch(1951)) tmp_cri += ROUNDDOWN(SU_LUK / 10) * EquipNumSearch(1951);
    if (SU_STR >= 110 && CardNumSearch(707)) tmp_cri += 20;
    if (EquipNumSearch(2242)) {
        tmp_cri += ROUNDDOWN(SU_LUK / 10);
        if (SU_LUK >= 108) tmp_cri += 5;
        if (SU_LUK >= 120) tmp_cri += 10;
    }
    if (n_A_SHIELD_DEF_PLUS >= 7 && EquipNumSearch(2253)) tmp_cri += 2;
    if (n_A_WeaponType == 10 && n_A_Arrow == ARROW_ID_SURUDOI_YA) tmp_cri += 20;

    // ドロセラカード
    // 遠距離限定
    n_tok[ITEM_SP_LONGRANGE_CRI_PLUS] += CardNumSearch(462) * 15;

    //----------------------------------------------------------------
    // 「蒼き夜光石」の、ステによる強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_AOKI_YAKOSEKI)) {
        if (SU_LUK >= 100) {
            tmp_cri += 10 * EquipNumSearch(ITEM_ID_AOKI_YAKOSEKI);
        }
    }

    //----------------------------------------------------------------
    // 「ヴァルキリーナイフ」の、職業による強化
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE)) {
        switch (GetLowerJobSeriesID(n_A_JOB)) {
            // ノービス系
            case JOB_SERIES_ID_NOVICE:
                tmp_cri += 7 * n_A_Weapon_ATKplus * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE);
                break;
                // マジシャン系
            case JOB_SERIES_ID_MAGICIAN:
                break;
                // シーフ系
            case JOB_SERIES_ID_THIEF:
                break;
            default:
                switch (GetHigherJobSeriesID(n_A_JOB)) {
                    // ハンター系
                    case JOB_SERIES_ID_HUNTER:
                        break;
                        // バード系、ダンサー系
                    case JOB_SERIES_ID_BARD:
                    case JOB_SERIES_ID_DANCER:
                        break;
                }
        }
    }

    //----------------------------------------------------------------
    // 「リス耳フード帽」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_ID_RISUMIMI_HOODBO)) {
        // 遠距離物理攻撃限定の効果
        n_tok[ITEM_SP_LONGRANGE_CRI_PLUS] += 5;
        if (n_A_HEAD_DEF_PLUS >= 5) n_tok[ITEM_SP_LONGRANGE_CRI_PLUS] += 10;
        if (n_A_HEAD_DEF_PLUS >= 7) n_tok[ITEM_SP_LONGRANGE_CRI_PLUS] += 15;
        if (n_A_HEAD_DEF_PLUS >= 9) n_tok[ITEM_SP_LONGRANGE_CRI_PLUS] += 20;
    }

    //----------------------------------------------------------------
    // 「セイヴザキング」の、騎兵修練【未習得】時における、「スピアクイッケン」習得による効果
    //----------------------------------------------------------------
    if (LearnedSkillSearch(78) == 0) {
        if (EquipNumSearch(ITEM_ID_SAVE_THE_KING)) {
            tmp_cri += 3 * LearnedSkillSearch(SKILL_ID_SPEAR_QUICKEN);
        }
    }

    //----------------------------------------------------------------
    // 「マタギの剣鉈」の、素ＬＵＫによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_MATAGINO_KENNATA)) > 0) {
        // 遠距離物理攻撃限定の効果
        if (SU_LUK >= 100) n_tok[ITEM_SP_LONGRANGE_CRI_PLUS] += 10 * itemCount;
    }

    //----------------------------------------------------------------
    // 「暴徒のスカーフ　グラスセット」の、素ＳＴＲと素ＬＵＫによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_GLASS)) > 0) {
        tmp_cri += 5 * ROUNDDOWN((SU_STR + SU_LUK) / 80) * itemCount;
    }

    //----------------------------------------------------------------
    // 「暴徒のスカーフ　サングラスセット」の、素ＳＴＲと素ＬＵＫによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_BOTONO_SCARF_SUNGLASS)) > 0) {
        tmp_cri += 5 * ROUNDDOWN((SU_STR + SU_LUK) / 80) * itemCount;
    }

    //----------------------------------------------------------------
    // 「マラクの皮」の、素ＳＴＲと素ＬＵＫによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_MARRACONO_KAWA)) > 0) {
        if (n_A_SHOULDER_DEF_PLUS >= 8) {
            tmp_cri += 1 * ROUNDDOWN((SU_STR + SU_LUK) / 20) * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「物影」の、スキル習得による強化
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_MONOKAGE)) > 0) {
        tmp_cri += 5 * LearnedSkillSearch(SKILL_ID_KASUMIGIRI) * itemCount;
    }

    //----------------------------------------------------------------
    // 「ニーヴバレッタ　ニーヴ武器セット」の、素ＬＵＫによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_NIEVE_VALLETTA_NIEVE_ARMS)) > 0) {
        tmp_cri += 1 * ROUNDDOWN(SU_LUK / 10) * itemCount;
    }

    //----------------------------------------------------------------
    // 「不死の軍団認識票　リンディーホップセット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_FUSHINO_GUNDAN_NINSHIKIHYO_LINDY_HOP)) > 0) {
        if (n_A_Weapon_ATKplus >= 9) {
            tmp_cri += 50 * itemCount;
        }
    }

    //----------------------------------------------------------------
    // 「ローラカード」の、強化
    //----------------------------------------------------------------
    if (CardNumSearch(CARD_ID_LOLA)) {
        if (n_A_WeaponType == ITEM_KIND_CLUB) {
            tmp_cri += (10 + 1 * n_A_Weapon_ATKplus) * CardNumSearch(CARD_ID_LOLA);
        }
    }

    //----------------------------------------------------------------
    // 「エナジー＜致命ノ一撃＞」の、精錬による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_ENCHANT_ENERGY_CHIMEINO_ICHIGEKI)) > 0) {
        tmp_cri += 1 * Math.max(0, (n_A_SHOULDER_DEF_PLUS - 4)) * cardCount;
    }

    //----------------------------------------------------------------
    // 「パワフルSスケルトンカード」の、ベースレベルによる効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_POWERFUL_S_SKELETON)) > 0) {
        tmp_cri += 1 * ROUNDDOWN(n_A_BaseLV / 20) * cardCount;
    }

    //----------------------------------------------------------------
    // 「レンジャーセシル(MVP)カード」の、職業による効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_RANGER_CECIL_MVP)) > 0) {
        if (IsSameJobClass(JOB_ID_RANGER)) {
            tmp_cri += 20 * cardCount;
        }
    }

    //----------------------------------------------------------------
    // 「武侠靴　剣セット」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_BUKYO_KUTSU_SWORD)) > 0) {
        tmp_cri += 5 * n_A_SHOES_DEF_PLUS * itemCount;
    }

    //----------------------------------------------------------------
    // 「ヘヴンリーオーダー」の、素ＤＥＸによる効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_ID_HEAVENLY_ORDER)) > 0) {
        tmp_cri += 2 * Math.floor(SU_DEX / 18) * itemCount;
    }

    //----------------------------------------------------------------
    // 「E-EA1Lカード」の、武器種別による効果
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_E_EA1L, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_E_EA1L, CARD_REGION_ID_ARMS_LEFT_ANY);
    if ((cardCountRight > 0) || (cardCountLeft > 0)) {
        if (n_A_WeaponType == ITEM_KIND_BOW) {
            tmp_cri += 1 * (10 + 1 * n_A_Weapon_ATKplus) * cardCountRight;
            tmp_cri += 1 * (10 + 1 * n_A_Weapon2_ATKplus) * cardCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「コトネスカード」の、武器種別による効果　Cri+
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_COTNESS, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_COTNESS, CARD_REGION_ID_ARMS_LEFT_ANY);
    if ((cardCountRight > 0) || (cardCountLeft > 0)) {
        if ((n_A_WeaponType == ITEM_KIND_FIST)) {
            tmp_cri += (10 + 1 * n_A_Weapon_ATKplus) * cardCountRight;
            tmp_cri += (10 + 1 * n_A_Weapon2_ATKplus) * cardCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「ペタルの尻尾　リス耳フード帽セット」の、過剰精錬による効果
    //----------------------------------------------------------------
    if (EquipNumSearch(ITEM_SET_ID_PETALNO_SHIPPO_RISUMIMI_HOOD_BO)) {
        // 遠距離物理攻撃限定の効果
        if (n_A_HEAD_DEF_PLUS >= 6) n_tok[ITEM_SP_LONGRANGE_CRI_PLUS] += 10;
        if (n_A_HEAD_DEF_PLUS >= 8) n_tok[ITEM_SP_LONGRANGE_CRI_PLUS] += 15;
    }

    //----------------------------------------------------------------
    // 「ランナウェー・アクセラレータ　T-Assault」の、精錬による効果
    //----------------------------------------------------------------
    if ((itemCount = EquipNumSearch(ITEM_SET_ID_RUNAWAY_ACCELERATOR_T_ASSAULT)) > 0) {
        tmp_cri += 3 * n_A_HEAD_DEF_PLUS * itemCount;
    }

    //----------------------------------------------------------------
    // 「封印されたイフリートカード」の、ジョブレベルによる効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_ID_FUINSARETA_EFREET)) > 0) {
        tmp_cri += 1 * Math.floor(n_A_JobLV / 20) * cardCount;
    }

    //----------------------------------------------------------------
    // 「豊穣の女神　イフリートカード」の、ジョブレベルによる効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_SET_ID_ENCHANT_HOZYONO_MEGAMI_EFREET)) > 0) {
        tmp_cri += 1 * n_A_JobLV * cardCount;
    }

    //----------------------------------------------------------------
    // 「豊穣の女神　封印されたイフリートカード」の、ジョブレベルによる効果
    //----------------------------------------------------------------
    if ((cardCount = CardNumSearch(CARD_SET_ID_ENCHANT_HOZYONO_MEGAMI_FUINSARETA_EFREET)) > 0) {
        tmp_cri += 1 * Math.floor(n_A_JobLV / 2) * cardCount;
    }

    //----------------------------------------------------------------
    // 「ハートハンターATカード」の、強化
    //----------------------------------------------------------------
    cardCountRight = CardNumSearch(CARD_ID_HEART_HUNTER_AT, CARD_REGION_ID_ARMS_RIGHT_ANY);
    cardCountLeft = CardNumSearch(CARD_ID_HEART_HUNTER_AT, CARD_REGION_ID_ARMS_LEFT_ANY);
    if ((cardCountRight > 0) || (cardCountLeft > 0)) {
        if (n_A_WeaponType == ITEM_KIND_KATAR) {
            tmp_cri += (10 + 1 * n_A_Weapon_ATKplus) * cardCountRight;
            tmp_cri += (10 + 1 * n_A_Weapon2_ATKplus) * cardCountLeft;
        }
    }

    //----------------------------------------------------------------
    // 「パッシブ持続系　潜龍昇天」の、効果
    // 「パッシブ持続系　爆裂波動」の、効果
    // 「パッシブ持続系　爆裂波動（Sノビ）」の、効果
    // 「時限アイテム　ヴンダーカンマー（爆裂波動）」の、効果
    // 「時限アイテム　リングオブフレームロード（爆裂波動）」の、効果
    //----------------------------------------------------------------
    if ((sklLv = UsedSkillSearch(SKILL_ID_SENRYU_SHOTEN)) > 0) {
        tmp_cri += 20;
    } else if ((sklLv = UsedSkillSearch(SKILL_ID_BAKURETSU_HADO)) > 0) {
        tmp_cri += 7.5 + 2.5 * sklLv;
    } else if ((sklLv = UsedSkillSearch(SKILL_ID_BAKURETSU_HADO_SUPER_NOVICE)) > 0) {
        tmp_cri += 50;
    } else if (TimeItemNumSearch(TIME_ITEM_ID_VNDER_CANMER_BAKURETSU_HADO)) {
        tmp_cri += 15;
    } else if (TimeItemNumSearch(TIME_ITEM_ID_RING_OF_FLAME_LORD)) {
        tmp_cri += 10;
    }

	/**
	 * 「ダンサースキル ダンスの練習」の、効果
	 */
	if ((sklLv = Math.max(LearnedSkillSearch(SKILL_ID_DANCENO_RENSHU), UsedSkillSearch(SKILL_ID_DANCENO_RENSHU))) > 0) {
		if(n_A_WeaponType === ITEM_KIND_WHIP) {
			tmp_cri += Math.round(0.5 * sklLv);
		}
	}
	/**
	 * 「ダンサースキル 幸運のキス」の、効果
	 */
	if ((sklLv = g_confDataNizi[CCharaConfNizi.CONF_ID_FORTUNEKISS]) > 0) {
        tmp_cri += 20 + 3 * sklLv;
    }

    //----------------------------------------------------------------
    // 「パッシブ持続系　トゥルーサイト」の、効果
    //----------------------------------------------------------------
    if (UsedSkillSearch(SKILL_ID_TRUE_SIGHT) > 0) {
        tmp_cri += UsedSkillSearch(SKILL_ID_TRUE_SIGHT);
    }
    //----------------------------------------------------------------
    // 「二次職支援　トゥルーサイト」の、効果
    //----------------------------------------------------------------
    else if ((sklLv = g_confDataNizi[CCharaConfNizi.CONF_ID_TRUE_SIGHT]) > 0) {
        tmp_cri += sklLv;
    }

    //----------------------------------------------------------------
    // 「パッシブ持続系　スピアクイッケン」の、効果
    //----------------------------------------------------------------
    if ((n_A_WeaponType == ITEM_KIND_SPEAR) || (n_A_WeaponType == ITEM_KIND_SPEAR_2HAND)) {
        tmp_cri += UsedSkillSearch(SKILL_ID_SPEAR_QUICKEN) * 3;
    }

    //----------------------------------------------------------------
    // 「パッシブ持続系　インビジビリティ」の、効果
    //----------------------------------------------------------------
    tmp_cri += 20 * UsedSkillSearch(SKILL_ID_INVISIBILITY);

    //----------------------------------------------------------------
    // 「パッシブ持続系　カモフラージュ」の、効果
    //----------------------------------------------------------------
    tmp_cri += 10 * UsedSkillSearch(SKILL_ID_CAMOUFLAGE);

    //----------------------------------------------------------------
    // 「三次職支援　ストライキング」の、効果
    //----------------------------------------------------------------
    tmp_cri += g_confDataSanzi[CCharaConfSanzi.CONF_ID_STRIKING];

    //----------------------------------------------------------------
    // 「ソウルリーパー　影の魂」の、効果
    //----------------------------------------------------------------
    if ((bufLv = g_confDataSanzi[CCharaConfSanzi.CONF_ID_KAGENO_TAMASHI]) > 0) {
        tmp_cri += 70;
    }

    //----------------------------------------------------------------
    // 「サモナー　生命の力」の、効果
    //----------------------------------------------------------------
    if (Math.max(LearnedSkillSearch(SKILL_ID_SEIMEINO_CHIKARA), UsedSkillSearch(SKILL_ID_SEIMEINO_CHIKARA)) > 0) {
        tmp_cri += 20;
    }

	// 古い歌・踊り支援設定
    if (n_A_PassSkill7[25]) tmp_cri += 7;
    if (n_A_PassSkill7[28]) tmp_cri += 7;
    else if (n_A_PassSkill7[36]) tmp_cri += 7;
    if (0 < n_A_PassSkill7[46] && n_A_PassSkill7[46] <= 50) tmp_cri += n_A_PassSkill7[46];
    // if (n_A_PassSkill3[5]) tmp_cri += 10 + n_A_PassSkill3[5] + Math.floor(n_A_PassSkill3[35] / 2) + n_A_PassSkill3[25];

    //----------------------------------------------------------------
    // 「性能カスタマイズ」の、効果
    //----------------------------------------------------------------
    confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_CRI_PLUS);
    if (confval != 0) {
        tmp_cri += confval;
    }

    //----------------------------------------------------------------
    // 遠距離物理攻撃限定の効果
    //----------------------------------------------------------------
    if (n_Enekyori === 1 ||
        IsLongRange(n_A_Equip[EQUIP_REGION_ID_ARMS]) ||
        UsedSkillSearch(SKILL_ID_SOUL_ATTACK) ||
        LearnedSkillSearch(SKILL_ID_SOUL_ATTACK)
    ) {
        tmp_cri += n_tok[ITEM_SP_LONGRANGE_CRI_PLUS];
    }

    //----------------------------------------------------------------
    // 最終クリティカル率の計算
    //----------------------------------------------------------------
    cri = 0;
    // ステータスによるクリティカル率
    cri += 0.3 * n_A_LUK;
    // 装備特性
    cri += tmp_cri;
    // カタール装備時は２倍
    if (n_A_WeaponType == ITEM_KIND_KATAR) {
        cri *= 2;
    }
    // ベースレベルによるクリティカル率
    cri += 0.1 + (n_A_BaseLV / 100);
    // おそらく https://siarodiary.blog.fc2.com/blog-entry-511.html などの検証に基づくもの
    // 実際のクリティカル率を表示しようとする試みだと思われるので
    // ゲーム内のCri表示と計算機の間で誤差がありますが静観しています
    // 条件不問の基礎加算値
    cri += 1;
    // 小数点以下第二位で切り捨て
    cri = Math.floor(cri * 10) / 10;
    // 負数は０に補正
    cri = Math.max(0, cri);

    // その他の支援/設定「クリティカル率を0にする」またはプレイヤー状態異常「無気力」の場合
    if (n_A_PassSkill8[16] || g_confDataDebuff[CCharaConfDebuff.CONF_ID_LETHARGY] > 0) {
        cri = 0;
	}

    return cri;
}

/**
 * 特定スキルの変動詠唱時間を％で取得する。短縮効果が付与されていない場合は100が返される。
 * @param {*} skillId 
 * @returns 
 */
function GetCastScalingOfSkillForCastTimeVary(skillId) {
	var itemCount = 0;
	var eqpnum = 0;
	var scaling = 100;

	// 装備品の短縮効果
	if (GetEquippedTotalSPEquip(ITEM_SP_SKILL_CAST_TIME_OFFSET + skillId) != 0) {
		scaling -= GetEquippedTotalSPEquip(ITEM_SP_SKILL_CAST_TIME_OFFSET + skillId);
	}

	if (GetEquippedTotalSPCardAndElse(ITEM_SP_SKILL_CAST_TIME_OFFSET + skillId) != 0) {
		scaling -= GetEquippedTotalSPCardAndElse(ITEM_SP_SKILL_CAST_TIME_OFFSET + skillId);
	}

	//----------------------------------------------------------------
	// 「グロリアスフィスト」の「阿修羅覇凰拳」短縮
	//----------------------------------------------------------------
	if ( (skillId == SKILL_ID_ASHURA_HAOKEN) || (skillId == SKILL_ID_ASHURA_HAOKEN_SPKOTEI) ) {
		if (n_A_Weapon_ATKplus >= 9 && EquipNumSearch(ITEM_ID_GLORIOUS_FIST)) {
			scaling -= 100;
		}
	}

	//----------------------------------------------------------------
	// 「グロリアスライフル」の「トラッキング」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_TRACKING) {
		if(n_A_Weapon_ATKplus >= 9 && EquipNumSearch(ITEM_ID_GLORIOUS_RIFLE)) {
			scaling -= 25;
		}
	}

	//----------------------------------------------------------------
	// 「ラクリマスティック」の「ストームガスト」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_STORM_GUST) {
		if(n_A_Weapon_ATKplus >= 10 && EquipNumSearch(ITEM_ID_LACRYMA_STICK)) {
			scaling -= 8;
		}
	}

	//----------------------------------------------------------------
	// 「ファルケンブリッツ　リトルフェザーハットセット」の「シャープシューティング」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SHARP_SHOOTING) {
		if(n_A_Weapon_ATKplus >= 10 && EquipNumSearch(ITEM_SET_ID_FALCON_BRITZ_LITTLE_FEATHER_HAT)) {
			scaling -= 50;
		}
	}

	//----------------------------------------------------------------
	// 「ゲフェニア水の古書　ラクリマスティックセット」の「ストームガスト」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_STORM_GUST) {
		if(EquipNumSearch(ITEM_SET_ID_GEFENIA_MIZUNO_KOSHO_LACRYMA_STICK)) {
			scaling -= 4 * n_A_SHIELD_DEF_PLUS;
		}
	}

	//----------------------------------------------------------------
	// 「ゲフェニア水の古書　ラクリマスティックセット」の「フロストミスティ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_FROST_MISTY) {
		if(EquipNumSearch(ITEM_SET_ID_GEFENIA_MIZUNO_KOSHO_LACRYMA_STICK)) {
			scaling -= 4 * n_A_SHIELD_DEF_PLUS;
		}
	}

	//----------------------------------------------------------------
	// 「ゲフェニア水の古書　ラクリマスティックセット」の「ジャックフロスト」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_JACK_FROST) {
		if(EquipNumSearch(ITEM_SET_ID_GEFENIA_MIZUNO_KOSHO_LACRYMA_STICK)) {
			scaling -= 4 * n_A_SHIELD_DEF_PLUS;
		}
	}

	//----------------------------------------------------------------
	// 「エレメンタルブーツ」の「ファイアーボルト」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_FIRE_BOLT) {
		if(n_A_SHOES_DEF_PLUS >= 6 && EquipNumSearch(ITEM_ID_ELEMENTAL_BOOTS)) {
			scaling -= n_A_SHOES_DEF_PLUS - 5;
		}
	}

	//----------------------------------------------------------------
	// 「エレメンタルブーツ」の「コールドボルト」短縮
	//----------------------------------------------------------------
	if (skillId==SKILL_ID_COLD_BOLT) {
		if(n_A_SHOES_DEF_PLUS >= 6 && EquipNumSearch(ITEM_ID_ELEMENTAL_BOOTS)) {
			scaling -= n_A_SHOES_DEF_PLUS - 5;
		}
	}

	//----------------------------------------------------------------
	// 「エレメンタルブーツ」の「ライトニングボルト」短縮
	//----------------------------------------------------------------
	if (skillId==SKILL_ID_LIGHTNING_BOLT) {
		if(n_A_SHOES_DEF_PLUS >= 6 && EquipNumSearch(ITEM_ID_ELEMENTAL_BOOTS)) {
			scaling -= n_A_SHOES_DEF_PLUS - 5;
		}
	}

	//----------------------------------------------------------------
	// 「エレメンタルブーツ」の「アーススパイク」短縮
	//----------------------------------------------------------------
	if (skillId==SKILL_ID_EARTH_SPIKE) {
		if(n_A_SHOES_DEF_PLUS >= 6 && EquipNumSearch(ITEM_ID_ELEMENTAL_BOOTS)) {
			scaling -= n_A_SHOES_DEF_PLUS - 5;
		}
	}

	//----------------------------------------------------------------
	// 「法螺貝」の「振動残響」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SHINDOZANKYO) {
		if (EquipNumSearch(ITEM_ID_HORAGAI) > 0) {
			if(n_A_Weapon_ATKplus >= 5) scaling -= 10;
			if(n_A_Weapon_ATKplus >= 7) scaling -= 20;
			if(n_A_Weapon_ATKplus >= 9) scaling -= 40;
		}
	}

	//----------------------------------------------------------------
	// 「アルティメットモードチェンジャー　ペオースグリーブセット」の「ウィンドカッター」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_WIND_CUTTER) {
		if (EquipNumSearch(ITEM_SET_ID_ULTIMATE_MODE_CHANGER_PEORTH_GREEVE) > 0) {
			scaling -= 50;

			if(n_A_SHOES_DEF_PLUS >= 7) {
				scaling -= 50;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ケラウノス」の「雷光弾」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_RAIKODAN) {
		if ((itemCount = EquipNumSearch(ITEM_ID_KERAUNOS)) > 0) {
			scaling -= 5 * ROUNDDOWN(n_A_BaseLV / 15) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「ケラウノス」の「羅刹覇王撃」短縮
	//----------------------------------------------------------------
	if ( (skillId == SKILL_ID_RASETSU_HAOGEKI_MAX)
		|| (skillId == SKILL_ID_RASETSU_HAOGEKI)) {
		if ((itemCount = EquipNumSearch(ITEM_ID_KERAUNOS)) > 0) {
			scaling -= 3 * ROUNDDOWN(n_A_BaseLV / 20) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「業風石　ゲラドリア　セット」の「ウィンドカッター」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_WIND_CUTTER) {
		if ((itemCount = EquipNumSearch(ITEM_SET_ID_GOFUSEKI_GERADRIA)) > 0) {
			if (n_A_Weapon_ATKplus >= 10) {
				scaling -= 50;
			}
		}
	}

	//----------------------------------------------------------------
	// 「パワードチップ」の「アームズキャノン」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ARMS_CANNON) {
		if ((itemCount = EquipNumSearch(ITEM_ID_POWERED_CHIP)) > 0) {
			if ((sklLv = LearnedSkillSearch(SKILL_ID_NUTRAL_BARRIER)) >= 3) {
				scaling -= 50 * itemCount;
			}
		}
	}

	//----------------------------------------------------------------
	// 「パワードチップ」の「コールドスロワー」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_COLD_THROWER) {
		if ((itemCount = EquipNumSearch(ITEM_ID_POWERED_CHIP)) > 0) {
			if ((sklLv = LearnedSkillSearch(SKILL_ID_NUTRAL_BARRIER)) >= 3) {
				scaling -= 50 * itemCount;
			}
		}
	}

	//----------------------------------------------------------------
	// 「パワードチップ」の「フレイムスロワー」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_FLAME_THROWER) {
		if ((itemCount = EquipNumSearch(ITEM_ID_POWERED_CHIP)) > 0) {
			if ((sklLv = LearnedSkillSearch(SKILL_ID_NUTRAL_BARRIER)) >= 3) {
				scaling -= 50 * itemCount;
			}
		}
	}

	//----------------------------------------------------------------
	// 「特選葉のお守り」の「イヌハッカメテオ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_INUHAKKA_METEOR) {
		if ((itemCount = EquipNumSearch(ITEM_ID_TOKUSEN_HANO_OMAMORI)) > 0) {
			scaling -=  3 * ROUNDDOWN(n_A_BaseLV / 10) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「執行者のシューズ」の「メテオアサルト」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_METEOR_ASSALT) {
		eqpnum = EquipNumSearch(ITEM_ID_SHIKKOUSHANO_SHOES, EQUIP_REGION_ID_SHOES);
		if (eqpnum > 0) {
			scaling -= 7 * LearnedSkillSearch(SKILL_ID_WEAPON_BLOCKING) * eqpnum;
			scaling -= 7 * LearnedSkillSearch(SKILL_ID_WEAPON_CRUSH) * eqpnum;
			scaling -= 7 * LearnedSkillSearch(SKILL_ID_COUNTER_SLASH) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「サファイアリスト」の「アシッドデモンストレーション」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ACID_DEMONSTRATION) {
		eqpnum = EquipNumSearch(ITEM_ID_SAPPHIRE_LIST, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			scaling -= Math.floor(n_A_BaseLV / 4) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「裁きの靴　ホーリーステッキセット」の「ジュデックス」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_JUDEX) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_SABAKINO_KUTSU_HOLY_STICK, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			scaling -= 5 * LearnedSkillSearch(SKILL_ID_ORATIO) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「裁きの靴　ホーリーステッキセット」の「アドラムス」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ADORAMUS) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_SABAKINO_KUTSU_HOLY_STICK, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			scaling -= 5 * LearnedSkillSearch(SKILL_ID_ORATIO) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「悪魔の手」の「気功」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_KIKO) {
		eqpnum = EquipNumSearch(ITEM_ID_AKUMANO_TE, EQUIP_REGION_ID_HEAD_TOP);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_RAIKODAN) >= 5) {
				scaling -= 50 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「悪魔の手」の「金剛」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_KONGO) {
		eqpnum = EquipNumSearch(ITEM_ID_AKUMANO_TE, EQUIP_REGION_ID_HEAD_TOP);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_RAIKODAN) >= 5) {
				scaling -= 50 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「悪魔の手」の「獅子吼」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SISIKO) {
		eqpnum = EquipNumSearch(ITEM_ID_AKUMANO_TE, EQUIP_REGION_ID_HEAD_TOP);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_RAIKODAN) >= 5) {
				scaling -= 50 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「悪魔の手」の「練気功」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_RENKIKO) {
		eqpnum = EquipNumSearch(ITEM_ID_AKUMANO_TE, EQUIP_REGION_ID_HEAD_TOP);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_RAIKODAN) >= 5) {
				scaling -= 50 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「特選ウサギのお守り」の「キャロットビート」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_CARROT_BEAT) {
		if ((itemCount = EquipNumSearch(ITEM_ID_TOKUSEN_USAGINO_OMAMORI)) > 0) {
			scaling -= 3 * ROUNDDOWN(n_A_BaseLV / 10) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「エメラルドイヤリング」の「メタリックサウンド」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_METALIC_SOUND) {
		if ((itemCount = EquipNumSearch(ITEM_ID_EMERALDEARRING)) > 0) {
			scaling -= 1 * ROUNDDOWN(n_A_BaseLV / 5) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「天狗の下駄」の「気功」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_KIKO) {
		if ((itemCount = EquipNumSearch(ITEM_ID_TENGUNO_GETA)) > 0) {
			scaling -= 10 * LearnedSkillSearch(SKILL_ID_TENKETSU_KYU) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「天狗の下駄」の「金剛」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_KONGO) {
		if ((itemCount = EquipNumSearch(ITEM_ID_TENGUNO_GETA)) > 0) {
			scaling -= 10 * LearnedSkillSearch(SKILL_ID_TENKETSU_KYU) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「天狗の下駄」の「練気功」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_RENKIKO) {
		if ((itemCount = EquipNumSearch(ITEM_ID_TENGUNO_GETA)) > 0) {
			scaling -= 10 * LearnedSkillSearch(SKILL_ID_TENKETSU_KYU) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「トラベラーシューズ」の、「メタリックサウンド」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_METALIC_SOUND) {
		if ((itemCount = EquipNumSearch(ITEM_ID_TRAVELER_SHOES)) > 0) {
			scaling -= 10 * LearnedSkillSearch(SKILL_ID_MELANCHOLY) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「もこもこお魚シューズ」の、「シーフード系スキル」短縮
	//----------------------------------------------------------------
	if ( (skillId == SKILL_ID_SHINSENNA_EBI)
		|| (skillId == SKILL_ID_EBI_ZANMAI)
		|| (skillId == SKILL_ID_OTORO)
		|| (skillId == SKILL_ID_MAGURO_SHIELD)
		|| (skillId == SKILL_ID_GROOMING)
		|| (skillId == SKILL_ID_NODOWO_NARASU)
		|| (skillId == SKILL_ID_EBI_PARTY)
	) {
		if ((itemCount = EquipNumSearch(ITEM_ID_MOKOMOKO_OSAKANA_SHOES)) > 0) {
			scaling -= 10 * LearnedSkillSearch(SKILL_ID_EBI_PARTY) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「螺旋風魔の宝珠」の、「風魔手裏剣-乱華-」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_FUMASHURIKEN_RANKA) {
		eqpnum = EquipNumSearch(ITEM_ID_RASEN_FUMANO_HOZYU);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_YOMIGAESHI) >= 5) {
				scaling -= 50  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「聖者の冠」の、「アドラムス」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ADORAMUS) {
		eqpnum = EquipNumSearch(ITEM_ID_SEISHANO_KANMURI);
		if (eqpnum > 0) {
			scaling -= 5 * LearnedSkillSearch(SKILL_ID_ORATIO)  * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「聖者の冠」の、「ジュデックス」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_JUDEX) {
		eqpnum = EquipNumSearch(ITEM_ID_SEISHANO_KANMURI);
		if (eqpnum > 0) {
			scaling -= 5 * LearnedSkillSearch(SKILL_ID_ORATIO)  * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「ぷりちーウリボウシューズ」の、「アニマル系スキル」短縮
	//----------------------------------------------------------------
	if ( (skillId == SKILL_ID_PIKKI_TSUKI)
			|| (skillId == SKILL_ID_ARCLOUSE_DASH)
			|| (skillId == SKILL_ID_TAROUNO_KIZU)
			|| (skillId == SKILL_ID_CARROT_BEAT)
			|| (skillId == SKILL_ID_KEIKAI)
			|| (skillId == SKILL_ID_MURENO_CHIKARA)
			|| (skillId == SKILL_ID_SAVAGENO_TAMASHI)
	) {
		if ((itemCount = EquipNumSearch(ITEM_ID_PRETTY_URIBO_SHOES)) > 0) {
			scaling -= 10 * LearnedSkillSearch(SKILL_ID_SAVAGENO_TAMASHI) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「ぴかぴかニャンニャンクラウン」の、「イヌハッカメテオ」、「マタタビランス」短縮
	//----------------------------------------------------------------
	if ( (skillId == SKILL_ID_INUHAKKA_METEOR)
			|| (skillId == SKILL_ID_MATATABI_LANCE)
	) {
		if ((itemCount = EquipNumSearch(ITEM_ID_PIKAPIKA_NYANNYAN_CROWN)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_DAICHINO_TAMASHI) >= 1) {
				scaling -= 4 * LearnedSkillSearch(SKILL_ID_INUHAKKA_SHOWER) * itemCount;
				scaling -= 4 * LearnedSkillSearch(SKILL_ID_INUHAKKA_METEOR) * itemCount;
				scaling -= 4 * LearnedSkillSearch(SKILL_ID_NYAN_GRASS) * itemCount;
				scaling -= 4 * LearnedSkillSearch(SKILL_ID_MATATABI_LANCE) * itemCount;
				scaling -= 4 * LearnedSkillSearch(SKILL_ID_MATATABINO_NEKKO) * itemCount;
			}
		}
	}

	//----------------------------------------------------------------
	// 「よちよちウリボウスタイ」の、「アニマル系スキル」短縮
	//----------------------------------------------------------------
	if ( (skillId == SKILL_ID_PIKKI_TSUKI)
			|| (skillId == SKILL_ID_ARCLOUSE_DASH)
			|| (skillId == SKILL_ID_TAROUNO_KIZU)
			|| (skillId == SKILL_ID_CARROT_BEAT)
			|| (skillId == SKILL_ID_KEIKAI)
			|| (skillId == SKILL_ID_MURENO_CHIKARA)
			|| (skillId == SKILL_ID_SAVAGENO_TAMASHI)
	) {
		if ((itemCount = EquipNumSearch(ITEM_ID_YOCHIYOCHI_URIBO_SUTAI)) > 0) {
			scaling -= 10 * itemCount;
			if (n_A_SHOULDER_DEF_PLUS >= 5) {
				scaling -= 20 * itemCount;
			}
			if (n_A_SHOULDER_DEF_PLUS >= 7) {
				scaling -= 20 * itemCount;
			}
		}
	}

	//----------------------------------------------------------------
	// 「審判の天秤」の、「レイオブジェネシス」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_RAY_OF_GENESIS) {
		eqpnum = EquipNumSearch(ITEM_ID_SHINPANNO_TENBIN);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_INSPIRATION) >= 5) {
				scaling -= 50 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「科学者のマント」の、「スポアエクスプロージョン」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SPORE_EXPLOSION) {
		eqpnum = EquipNumSearch(ITEM_ID_KAGAKUSHANO_MANT);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_HELLS_PLANT) >= 5) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「アーヌルス イラ」の、「練気功」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_RENKIKO) {
		eqpnum = EquipNumSearchMIG(ITEM_ID_ANULUS_IRA);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_SENRYU_SHOTEN) >= 10) {
				scaling -= 50 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「アーヌルス イラ」の、「雷光弾」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_RAIKODAN) {
		eqpnum = EquipNumSearchMIG(ITEM_ID_ANULUS_IRA);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_SENRYU_SHOTEN) >= 10) {
				scaling -= 50 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「グレースホーリーローブ」の、「金剛」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_KONGO) {
		eqpnum = EquipNumSearchMIG(ITEM_ID_GRACE_HOLY_ROBE);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_PRAEFATIO) >= 10) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「パワードインカム」の、「アームズキャノン」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ARMS_CANNON) {
		eqpnum = EquipNumSearch(ITEM_ID_POWERED_INCOME);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_HITO_DAICHINO_KENKYU) >= 5) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「もふもふラブリーフォックス」の、「うずくまる」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_UZUKUMARU) {
		eqpnum = EquipNumSearch(ITEM_ID_MOFUMOFU_LOVELY_FOX);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_SEIMEINO_TAMASHI) >= 1) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「もふもふラブリーフォックス」の、「ニャンジャンプ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_NYAN_JAMP) {
		eqpnum = EquipNumSearch(ITEM_ID_MOFUMOFU_LOVELY_FOX);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_SEIMEINO_TAMASHI) >= 1) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「もこふわシャークパジャマ」の、「シーフード系スキル」短縮
	//----------------------------------------------------------------
	if ( (skillId == SKILL_ID_SHINSENNA_EBI)
		|| (skillId == SKILL_ID_EBI_ZANMAI)
		|| (skillId == SKILL_ID_OTORO)
		|| (skillId == SKILL_ID_MAGURO_SHIELD)
		|| (skillId == SKILL_ID_GROOMING)
		|| (skillId == SKILL_ID_NODOWO_NARASU)
		|| (skillId == SKILL_ID_EBI_PARTY)
	) {
		if ((itemCount = EquipNumSearch(ITEM_ID_MOKOFUWA_SHARK_PAJAMA)) > 0) {
			scaling -= 10 * LearnedSkillSearch(SKILL_ID_EBI_PARTY) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「ゾディアック＋α」の、「シーフード系スキル」短縮
	//----------------------------------------------------------------
	if ( (skillId == SKILL_ID_SHINSENNA_EBI)
		|| (skillId == SKILL_ID_EBI_ZANMAI)
		|| (skillId == SKILL_ID_OTORO)
		|| (skillId == SKILL_ID_MAGURO_SHIELD)
		|| (skillId == SKILL_ID_GROOMING)
		|| (skillId == SKILL_ID_NODOWO_NARASU)
		|| (skillId == SKILL_ID_EBI_PARTY)
	) {
		if (IsSameJobClass(JOB_ID_SUMMONER)) {
			if ((itemCount = EquipNumSearch(ITEM_SET_ID_ENCHANT_ZODIAC_KAWAII_KUSANO_NECKLACE)) > 0) {
				scaling -= 50 * itemCount;
			}
			if ((itemCount = EquipNumSearch(ITEM_SET_ID_ENCHANT_ZODIAC_SHINSENNA_MAGURONO_OMAMORI)) > 0) {
				scaling -= 50 * itemCount;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ゾディアック＋α」の、「プラント系スキル」短縮
	//----------------------------------------------------------------
	if ( (skillId == SKILL_ID_MATATABI_LANCE)
		|| (skillId == SKILL_ID_MATATABINO_NEKKO)
		|| (skillId == SKILL_ID_INUHAKKA_METEOR)
		|| (skillId == SKILL_ID_INUHAKKA_SHOWER)
		|| (skillId == SKILL_ID_CHATTERING)
		|| (skillId == SKILL_ID_MYAUMYAU)
		|| (skillId == SKILL_ID_NYAN_GRASS)
	) {
		if (IsSameJobClass(JOB_ID_SUMMONER)) {
			if ((itemCount = EquipNumSearch(ITEM_SET_ID_ENCHANT_ZODIAC_MARYOKUNO_KUSANO_NECKLACE)) > 0) {
				scaling -= 50 * itemCount;
			}
			if ((itemCount = EquipNumSearch(ITEM_SET_ID_ENCHANT_ZODIAC_HIKARUEDANO_OMAMORI)) > 0) {
				scaling -= 50 * itemCount;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ゾディアック＋α」の、「アニマル系スキル」短縮
	//----------------------------------------------------------------
	if ( (skillId == SKILL_ID_PIKKI_TSUKI)
			|| (skillId == SKILL_ID_ARCLOUSE_DASH)
			|| (skillId == SKILL_ID_TAROUNO_KIZU)
			|| (skillId == SKILL_ID_CARROT_BEAT)
			|| (skillId == SKILL_ID_KEIKAI)
			|| (skillId == SKILL_ID_MURENO_CHIKARA)
			|| (skillId == SKILL_ID_SAVAGENO_TAMASHI)
	) {
		if (IsSameJobClass(JOB_ID_SUMMONER)) {
			if ((itemCount = EquipNumSearch(ITEM_SET_ID_ENCHANT_ZODIAC_SHINSENNA_KUSANO_NECKLACE)) > 0) {
				scaling -= 50 * itemCount;
			}
			if ((itemCount = EquipNumSearch(ITEM_SET_ID_ENCHANT_ZODIAC_POCCHARI_MIMIZUNO_OMAMORI)) > 0) {
				scaling -= 50 * itemCount;
			}
		}
	}

	//----------------------------------------------------------------
	// 「性能カスタマイズ」の、効果
	//----------------------------------------------------------------
	confval = g_objCharaConfCustomSkill.GetConf(CCharaConfCustomSkill.CONF_ID_SKILL_CAST_DOWN);
	if (confval != 0) {
		scaling -= confval;
	}

	/**
	 * プレイヤー状態異常「スローキャスト」の効果
	 */
	scaling += 20 * g_confDataDebuff[CCharaConfDebuff.CONF_ID_SLOW_CAST];

	// TODO: データ移行過渡処理
	// 計算したSP効果を、移行前のデータ形式に変換して、加算する
	if (IsEnableMigrationBlockTransit()) {

		var spTag = null;

		spTag = new CMigEquipableSpTag()
			.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_CAST_TIME)
			.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_SKILL, g_skillManager.GetBaseSkillId(skillId))
			.SetAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_VALUE_UNIT, MIG_VALUE_UNIT_ID_PERCENT);

		scaling += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		scaling += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
	}

	return scaling;
}

/**
 * 特定スキルの変動詠唱が短縮される時間をミリ秒で取得する。短縮効果が付与されていない場合は0が返される。
 * @param {*} skillId 
 * @returns 
 */
function GetCastFixOfSkillForCastTimeVary(skillId) {
	var castfix = 0;

	// 装備品の短縮効果
	if (GetEquippedTotalSPEquip(ITEM_SP_SKILL_CAST_MINUS_OFFSET + skillId) != 0) {
		castfix -= GetEquippedTotalSPEquip(ITEM_SP_SKILL_CAST_MINUS_OFFSET + skillId);
	}

	if (GetEquippedTotalSPCardAndElse(ITEM_SP_SKILL_CAST_MINUS_OFFSET + skillId) != 0) {
		castfix -= GetEquippedTotalSPCardAndElse(ITEM_SP_SKILL_CAST_MINUS_OFFSET + skillId);
	}

	//----------------------------------------------------------------
	// 「アイオーンスタッフ」の「リーディングスペルブック」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_READING_SPELLBOOK) {
		eqpnum = EquipNumSearch(ITEM_ID_AEON_STUFF, EQUIP_REGION_ID_ARMS);
		if (eqpnum > 0) {
			castfix -= 1000 * LearnedSkillSearch(SKILL_ID_FREEZING_SPELL) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「アイオーンスタッフ」の「サモンファイアーボール」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SUMMON_FIRE_BALL) {
		eqpnum = EquipNumSearch(ITEM_ID_AEON_STUFF, EQUIP_REGION_ID_ARMS);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_RELEASE) >= 2) {
				castfix -= 1000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「アイオーンスタッフ」の「サモンウォーターボール」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SUMMON_WATER_BALL) {
		eqpnum = EquipNumSearch(ITEM_ID_AEON_STUFF, EQUIP_REGION_ID_ARMS);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_RELEASE) >= 2) {
				castfix -= 1000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「アイオーンスタッフ」の「サモンボールライトニング」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SUMMON_LIGHTNING_BALL) {
		eqpnum = EquipNumSearch(ITEM_ID_AEON_STUFF, EQUIP_REGION_ID_ARMS);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_RELEASE) >= 2) {
				castfix -= 1000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「アイオーンスタッフ」の「サモンストーン」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SUMMON_STONE) {
		eqpnum = EquipNumSearch(ITEM_ID_AEON_STUFF, EQUIP_REGION_ID_ARMS);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_RELEASE) >= 2) {
				castfix -= 1000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「不死鳥の冠」の「インスピレーション」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_INSPIRATION) {
		eqpnum = EquipNumSearch(ITEM_ID_FUSHICHONO_KANMURI, EQUIP_REGION_ID_HEAD_TOP);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_KINGS_GRACE) >= 5) {
				castfix -= 2000;
			}
		}
	}

	//----------------------------------------------------------------
	// 「不死鳥の冠」の「オーバーブランド」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_OVER_BLAND) {
		eqpnum = EquipNumSearch(ITEM_ID_FUSHICHONO_KANMURI, EQUIP_REGION_ID_HEAD_TOP);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_MOON_SLUSHER) >= 5) {
				castfix -= 1000;
			}
		}
	}

	//----------------------------------------------------------------
	// 「精霊のローブ」の「サイキックウェーブ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_PSYCHIC_WAVE) {
		eqpnum = EquipNumSearch(ITEM_ID_SEIREINO_ROBE, EQUIP_REGION_ID_BODY);
		if (eqpnum > 0) {
			castfix -= 2000 * eqpnum;

			// さらに精錬による効果
			if (n_A_BODY_DEF_PLUS >= 7) {
				castfix -= 2000 * eqpnum;
			}
			if (n_A_BODY_DEF_PLUS >= 9) {
				castfix -= 2000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「スナイピングベール」の「マススパイラル」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_MASS_SPIRAL) {
		eqpnum = EquipNumSearch(ITEM_ID_SNIPING_VEIL, EQUIP_REGION_ID_SHOULDER);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_MASS_SPIRAL) >= 5) {
				castfix -= 2000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「アルティメットモードチェンジャー　ナブのクロースセット」の「ポイズンスモーク」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_POISON_SMOKE) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_ULTIMATE_MODE_CHANGER_NABUNO_CLOTH, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			if (n_A_BODY_DEF_PLUS >= 7) {
				castfix -= 1000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「シールドリング」の「アースドライブ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_EARTH_DRIVE) {
		eqpnum = EquipNumSearch(ITEM_ID_SHIELD_RING);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_PINGPOINT_ATTACK) >= 5) {
				castfix -= 500 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「性能カスタマイズ」の、効果
	//----------------------------------------------------------------
	confval = g_objCharaConfCustomSkill.GetConf(CCharaConfCustomSkill.CONF_ID_SKILL_CAST_MINUS);
	if (confval != 0) {
		castfix -= 100 * confval;
	}

	// TODO: データ移行過渡処理
	// 計算したSP効果を、移行前のデータ形式に変換して、加算する
	if (IsEnableMigrationBlockTransit()) {

		var spTag = null;

		spTag = new CMigEquipableSpTag()
			.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_CAST_TIME)
			.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_SKILL, g_skillManager.GetBaseSkillId(skillId))

		castfix += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		castfix += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
	}

	return castfix;
}

/**
 * 特定スキルの固定詠唱時間を％で取得する。短縮効果が付与されていない場合は100が返される。
 * @param {Number} skillId 
 * @returns {Number} 装備品や性能カスタマイズ効果を考慮した後の固定詠唱時間％
 */
function GetCastScalingOfSkillForCastTimeFixed(skillId) {
	let itemCount = 0;
	let eqpnum = 0;
	/** 最終的な固定詠唱時間％ */
	let scaling = 100;

	// 装備品の短縮効果
	if (GetEquippedTotalSPEquip(ITEM_SP_SKILL_FIXED_TIME_OFFSET + skillId) != 0) {
		scaling -= GetEquippedTotalSPEquip(ITEM_SP_SKILL_FIXED_TIME_OFFSET + skillId);
	}

	if (GetEquippedTotalSPCardAndElse(ITEM_SP_SKILL_FIXED_TIME_OFFSET + skillId) != 0) {
		scaling -= GetEquippedTotalSPCardAndElse(ITEM_SP_SKILL_FIXED_TIME_OFFSET + skillId);
	}

	//----------------------------------------------------------------
	// 「ゲフェニア氷の魔道具」の、「ジャックフロスト」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_JACK_FROST) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_GEFFENIA_KORINO_MADOGU)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_COMMET) >= 5) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ジャガーノート」の、「バニシングバスター」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_BUNISHING_BASTER) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_JAGUAR_NOTE)) > 0) {
			scaling -= 20 * LearnedSkillSearch(SKILL_ID_BUNISHING_BASTER) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「身かわしのケープ」の、「レノヴァティオ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_RENOVATIO) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_MIKAWASHINO_CAPE)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_PRAEFATIO) >= 10) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「インペリアルアニマルローブ」の、「タロウの傷」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_TAROUNO_KIZU) {
		if ((eqpnum = EquipNumSearchMIG(ITEM_ID_IMPERIAL_ANIMAL_ROBE)) > 0) {
			scaling -= 20 * LearnedSkillSearch(SKILL_ID_KEIKAI) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「グレースアニマルローブ」の、「タロウの傷」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_TAROUNO_KIZU) {
		if ((eqpnum = EquipNumSearchMIG(ITEM_ID_GRACE_ANIMAL_ROBE)) > 0) {
			scaling -= 20 * LearnedSkillSearch(SKILL_ID_KEIKAI) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「崇拝の指輪」の、「オラティオ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ORATIO) {
		if ((eqpnum = EquipNumSearchMIG(ITEM_ID_SUHAINO_YUBIWA)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_ORATIO) >= 10) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「教授のミニグラス」の、「サイキックウェーブ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_PSYCHIC_WAVE) {
		if ((eqpnum = EquipNumSearchMIG(ITEM_ID_KYOZYUNO_MINIGLASS)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_PSYCHIC_WAVE) >= 5) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「グレースパニッシュメントローブ」の、「クリムゾンロック」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_CRYMSON_ROCK) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_GRACE_PUNISHMENT_ROBE)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_COMMET) >= 5) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「丹色のリボン」の、「エスパ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ESPA) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_NIRONO_RIBBON)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_ESFU) >= 10) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「丹色のリボン」の、「エスフ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ESFU) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_NIRONO_RIBBON)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_ESFU) >= 10) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「怨霊怪異の耳」の、「獅子吼」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SISIKO) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_ONRYO_KAIINO_MIMI)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_ZIRAISHIN) >= 5) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「幻獣の耳」の、「ジャックフロスト」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_JACK_FROST) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_GENZYUNO_MIMI)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_TELECHINESIS_INSTENCE) >= 5) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「アスモデウスの翼」の、「リフレッシュ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_REFRESH) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_ASMODEUSNO_TSUBASA)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_IGNITION_BREAK) >= 5) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「フォー・オブ・ア・カインド」の、「テトラボルテックス」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_TETRA_BOLTEX) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_FOUR_OF_A_KIND)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_COMMET) >= 5) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「フォー・オブ・ア・カインド」の、「ジャックフロスト」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_JACK_FROST) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_FOUR_OF_A_KIND)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_COMMET) >= 5) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「アサルトスーツ」の、「エイムドボルト」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_AIMED_BOLT) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_ASSAULT_SUIT)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_CAMOUFLAGE) >= 5) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ブックオブソーサリー」の、「アースグレイヴ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_EARTH_GRAVE) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_BOOK_OF_SOURCERERY)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_VACUUM_EXTREME) >= 5) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「フィフスエレメント」の、「ヴェラチュールスピアー」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_VERATURE_SPEAR) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_FIFTH_ELEMENT)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_VERATURE_SPEAR) >= 10) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「性能カスタマイズ」の、効果
	//----------------------------------------------------------------
	confval = g_objCharaConfCustomSkill.GetConf(CCharaConfCustomSkill.CONF_ID_SKILL_CAST_DOWN_FIXED);
	if (confval != 0) {
		scaling -= confval;
	}

	// TODO: データ移行過渡処理
	// 計算したSP効果を、移行前のデータ形式に変換して、加算する
	if (IsEnableMigrationBlockTransit()) {

		var spTag = null;

		spTag = new CMigEquipableSpTag()
			.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_FIXED_TIME)
			.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_SKILL, g_skillManager.GetBaseSkillId(skillId))
			.SetAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_VALUE_UNIT, MIG_VALUE_UNIT_ID_PERCENT);

		scaling += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		scaling += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
	}

	return scaling;
}

/**
 * 特定スキルの固定詠唱が短縮される時間をミリ秒で取得する。短縮効果が付与されていない場合は0が返される。
 * @param {Number} skillId 
 * @returns {Number} 装備品や性能カスタマイズ効果により短縮される時間（ミリ秒）
 */
function GetCastFixOfSkillForCastTimeFixed(skillId) {
	/** 短縮された固定詠唱時間（ミリ秒） */
	let castfix = 0;

	// 装備品の短縮効果
	if (GetEquippedTotalSPEquip(ITEM_SP_SKILL_FIXED_MINUS_OFFSET + skillId) != 0) {
		castfix -= GetEquippedTotalSPEquip(ITEM_SP_SKILL_FIXED_MINUS_OFFSET + skillId);
	}

	if (GetEquippedTotalSPCardAndElse(ITEM_SP_SKILL_FIXED_MINUS_OFFSET + skillId) != 0) {
		castfix -= GetEquippedTotalSPCardAndElse(ITEM_SP_SKILL_FIXED_MINUS_OFFSET + skillId);
	}

	//----------------------------------------------------------------
	// 「潜在解放ジェネティックIII」の「ハウリングオブマンドラゴラ」固定詠唱 0.5 秒短縮の打ち消し
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_HOWLING_OF_MANDRAGORA) {
		if (CardNumSearch(CARD_SET_ID_ENCHANT_GOKETSU_SENZAI_KAIHO_GENETIC_3) > 0) {
			if (EquipNumSearch(ITEM_SET_ID_NOBLESSE_OBLIGE_GRACE_CULTIVATION_COAT) > 0) {
				castfix += 500;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ファフニールヘルム」の、「ウォータードラゴンブレス」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_WATER_DRAGON_BREATH) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_FAFNIR_HELM)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_WATER_DRAGON_BREATH) >= 10) {
				if (LearnedSkillSearch(SKILL_ID_FIRE_DRAGON_BREATH) >= 10) {
					castfix -= 200 * eqpnum;
				}
			}
		}
	}

	//----------------------------------------------------------------
	// 「ファフニールヘルム」の、「ファイアードラゴンブレス」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_FIRE_DRAGON_BREATH) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_FAFNIR_HELM)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_WATER_DRAGON_BREATH) >= 10) {
				if (LearnedSkillSearch(SKILL_ID_FIRE_DRAGON_BREATH) >= 10) {
					castfix -= 200 * eqpnum;
				}
			}
		}
	}

	//----------------------------------------------------------------
	// 「りんりんにゃんカーベル」の、「マグロシールド」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_MAGURO_SHIELD) {								// マグロシールドを評価するとき
		if ((eqpnum = EquipNumSearch(ITEM_ID_RINRIN_NYAN_KABERU)) > 0) {	// りんりんニャンカーベル装備中で
			if (LearnedSkillSearch(SKILL_ID_UMINO_TAMASHI) >= 1) {			// 海の魂Lv1習得していれば
				castfix -= 1000 * eqpnum;									// 固定詠唱 1000 ms 短縮
			}
		}
	}

	//----------------------------------------------------------------
	// 精霊スキルによる短縮
	//----------------------------------------------------------------
	if (UsedSkillSearch(SKILL_ID_SERE_MODE) == 1) {
		switch (UsedSkillSearch(SKILL_ID_SERE)) {
		case 7:
		case 8:
		case 9:
			castfix -= 1000;
		}
	}

	//----------------------------------------------------------------
	// 「性能カスタマイズ」の、効果
	//----------------------------------------------------------------
	confval = g_objCharaConfCustomSkill.GetConf(CCharaConfCustomSkill.CONF_ID_SKILL_CAST_MINUS_FIXED);
	if (confval != 0) {
		castfix -= 100 * confval;
	}

	// TODO: データ移行過渡処理
	// 計算したSP効果を、移行前のデータ形式に変換して、加算する
	if (IsEnableMigrationBlockTransit()) {

		var spTag = null;

		spTag = new CMigEquipableSpTag()
			.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_FIXED_TIME)
			.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_SKILL, g_skillManager.GetBaseSkillId(skillId))

		castfix += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		castfix += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
	}

	return castfix;
}

/**
 * 公式サイトで「固定詠唱時間 + ◯秒」と表記される詠唱時間の増加値を取得する
 * GetCastFixOfSkillForCastTimeFixed とは違い全てのスキルに追加詠唱時間を付加する
 * @returns {Number} 
 */
function GetAdditionalFixedCastTime() {
	let additional_time = 0;
	/**
	 * プレイヤー状態異常「メランコリー」の効果
	 */
	additional_time += 500 * g_confDataDebuff[CCharaConfDebuff.CONF_ID_GLOOMYDAY];
	/**
	 * プレイヤー状態異常「精神衝撃」の効果
	 */
	additional_time += 500 * g_confDataDebuff[CCharaConfDebuff.CONF_ID_MANDRAGORA];
	return additional_time;
}

//================================================================================================================================
//================================================================================================================================
//====
//==== 特定スキルの　強制詠唱時間－○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

function GetCastScalingOfSkillForCastTimeForce(skillId) {

	var eqpnum = 0;

	var scaling = 100;



	//----------------------------------------------------------------
	// 「ワークキャップ」の「グリード」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_GREED) {
		eqpnum = EquipNumSearch(ITEM_ID_WORK_CAP);
		if (eqpnum > 0) {
			scaling -= 100 * eqpnum;
		}
	}



	//----------------------------------------------------------------
	// 「群星」の「グリード」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_GREED) {
		eqpnum = EquipNumSearch(ITEM_ID_GUNSE);
		if (eqpnum > 0) {
			if (GetHigherJobSeriesID(n_A_JOB) == JOB_SERIES_ID_BLACKSMITH) {
				scaling -= 100 * eqpnum;
			}
		}
	}



	//----------------------------------------------------------------
	// 「青い炎の杖　アビスゴーストセット」の「魔法力増幅」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_MAHORYOKU_ZOFUKU) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_AOI_HONONO_TSUE_ABYSS_GHOST_CARD);
		if (eqpnum > 0) {
			scaling -= 50 * eqpnum;
		}
	}



	//----------------------------------------------------------------
	// 「インペリアルマグマスーツ」の「グリード」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_GREED) {
		eqpnum = EquipNumSearchMIG(ITEM_ID_IMPERIAL_MAGMA_SUIT);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_FAW_SILVER_SNIPER) >= 5) {
				scaling -= 100 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「グレースマグマスーツ」の「グリード」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_GREED) {
		eqpnum = EquipNumSearchMIG(ITEM_ID_GRACE_MAGMA_SUIT);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_FAW_SILVER_SNIPER) >= 5) {
				scaling -= 100 * eqpnum;
			}
		}
	}



	//----------------------------------------------------------------
	// 「ゾディアック　巨蟹宮のマント」セットの「グリード」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_GREED) {
		eqpnum = CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_KYOKAIKYUNO_RING);
		if (eqpnum > 0) {
			if (IsSameJobClass(JOB_ID_MECHANIC)) {
				scaling -= 100 * eqpnum;
			}
		}
	}



	return scaling;
}

//================================================================================================================================
//================================================================================================================================
//====
//==== 特定スキルの　強制詠唱時間－○○秒　ここから
//====
//================================================================================================================================
//================================================================================================================================

function GetCastFixOfSkillForCastTimeForce(skillId) {

	var castfix = 0;



	return castfix;
}

/**
 * 特定スキルのクールタイムが短縮される時間をミリ秒で取得する。短縮効果が付与されていない場合は0が返される。
 * @param {Number} skillId 
 * @returns {Number} 装備品や性能カスタマイズ効果により短縮される時間（ミリ秒）
 */
function GetCoolFixOfSkill(skillId) {
	/** 短縮されたクールタイム */
	let coolfix = 0;
	let amp = 0;
	let daichi = 0;

	// 装備品の短縮効果
	if (GetEquippedTotalSPEquip(ITEM_SP_SKILL_COOL_MINUS_OFFSET + skillId) != 0) {
		coolfix -= GetEquippedTotalSPEquip(ITEM_SP_SKILL_COOL_MINUS_OFFSET + skillId);
	}

	if (GetEquippedTotalSPCardAndElse(ITEM_SP_SKILL_COOL_MINUS_OFFSET + skillId) != 0) {
		coolfix -= GetEquippedTotalSPCardAndElse(ITEM_SP_SKILL_COOL_MINUS_OFFSET + skillId);
	}

	//「潜龍昇天」CT短縮効果の打ち消し
	if (skillId === SKILL_ID_SENRYU_SHOTEN) {
		// グレース天地スーツ + ノブレスオブリージュを装備しているときに
		if (EquipNumSearch(ITEM_SET_ID_NOBLESSE_OBLIGE_GRACE_TENCHI_SUIT) != 0) {
			// 暴食のクラウン(インクイジター) か 時間のサークレット(インクイジター) を装備していて
			if (EquipNumSearch(ITEM_ID_GLUTTONY_CROWN_INQUISITOR) != 0 || EquipNumSearch(ITEM_ID_CIRCLET_OF_TIME_INQUISITOR) != 0) {
				// 上段装備の精錬値が7以上のとき
				if (n_A_HEAD_DEF_PLUS >= 7) {
					coolfix += 25 * 1000;
				}
			}
		}
	}

	//----------------------------------------------------------------
	// 「潜在覚醒(ダーククローI)」の「ダーククロー」CT短縮効果の打ち消し
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_DARK_CRAW) {
		if (CardNumSearch(CARD_SET_ID_ENCHANT_SENZAI_KAKUSEI_DARK_CLAW) > 1) {
			// 豪傑、真理の両方がセットされている場合は片方の効果を削除する
			coolfix += 30 * 1000;
		}
	}

	//----------------------------------------------------------------
	// 「アルティメットモードチェンジャー　クリムゾンアーティファクトセット」の「メテオストーム」延長（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_METEOR_STORM) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_ULTIMATE_MODE_CHANGER_CRYMSON_ARTIFACT, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			// 効果は「魔法力増強」スキル使用時のみ
			amp = UsedSkillSearch(SKILL_ID_MAHORYOKU_ZOFUKU);
			if (amp > 0) {
				coolfix += 200 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「アルティメットモードチェンジャー　ゴールデンロッドアーティファクトセット」の「ロードオブヴァーミリオン」延長（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_LORD_OF_VERMILLION) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_ULTIMATE_MODE_CHANGER_GOLDENROD_ARTIFACT, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			// 効果は「魔法力増強」スキル使用時のみ
			amp = UsedSkillSearch(SKILL_ID_MAHORYOKU_ZOFUKU);
			if (amp > 0) {
				coolfix += 5000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「アルティメットモードチェンジャー　アクアアーティファクトセット」の「ストームガスト」延長（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_STORM_GUST) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_ULTIMATE_MODE_CHANGER_AQUA_ARTIFACT, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			// 効果は「魔法力増強」スキル使用時のみ
			amp = UsedSkillSearch(SKILL_ID_MAHORYOKU_ZOFUKU);
			if (amp > 0) {
				coolfix += 5000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「アルティメットモードチェンジャー　フォレストアーティファクトセット」の「ヘヴンズドライブ」延長（ペナルティ）
	//----------------------------------------------------------------
	if ((skillId == SKILL_ID_HEAVENS_DRIVE) || (skillId == SKILL_ID_HEAVENS_DRIVE_FOR_CLONE)){
		eqpnum = EquipNumSearch(ITEM_SET_ID_ULTIMATE_MODE_CHANGER_FOREST_ARTIFACT, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			// 効果は「魔法力増強」スキル使用時のみ
			amp = UsedSkillSearch(SKILL_ID_MAHORYOKU_ZOFUKU);
			if (amp > 0) {
				coolfix += 200 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「猛炎と白魔の指輪」の「ファイアードラゴンブレス」短縮
	// （装備部位限定であるのに注意）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_FIRE_DRAGON_BREATH) {
		eqpnum = EquipNumSearch(ITEM_ID_MOENTO_HAKUMANO_YUBIWA, EQUIP_REGION_ID_ACCESSARY_2);
		if (eqpnum > 0) {
			coolfix -= 500 * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「猛炎と白魔の指輪」の「ウォータードラゴンブレス」短縮
	// （装備部位限定であるのに注意）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_WATER_DRAGON_BREATH) {
		eqpnum = EquipNumSearch(ITEM_ID_MOENTO_HAKUMANO_YUBIWA, EQUIP_REGION_ID_ACCESSARY_1);
		if (eqpnum > 0) {
			coolfix -= 500 * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「獄エンチャント」の「クリムゾンロック」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_CRYMSON_ROCK) {
		cardnum = CardNumSearch(CARD_ID_GOKU);
		if (cardnum > 0) {
			// 職業限定の効果
			if (IsSameJobClass(JOB_ID_WARLOCK)) {
				coolfix -= 1500;
			}
		}
	}

	//----------------------------------------------------------------
	// 「カルデュイの耳　ラフィネシールドセット」の「コメット」短縮
	// （ヒバムセットが実現されている場合は、効果が発揮されない）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_COMMET) {
		eqpnum = EquipNumSearchMIG(ITEM_SET_ID_CARDYUINO_MIMI_RAFINE_SHIELD_HIBAM, EQUIP_REGION_ID_ANY);
		if (eqpnum == 0) {
			eqpnum = EquipNumSearchMIG(ITEM_SET_ID_CARDYUINO_MIMI_RAFINE_SHIELD, EQUIP_REGION_ID_ANY);
			if (eqpnum > 0) {
				if (n_A_SHIELD_DEF_PLUS >= 7) {
					coolfix -= 20000 * eqpnum;
				}
				if (n_A_SHIELD_DEF_PLUS >= 9) {
					coolfix -= 40000 * eqpnum;
				}
			}
		}
	}

	//----------------------------------------------------------------
	// 「サバイバルシューズ サバイバルロッドセット」の「チェーンライトニング」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_CHAIN_LIGHTNING) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_SURVIVAL_SHOES_SURVIVAL_ROD_DEX_S1, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			if (n_A_Weapon_ATKplus >= 10) {
				coolfix -= 1000 * eqpnum;
			}
		}
	}

	if (skillId == SKILL_ID_CHAIN_LIGHTNING) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_SURVIVAL_SHOES_SURVIVAL_ROD_INT_S1, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			if (n_A_Weapon_ATKplus >= 10) {
				coolfix -= 1000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「サバイバルシューズ サバイバルロッドセット」の「アースストレイン」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_EARTH_STRAIN) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_SURVIVAL_SHOES_SURVIVAL_ROD_DEX_S1, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			if (n_A_Weapon_ATKplus >= 10) {
				coolfix -= 2400 * eqpnum;
			}
		}
	}

	if (skillId == SKILL_ID_EARTH_STRAIN) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_SURVIVAL_SHOES_SURVIVAL_ROD_INT_S1, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			if (n_A_Weapon_ATKplus >= 10) {
				coolfix -= 2400 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「勇者の靴 達人の斧 セット」の「アックストルネード」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_AXE_TORNADE) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_YUSHANO_KUTSU_TATSUZINNO_ONO, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			daichi = LearnedSkillSearch(SKILL_ID_HITO_DAICHINO_KENKYU);
			coolfix -= 200 * daichi * eqpnum;
		}
		eqpnum = EquipNumSearch(ITEM_SET_ID_YUSHANO_KUTSU_TATSUZINNO_ONO_S2, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			daichi = LearnedSkillSearch(SKILL_ID_HITO_DAICHINO_KENKYU);
			coolfix -= 200 * daichi * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「ガーディアンセット」の「パイルバンカー」延長（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_PILE_BUNKER) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_GUARDIAN_SET, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			if (n_A_BODY_DEF_PLUS >= 7 && n_A_SHOULDER_DEF_PLUS >= 7 && n_A_SHOES_DEF_PLUS >= 7) {
				coolfix += 3000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ガーディアンプロセッサ パイルバンカーセット」の「パイルバンカー」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_PILE_BUNKER) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_GUARDIAN_PROCESSOR_PILEBUNKER, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			if (n_A_Weapon_ATKplus >= 10) {
				coolfix -= 1000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「獄エンチャント」の「キャノンスピア」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_CANNON_SPEAR) {
		cardnum = CardNumSearch(CARD_ID_GOKU);
		if (cardnum > 0) {
			// 職業限定の効果
			if (IsSameJobClass(JOB_ID_ROYALGUARD)) {
				coolfix -= 1000;
			}
		}
	}

	//----------------------------------------------------------------
	// 「悪魔の手」の「獅子吼」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SISIKO) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_ONRYO_KAIINO_MIMI_AKUMANO_TE);
		if (eqpnum == 0) {
			eqpnum = EquipNumSearch(ITEM_ID_AKUMANO_TE, EQUIP_REGION_ID_HEAD_TOP);
			if (eqpnum > 0) {
				if (LearnedSkillSearch(SKILL_ID_ZIRAISHIN) >= 5) {
					coolfix -= 9500;
				}
			}
		}
	}

	//----------------------------------------------------------------
	// 「スカラバハイヒール エルヴンボウセット」の「シビアレインストーム」短縮
	//----------------------------------------------------------------
	if ( (skillId == SKILL_ID_SEVERE_RAINSTORM) || (skillId == SKILL_ID_SEVERE_RAINSTORM_EX) ) {
		eqpnum = EquipNumSearchMIG(ITEM_SET_ID_SCARABA_HIGHHEEL_ELVEN_BOW, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			if (n_A_SHOES_DEF_PLUS >= 7) {
				coolfix -= 2000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「反逆者のスカーフ」の「シャッターストーム」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SHUTTER_STORM) {
		eqpnum = EquipNumSearch(ITEM_ID_HANGYAKUSHANO_SCARF, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			coolfix -= 100 * LearnedSkillSearch(SKILL_ID_SHUTTER_STORM) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「反逆者のスカーフ」の「ヒートバレル」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_HEAT_BARREL) {
		eqpnum = EquipNumSearch(ITEM_ID_HANGYAKUSHANO_SCARF, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			coolfix -= 4000 * LearnedSkillSearch(SKILL_ID_SHUTTER_STORM) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「スナイピングベール」の「アンチマテリアルブラスト」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_UNTIMATERIAL_BLAST) {
		eqpnum = EquipNumSearch(ITEM_ID_SNIPING_VEIL, EQUIP_REGION_ID_SHOULDER);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_UNTIMATERIAL_BLAST) >= 5) {
				coolfix -= 2000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「スナイピングベール」の「ハンマーオブゴッド」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_HAMMER_OF_GOD) {
		eqpnum = EquipNumSearch(ITEM_ID_SNIPING_VEIL, EQUIP_REGION_ID_SHOULDER);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_HAMMER_OF_GOD) >= 5) {
				coolfix -= 10000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「不死鳥の冠」の「インスピレーション」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_INSPIRATION) {
		eqpnum = EquipNumSearch(ITEM_ID_FUSHICHONO_KANMURI, EQUIP_REGION_ID_HEAD_TOP);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_KINGS_GRACE) >= 5) {
				coolfix -= 10000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「インスピレーションI」と「豪傑 もしくは 真理」の「インスピレーション」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_INSPIRATION) {
		eqpnum = CardNumSearch(CARD_SET_ID_ENCHANT_GOKETSU_OR_SHINRI_AND_INSPIRATION_1);
		if (eqpnum === 2) {
			// 豪傑 と 真理 の両方がセットされている場合は片方は無効化する
			coolfix += 10000;
		}
	}

	//----------------------------------------------------------------
	// 「執行者のシューズ」の「ハルシネーションウォーク」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_HALLUCINATION_WALK) {
		eqpnum = EquipNumSearch(ITEM_ID_SHIKKOUSHANO_SHOES, EQUIP_REGION_ID_SHOES);
		if (eqpnum > 0) {
			coolfix -= 5000 * LearnedSkillSearch(SKILL_ID_WEAPON_BLOCKING) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「虹色のスカーフ」の「アンリミット」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_UNLIMIT) {
		eqpnum = EquipNumSearch(ITEM_ID_NIZIIRONO_SCARF, EQUIP_REGION_ID_SHOULDER);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_WUG_RIDER) >= 3) {
				coolfix -= 180000  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「虹色のスカーフ」の「アローストーム」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ARROW_STORM) {
		eqpnum = EquipNumSearch(ITEM_ID_NIZIIRONO_SCARF, EQUIP_REGION_ID_SHOULDER);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_CAMOUFLAGE) >= 5) {
				coolfix -= 200  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「インペリアルブーツ」の「シールドスペル」短縮
	//----------------------------------------------------------------
	if ((skillId == SKILL_ID_SHIELD_SPELL) || (skillId == SKILL_ID_SHIELD_SPELL_LV_1) || (skillId == SKILL_ID_SHIELD_SPELL_LV_2)) {
		eqpnum = EquipNumSearch(ITEM_ID_IMPERIAL_BOOTS, EQUIP_REGION_ID_SHOES);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_INSPIRATION) >= 5) {
				coolfix -= 2000  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「精霊王の宝冠」の「アースグレイブ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_EARTH_GRAVE) {
		eqpnum = EquipNumSearch(ITEM_ID_SEREONO_HOKAN, EQUIP_REGION_ID_HEAD_TOP);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_WARMER) >= 5) {
				coolfix -= 1000  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「精霊王の宝冠」の「ヴェラチュールスピアー」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_VERATURE_SPEAR) {
		eqpnum = EquipNumSearch(ITEM_ID_SEREONO_HOKAN, EQUIP_REGION_ID_HEAD_TOP);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_WARMER) >= 5) {
				coolfix -= 1000  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「精霊王の宝冠」の「ダイヤモンドダスト」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_DIAMOND_DUST) {
		eqpnum = EquipNumSearch(ITEM_ID_SEREONO_HOKAN, EQUIP_REGION_ID_HEAD_TOP);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_WARMER) >= 5) {
				coolfix -= 1000  * eqpnum;
			}
		}
	}

	// クレイジーウィード CT 減少
	if (skillId == SKILL_ID_CRAZY_WEED) {
		// スキル習得時の効果
		if (LearnedSkillSearch(SKILL_ID_HOWLING_OF_MANDRAGORA) >= 5) {
			// ハウリングマンドラゴラLv5習得時
			if (EquipNumSearch(ITEM_ID_JEJECAP) > 0 || EquipNumSearch(ITEM_ID_GRACE_CULTIVATION_COAT) > 0) {
				// 「ジェジェキャップ」または「グレースカルティベイションコート」装備時
				coolfix -= 4.5  * 1000;
			}
		}
		// 競合する効果の打消し
		if (EquipNumSearch(ITEM_ID_GLUTTONY_CROWN_BIOLO) > 0 && n_A_HEAD_DEF_PLUS >= 7) {
			// 精錬値7以上の暴食のクラウン(バイオロ)を装備時
			if (EquipNumSearch(ITEM_ID_GRACE_CULTIVATION_COAT) > 0 || CardNumSearch(CARD_SET_ID_ENCHANT_GOKETSU_SENZAI_KAKUSEI_CRAZY_WEED) > 0) {
				// 「グレースカルティベイションコート」または「潜在覚醒(クレイジーウィード) 」を装備時
				coolfix += 4.5  * 1000;
			}
		}
	}

	//----------------------------------------------------------------
	// 「虹色のマフラー」の、スキル習得による効果
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_METALIC_SOUND) {
		eqpnum = EquipNumSearch(ITEM_ID_NIZIIRONO_MUFFLER);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_FRIGNO_UTA) >= 5) {
				coolfix -= 200  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「螺旋風魔の宝珠」の、スキル習得による効果
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_FUMASHURIKEN_RANKA) {
		eqpnum = EquipNumSearch(ITEM_ID_RASEN_FUMANO_HOZYU);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_GENZYUTSU_KYOGAKU) >= 5) {
				coolfix -= 100  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「螺旋風魔の宝珠」の、スキル習得による効果
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_IZAYOI) {
		eqpnum = EquipNumSearch(ITEM_ID_RASEN_FUMANO_HOZYU);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_MEIKYO_SHISUI) >= 5) {
				coolfix -= 25000  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「シールドリング」の、スキル習得による効果
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_EARTH_DRIVE) {
		eqpnum = EquipNumSearch(ITEM_ID_SHIELD_RING);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_INSPIRATION) >= 5) {
				coolfix -= 1500  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ダークリング」の、スキル習得による効果
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_DARK_CRAW) {
		eqpnum = EquipNumSearch(ITEM_ID_DARK_RING);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_DARK_CRAW) >= 5) {
				coolfix -= 25000  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「知覚増幅リング」の、「サイキックウェーブ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_PSYCHIC_WAVE) {
		eqpnum = EquipNumSearch(ITEM_ID_CHIKAKU_ZOFUKU_RING);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_VACUUM_EXTREME) >= 5) {
				coolfix -= 1000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ジャスパーサークレット」の、「イグニッションブレイク」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_IGNITION_BREAK) {

		// 適用除外条件
		if (
			(EquipNumSearch(ITEM_SET_ID_ASMODEUSNO_TSUBASA_ZYASPER_CIRCLET) > 0)
			&&
			(LearnedSkillSearch(SKILL_ID_IGNITION_BREAK) >= 5)
		) {
		}
		else {

			eqpnum = EquipNumSearch(ITEM_ID_ZYASPER_CIRCLET);
			if (eqpnum > 0) {
				if (LearnedSkillSearch(SKILL_ID_SONIC_WAVE) >= 5) {
					coolfix -= 2500 * eqpnum;
				}
			}
		}
	}

	//----------------------------------------------------------------
	// 「暴威のマフラー」の、「シビアレインストーム」短縮
	//----------------------------------------------------------------
	if ( (skillId == SKILL_ID_SEVERE_RAINSTORM) || (skillId == SKILL_ID_SEVERE_RAINSTORM_EX) ) {
		eqpnum = EquipNumSearchMIG(ITEM_ID_BOINO_MUFFLER);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_MELANCHOLY) >= 5) {
				coolfix -= 2000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「暴威のマフラー　嵐の弓セット」の、「シビアレインストーム」延長（ペナルティ）
	//----------------------------------------------------------------
	if ( (skillId == SKILL_ID_SEVERE_RAINSTORM) || (skillId == SKILL_ID_SEVERE_RAINSTORM_EX) ) {
		eqpnum = EquipNumSearchMIG(ITEM_SET_ID_BOINO_MUFFLER_ARASHINO_YUMI);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_MELANCHOLY) >= 5) {
				coolfix += 2000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「暴威のマフラー　エルヴンボウ　スカラバハイヒールセット」の、「シビアレインストーム」延長（ペナルティ）
	//----------------------------------------------------------------
	if ( (skillId == SKILL_ID_SEVERE_RAINSTORM) || (skillId == SKILL_ID_SEVERE_RAINSTORM_EX) ) {
		eqpnum = EquipNumSearchMIG(ITEM_SET_ID_BOINO_MUFFLER_SCARABA_HIGHHEEL_ELVEN_BOW);
		if (eqpnum > 0) {
			if (n_A_SHOES_DEF_PLUS >= 7) {
				if (LearnedSkillSearch(SKILL_ID_MELANCHOLY) >= 5) {
					coolfix += 2000 * eqpnum;
				}
			}
		}
	}

	//----------------------------------------------------------------
	// 「精神拡張リング」の、「テレキネシスインテンス」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_TELECHINESIS_INSTENCE) {
		eqpnum = EquipNumSearch(ITEM_ID_SEISHIN_KAKUCHO_RING);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_TELECHINESIS_INSTENCE) >= 5) {
				coolfix -= 75000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「よちよちウリボウスタイ」の、「キャロットビート」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_CARROT_BEAT) {
		eqpnum = EquipNumSearch(ITEM_ID_YOCHIYOCHI_URIBO_SUTAI);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_SEIMEINO_TAMASHI) >= 1) {
				coolfix -= 200 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「追撃者のリング」の、「エスケープ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ESCAPE) {
		eqpnum = EquipNumSearch(ITEM_ID_TSUIGEKISHANO_RING);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_ESCAPE) >= 5) {
				coolfix -= 500 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「リングオブパズズ」の、「チェーンライトニング」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_CHAIN_LIGHTNING) {
		eqpnum = EquipNumSearch(ITEM_ID_RING_OF_PAZUZU);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_CHAIN_LIGHTNING) >= 5) {
				coolfix -= 500 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「天魔外道の外套」の、「獅子吼」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SISIKO) {
		eqpnum = EquipNumSearch(ITEM_ID_TENMA_GEDONO_GAITO);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_ZIRAISHIN) >= 5) {
				coolfix -= 200 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ルーングリーブ」の、「ハンドレッドスピア」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_HANDRED_SPEAR) {
		eqpnum = EquipNumSearch(ITEM_ID_RUNE_GREEVE);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_DRAGON_TRAINING) >= 5) {
				coolfix -= 1000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「スカルリング」の、「死霊爆発」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SHIRYO_BAKUHATSU) {
		eqpnum = EquipNumSearch(ITEM_ID_SCALL_RING);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_SHIRYO_HYOI) >= 5) {
				coolfix -= 500 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「エリュマントスの皮」の「アローストーム」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ARROW_STORM) {
		eqpnum = EquipNumSearchMIG(ITEM_ID_ERYMANTHNO_KAWA);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_CAMOUFLAGE) >= 5) {
				coolfix -= 300  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「インペリアルアニマルローブ」の、「タロウの傷」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_TAROUNO_KIZU) {
		if ((eqpnum = EquipNumSearchMIG(ITEM_ID_IMPERIAL_ANIMAL_ROBE)) > 0) {
			coolfix -= 1000 * LearnedSkillSearch(SKILL_ID_KEIKAI) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「グレースアニマルローブ」の、「タロウの傷」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_TAROUNO_KIZU) {
		if ((eqpnum = EquipNumSearchMIG(ITEM_ID_GRACE_ANIMAL_ROBE)) > 0) {
			coolfix -= 2500 * LearnedSkillSearch(SKILL_ID_KEIKAI) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「インペリアルクルシフォームスーツ」の、「十文字斬り」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ZYUMONZIGIRI) {
		if ((eqpnum = EquipNumSearchMIG(ITEM_ID_IMPERIAL_CRUCIFORM_SUIT)) > 0) {
			coolfix -= 100 * Math.floor(LearnedSkillSearch(SKILL_ID_ZYUMONZIGIRI) / 5) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「グレースクルシフォームスーツ」の、「十文字斬り」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ZYUMONZIGIRI) {
		if ((eqpnum = EquipNumSearchMIG(ITEM_ID_GRACE_CRUCIFORM_SUIT)) > 0) {
			coolfix -= 100 * Math.floor(LearnedSkillSearch(SKILL_ID_ZYUMONZIGIRI) / 2) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「山岳ヘルメット」の、「アックストルネード」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_AXE_TORNADE) {
		if ((eqpnum = EquipNumSearchMIG(ITEM_ID_SANGAKU_HELMET)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_AXE_BOOMERANG) >= 5) {
				coolfix -= 500 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「正義の冠」の、「インスピレーション」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_INSPIRATION) {
		if ((eqpnum = EquipNumSearchMIG(ITEM_ID_SEIGINO_KANMURI)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_INSPIRATION) >= 5) {
				coolfix -= 10000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「インペリアルマグマスーツ」の「アックストルネード」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_AXE_TORNADE) {
		eqpnum = EquipNumSearchMIG(ITEM_ID_IMPERIAL_MAGMA_SUIT);
		if (eqpnum > 0) {
			coolfix -= 100 * LearnedSkillSearch(SKILL_ID_AXE_BOOMERANG) * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「グレースマグマスーツ」の「アックストルネード」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_AXE_TORNADE) {
		eqpnum = EquipNumSearchMIG(ITEM_ID_GRACE_MAGMA_SUIT);
		if (eqpnum > 0) {
			coolfix -= 300 * LearnedSkillSearch(SKILL_ID_AXE_BOOMERANG) * eqpnum;
		}
	}

	// 「天使さま助けて」のCT減少
	if (skillId == SKILL_ID_TENSHISAMA_TASUKETE) {
		// スキル習得時の効果
		if (LearnedSkillSearch(SKILL_ID_BREAK_THROUGH) >= 5) {
			// ブレイクスルーLv5習得時
			if (EquipNumSearchMIG(ITEM_ID_IMPERIAL_ARTIS_SUIT) > 0) {
				// インペリアルアーティススーツ装備時
				coolfix -= 60 * 1000;
			}
			if (EquipNumSearchMIG(ITEM_ID_GRACE_ARTIS_SUIT) > 0) {
				// グレースアーティススーツ装備時
				coolfix -= 180 * 1000;
			}
		}
		// 競合する効果の打ち消し
		if (EquipNumSearch(ITEM_ID_IMPERIAL_ARTIS_SUIT) != 0 || EquipNumSearch(ITEM_ID_GRACE_ARTIS_SUIT) != 0) {
			// 「インペリアルアーティススーツ」または「グレースアーティススーツ」を装備時
			if (EquipNumSearch(ITEM_ID_CIRCLET_OF_TIME_HYPERNOVICE) != 0 || EquipNumSearch(ITEM_ID_GLUTTONY_CROWN_HYPER_NOVICE) != 0) {
				// 「時間のサークレット(ハイパーノービス)」または「暴食のクラウン(ハイパーノービス)」を装備時
				if (n_A_HEAD_DEF_PLUS >= 7) {
					// 精錬値が7以上のCT減少効果を打ち消し
					coolfix += 240 * 1000;
				}
			}
		}
	}

	//----------------------------------------------------------------
	// 「教授のミニグラス」の「アースグレイヴ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_EARTH_GRAVE) {
		eqpnum = EquipNumSearchMIG(ITEM_ID_KYOZYUNO_MINIGLASS);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_PSYCHIC_WAVE) >= 5) {
				coolfix -= 4000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「教授のミニグラス」の「ダイヤモンドダスト」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_DIAMOND_DUST) {
		eqpnum = EquipNumSearchMIG(ITEM_ID_KYOZYUNO_MINIGLASS);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_PSYCHIC_WAVE) >= 5) {
				coolfix -= 4000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「再誕の宝冠　ラフィネシールドセット」の「コメット」延長（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_COMMET) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_SAITANNO_HOKAN_LAFINE_SHIELD, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			if (n_A_HEAD_DEF_PLUS > 7) {
				coolfix += 40000 * eqpnum;
			}
			if (n_A_HEAD_DEF_PLUS > 9) {
				coolfix += 45000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「グレースレインストームスーツ」の「シビアレインストーム」短縮
	//----------------------------------------------------------------
	if ((skillId == SKILL_ID_SEVERE_RAINSTORM)
		|| (skillId == SKILL_ID_SEVERE_RAINSTORM_EX)) {

		eqpnum = EquipNumSearch(ITEM_ID_GRACE_RAINSTORM_SUIT);
		if (eqpnum > 0) {

			if (LearnedSkillSearch(SKILL_ID_MELANCHOLY) >= 5) {

				// 特定セット成立時は発動しないので、それを除外
				if (EquipNumSearch(ITEM_SET_ID_GRACE_RAINSTORM_SUIT_ARASHINO_YUMI) > 0) {
				}
				else if (
					(EquipNumSearch(ITEM_SET_ID_GRACE_RAINSTORM_SUIT_ELVEN_BOW_SCARABA_HIGHHEEL) > 0)
					&&
					(n_A_SHOES_DEF_PLUS >= 7)
				) {
				}
				else if (EquipNumSearch(ITEM_SET_ID_GRACE_RAINSTORM_SUIT_BOINO_MUFFLER) > 0) {
				}

				// このケースのみ発動
				else {
					coolfix -= 2000 * eqpnum;
				}
			}
		}
	}

	//----------------------------------------------------------------
	// 「グレースサイキックローブ」の「バキュームエクストリーム」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_VACUUM_EXTREME) {

		eqpnum = EquipNumSearch(ITEM_ID_GRACE_PSYCHIC_ROBE);
		if (eqpnum > 0) {

			if (LearnedSkillSearch(SKILL_ID_PSYCHIC_WAVE) >= 5) {

				// 特定セット成立時は発動しないので、それを除外
				if (
					(EquipNumSearch(ITEM_SET_ID_GRACE_PSYCHIC_ROBE_FURUBITA_KAZENO_SASAYAKI) > 0)
					&&
					(n_A_HEAD_DEF_PLUS >= 7)
				) {
				}

				// このケースのみ発動
				else {
					coolfix -= 3000 * eqpnum;
				}
			}
		}
	}

	//----------------------------------------------------------------
	// 「リングオブケリュネイア」の「アンリミット」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_UNLIMIT) {
		eqpnum = EquipNumSearchMIG(ITEM_ID_RING_OF_CERYNEIA);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_CAMOUFLAGE) >= 5) {
				coolfix -= 45000  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ノーザンクロス」の「ドレインライフ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_DRAIN_LIFE) {
		eqpnum = EquipNumSearchMIG(ITEM_ID_NORTHERN_CROSS);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_TELECHINESIS_INSTENCE) >= 5) {
				coolfix -= 2000  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「グレースコンフィデンシャルメイル」の、「ソニックウェーブ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SONIC_WAVE) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_GRACE_CONFIDENCIAL_MAIL)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_IGNITION_BREAK) >= 5) {
				coolfix -= 200  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「古びたミダスのささやき」の、「ハウリングオブマンドラゴラ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_HOWLING_OF_MANDRAGORA) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_FURUBITA_MIDASS)) > 0) {

			// 特定セット成立時は発動しないので、それを除外
			if (
				(
					(EquipNumSearch(ITEM_SET_ID_GRACE_CULTIVATION_COAT_FURUBITA_MIDASSNO_SASAYAKI) > 0)
					&&
					(LearnedSkillSearch(SKILL_ID_CRAZY_WEED) >= 10)
				)
			) {
			}

			// このケースのみ発動
			else {

				coolfix -= 4000  * eqpnum;

				if (n_A_HEAD_DEF_PLUS >= 7) {
					coolfix -= 6000  * eqpnum;
				}

				if (n_A_HEAD_DEF_PLUS >= 9) {
					coolfix -= 2000  * eqpnum;
				}
			}
		}
	}

	//----------------------------------------------------------------
	// 「グレースカルティベイションコート」の、「ハウリングオブマンドラゴラ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_HOWLING_OF_MANDRAGORA) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_GRACE_CULTIVATION_COAT)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_CRAZY_WEED) >= 10) {
				coolfix -= 12000  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「アヴァレーツォ」の、「ダークイリュージョン」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_DARK_ILLUSION) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_AVARECO)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_CROSS_IMPACT) >= 5) {
				coolfix -= 4000  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「アヴァレーツォ」の、「ハルシネーションウォーク」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_HALLUCINATION_WALK) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_AVARECO)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_CROSS_IMPACT) >= 5) {
				coolfix -= 20000  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「赤い猫耳魔女帽子」の、「ダイヤモンドダスト」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_DIAMOND_DUST) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_AKAI_NEKOMIMI_MAZYO_BOSHI)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_CLOUD_KILL) >= 5) {
				coolfix -= 1000  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「赤い猫耳魔女帽子」の、「サイキックウェーブ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_PSYCHIC_WAVE) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_AKAI_NEKOMIMI_MAZYO_BOSHI)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_VACUUM_EXTREME) >= 5) {
				coolfix -= 2000  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ウルフオフィサーハット」の「アローストーム」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ARROW_STORM) {
		eqpnum = EquipNumSearch(ITEM_ID_WOLF_OFFICER_HAT);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_CAMOUFLAGE) >= 5) {
				coolfix -= 200  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「怨霊怪異の耳」の「獅子吼」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SISIKO) {
		eqpnum = EquipNumSearch(ITEM_ID_ONRYO_KAIINO_MIMI);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_ZIRAISHIN) >= 5) {
				coolfix -= 9500;
			}
		}
	}

	//----------------------------------------------------------------
	// 「幻獣の耳」の、「テレキネシスインテンス」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_TELECHINESIS_INSTENCE) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_GENZYUNO_MIMI)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_TELECHINESIS_INSTENCE) >= 5) {
				coolfix -= 80000;
			}
		}
	}

	//----------------------------------------------------------------
	// 「アスモデウスの翼」の、「イグニッションブレイク」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_IGNITION_BREAK) {

		eqpnum = EquipNumSearch(ITEM_ID_ASMODEUSNO_TSUBASA);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_IGNITION_BREAK) >= 5) {
				coolfix -= 2500 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ゾディアック　人馬宮のマント」セットの「アンリミット」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_UNLIMIT) {
		eqpnum = CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_ZINBAKYUNO_MANT);
		if (eqpnum > 0) {
			if (IsSameJobClass(JOB_ID_RANGER)) {
				coolfix -= 18000 * n_A_SHOULDER_DEF_PLUS * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ゾディアック　双魚宮のダイアデム」セットの「サイキックウェーブ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_PSYCHIC_WAVE) {
		eqpnum = CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_SOGYOKYUNO_DIADEM);
		if (eqpnum > 0) {
			if (IsSameJobClass(JOB_ID_SORCERER)) {
				coolfix -= 200 * n_A_HEAD_DEF_PLUS * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ゾディアック　天蝎宮のシューズ」セットの「ダークイリュージョン」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_DARK_ILLUSION) {
		eqpnum = CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_TENKATSUKYUNO_SHOES);
		if (eqpnum > 0) {
			if (IsSameJobClass(JOB_ID_GILOTINCROSS)) {
				coolfix -= 500 * Math.floor(n_A_SHOES_DEF_PLUS / 2) * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ゾディアック　白羊宮のクラウン」セットの「キャノンスピア」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_CANNON_SPEAR) {
		eqpnum = CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_HAKUYOKYUNO_CROWN);
		if (eqpnum > 0) {
			if (IsSameJobClass(JOB_ID_ROYALGUARD)) {
				coolfix -= 100 * n_A_HEAD_DEF_PLUS * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ゾディアック　宝瓶宮のクラウン」セットの「テレキネシスインテンス」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_TELECHINESIS_INSTENCE) {
		eqpnum = CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_HOBINKYUNO_CROWN);
		if (eqpnum > 0) {
			if (IsSameJobClass(JOB_ID_WARLOCK)) {
				coolfix -= 8000 * n_A_HEAD_DEF_PLUS * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ゾディアック　宝瓶宮のリング」セットの「テレキネシスインテンス」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_TELECHINESIS_INSTENCE) {
		eqpnum = CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_HOBINKYUNO_RING);
		if (eqpnum > 0) {
			if (IsSameJobClass(JOB_ID_WARLOCK)) {
				coolfix -= 75000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「夢見る赤羊」の「アンリミット」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_UNLIMIT) {
		eqpnum = EquipNumSearch(ITEM_ID_YUMEMIRU_AKA_HITSUZI);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_CAMOUFLAGE) >= 5) {
				coolfix -= 60000  * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「エンドオブザワールド」の「ハルシネーションウォーク」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_HALLUCINATION_WALK) {
		eqpnum = EquipNumSearch(ITEM_ID_END_OF_THE_WORLD);
		if (eqpnum > 0) {
			coolfix -= 5000 * LearnedSkillSearch(SKILL_ID_CROSS_IMPACT) * eqpnum;
		}
	}
	
	//----------------------------------------------------------------
	// 「潜在解放（ギロチンクロスIII）」の「ハルシネーションウォーク」CT 45 秒短縮を無効化する
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_HALLUCINATION_WALK) {
		if (CardNumSearch(CARD_SET_ID_ENCHANT_GOKETSU_SENZAI_KAIHO_GUILLOTINE_CROSS_3) > 0) {
			eqpnum = EquipNumSearch(ITEM_ID_SHIKKOUSHANO_SHOES);
			eqpnum += EquipNumSearch(ITEM_ID_AVARECO);
			eqpnum += EquipNumSearch(ITEM_ID_END_OF_THE_WORLD);
			if (eqpnum > 0) {
				coolfix += 45 * 1000;
			}
		}
	}

	//----------------------------------------------------------------
	// 「反逆の懐中時計」の「アンチマテリアルブラスト」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_UNTIMATERIAL_BLAST) {
		eqpnum = EquipNumSearch(ITEM_ID_HANGYAKUNO_KAICHU_DOKEI);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_FALLIN_ANGEL) >= 1) {
				coolfix -= 5000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「反逆の懐中時計」の「リッチズコイン」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_RICHS_COIN) {
		eqpnum = EquipNumSearch(ITEM_ID_HANGYAKUNO_KAICHU_DOKEI);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_FALLIN_ANGEL) >= 1) {
				coolfix -= 3000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「エレメンタルポゼッション」の「ヴェラチュールスピアー」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_VERATURE_SPEAR) {
		eqpnum = EquipNumSearch(ITEM_ID_ELEMENTAL_POSSESSION);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_VERATURE_SPEAR) >= 10) {
				coolfix -= 1000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「エレメンタルポゼッション」の「サモンベントス」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SUMMON_VENTOS) {
		eqpnum = EquipNumSearch(ITEM_ID_ELEMENTAL_POSSESSION);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_VERATURE_SPEAR) >= 10) {
				coolfix -= 25000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「シンフルルビーリング　ジャスパーリング」の「イグニッションブレイク」延長（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_IGNITION_BREAK) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_SINFUL_RUBY_RING_ZYASPER_RING);
		if (eqpnum > 0) {
			coolfix += 200 * eqpnum;
		}
	}

	//----------------------------------------------------------------
	// 「アサルトスーツ」の「アローストーム」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ARROW_STORM) {
		eqpnum = EquipNumSearch(ITEM_ID_ASSAULT_SUIT);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_CAMOUFLAGE) >= 5) {
				coolfix -= 300 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「デスブリンガー」の「ダーククロー」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_DARK_CRAW) {
		eqpnum = EquipNumSearch(ITEM_ID_DEATH_BRINGER);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_HALLUCINATION_WALK) >= 5) {
				coolfix -= 60000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ブックオブソーサリー」の「アースグレイヴ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_EARTH_GRAVE) {
		eqpnum = EquipNumSearch(ITEM_ID_BOOK_OF_SOURCERERY);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_VACUUM_EXTREME) >= 5) {
				coolfix -= 1000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「プラチナムアビトレイター」の「キャノンスピア」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_CANNON_SPEAR) {
		eqpnum = EquipNumSearch(ITEM_ID_PLATINUM_ARBITRATOR);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_CANNON_SPEAR) >= 5) {
				coolfix -= 1500 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「セイクリッドラペル」の「オラティオ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ORATIO) {
		eqpnum = EquipNumSearch(ITEM_ID_SACRED_LAPEL);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_ORATIO) >= 10) {
				coolfix -= 1500 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「フィフスエレメント」の「サモンアクア」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SUMMON_AQUA) {
		eqpnum = EquipNumSearch(ITEM_ID_FIFTH_ELEMENT);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_VERATURE_SPEAR) >= 10) {
				coolfix -= 25000 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// 「サンクトゥス」の「爆気散弾」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_BAKKISANDAN) {
		eqpnum = EquipNumSearch(ITEM_ID_SANCTUS);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_SHURASHINDAN) >= 10) {
				coolfix -= 200 * eqpnum;
			}
		}
	}

	//----------------------------------------------------------------
	// スキル「海の魂」の「大トロ」短縮
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_OTORO) {
		if (Math.max(LearnedSkillSearch(SKILL_ID_UMINO_TAMASHI), UsedSkillSearch(SKILL_ID_UMINO_TAMASHI)) >= 1) {
			coolfix -= 3000;
		}
	}

	//----------------------------------------------------------------
	// <反逆者>による「豪傑＋潜在覚醒(スラッグショットI)」の「スラッグショット」延長（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SLUG_SHOT) {
		if (CardNumSearch(CARD_SET_ID_ENCHANT_GOKETSU_SENZAI_KAKUSEI_SLUGSHOT) > 0) {
			if (CardNumSearch(CARD_ID_ENCHANT_HANGYAKUSHA) > 0) {
				coolfix += 10000;
			}
		}
	}

	//----------------------------------------------------------------
	// 「真理の解放＋潜在覚醒(サイキックウェーブII)」の「サイキックウェーブ」延長（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_PSYCHIC_WAVE) {
		if (CardNumSearch(CARD_SET_ID_ENCHANT_SHINRINO_KAIHO_SENZAI_KAKUSEI_PSYCHIC_WAVE_2) > 0) {
			// 知覚増幅リング
			if (EquipNumSearch(ITEM_ID_CHIKAKU_ZOFUKU_RING) > 0) {
				coolfix += 2000;
			}
			// ブリリアントアクアマリンネックレス
			else if (EquipNumSearch(ITEM_ID_BRILLIANT_AQUAMARINE_NECKLACE) > 0) {
				coolfix += 2000;
			}
			// [グレースサイキックローブ]と[ノブレスオブリージュ]のセット効果発動
			else if (EquipNumSearch(ITEM_SET_ID_NOBLESSE_OBLIGE_GRACE_PSYCHIC_ROBE) > 0) {
				coolfix += 2000;
			}
			// [双魚宮のリング]と[ゾディアック]のセット効果発動
			else if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_SOGYOKYUNO_RING) > 0) {
				coolfix += 2000;
			}
		}
	}

	//----------------------------------------------------------------
	// 「性能カスタマイズ」の、効果
	//----------------------------------------------------------------
	confval = g_objCharaConfCustomSkill.GetConf(CCharaConfCustomSkill.CONF_ID_SKILL_COOL_MINUS);
	if (confval != 0) {
		coolfix -= 100 * confval;
	}

	// TODO: データ移行過渡処理
	// 計算したSP効果を、移行前のデータ形式に変換して、加算する
	if (IsEnableMigrationBlockTransit()) {

		var spTag = null;

		spTag = new CMigEquipableSpTag()
			.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_COOL_TIME)
			.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_SKILL, g_skillManager.GetBaseSkillId(skillId))

		coolfix += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		coolfix += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
	}

	return coolfix;
}

//================================================================================================================================
//================================================================================================================================
//====
//==== 特定スキルの消費ＳＰ－○○％　ここから
//====
//================================================================================================================================
//================================================================================================================================

function GetCostScalingOfSkill(skillId) {

	var scaling = 100;


	// 装備品の短縮効果
	if (GetEquippedTotalSPEquip(ITEM_SP_SKILL_COST_SCALING_OFFSET + skillId) != 0) {
		scaling -= GetEquippedTotalSPEquip(ITEM_SP_SKILL_COST_SCALING_OFFSET + skillId);
	}

	if (GetEquippedTotalSPCardAndElse(ITEM_SP_SKILL_COST_SCALING_OFFSET + skillId) != 0) {
		scaling -= GetEquippedTotalSPCardAndElse(ITEM_SP_SKILL_COST_SCALING_OFFSET + skillId);
	}



	//----------------------------------------------------------------
	// 「性能カスタマイズ」の、効果
	//----------------------------------------------------------------
	confval = g_objCharaConfCustomSkill.GetConf(CCharaConfCustomSkill.CONF_ID_SKILL_COST_DOWN);
	if (confval != 0) {
		scaling -= confval;
	}





	// TODO: データ移行過渡処理
	// 計算したSP効果を、移行前のデータ形式に変換して、加算する
	if (IsEnableMigrationBlockTransit()) {

		var spTag = null;

		spTag = new CMigEquipableSpTag()
			.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_SKILL_COST)
			.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_SKILL, g_skillManager.GetBaseSkillId(skillId))
			.SetAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_VALUE_UNIT, MIG_VALUE_UNIT_ID_PERCENT);

		scaling += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		scaling += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
	}



	return scaling;
}

//================================================================================================================================
//================================================================================================================================
//====
//==== 特定スキルの消費ＳＰ－○○　ここから
//====
//================================================================================================================================
//================================================================================================================================

function GetCostFixOfSkill(skillId) {

	var costfix = 0;


	// 装備品の短縮効果
	if (GetEquippedTotalSPEquip(ITEM_SP_SKILL_COST_MINUS_OFFSET + skillId) != 0) {
		costfix -= GetEquippedTotalSPEquip(ITEM_SP_SKILL_COST_MINUS_OFFSET + skillId);
	}

	if (GetEquippedTotalSPCardAndElse(ITEM_SP_SKILL_COST_MINUS_OFFSET + skillId) != 0) {
		costfix -= GetEquippedTotalSPCardAndElse(ITEM_SP_SKILL_COST_MINUS_OFFSET + skillId);
	}



	//----------------------------------------------------------------
	// 「冷気の魔道書」の「コールドボルト」消費増加（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_COLD_BOLT) {
		eqpnum = EquipNumSearch(ITEM_ID_REIKINO_MADOSHO, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			costfix += 5 * n_A_Weapon_ATKplus * eqpnum;
		}
	}



	//----------------------------------------------------------------
	// 「冷気の魔道書」の「ダイヤモンドダスト」消費増加（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_DIAMOND_DUST) {
		eqpnum = EquipNumSearch(ITEM_ID_REIKINO_MADOSHO, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			costfix += 5 * n_A_Weapon_ATKplus * eqpnum;
		}
	}



	//----------------------------------------------------------------
	// 「回復の光」の「ヒール」消費増加（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_HEAL) {
		eqpnum = EquipNumSearch(ITEM_ID_KAIFUKUNO_HIKARI, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			costfix += 10 * n_A_Weapon_ATKplus * eqpnum;
		}
	}



	//----------------------------------------------------------------
	// 「回復の光」の「コルセオヒール」消費増加（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_COLUCEO_HEAL) {
		eqpnum = EquipNumSearch(ITEM_ID_KAIFUKUNO_HIKARI, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			costfix += 12 * n_A_Weapon_ATKplus * eqpnum;
		}
	}



	//----------------------------------------------------------------
	// 「回復の光」の「ハイネスヒール」消費増加（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_HIGHNESS_HEAL) {
		eqpnum = EquipNumSearch(ITEM_ID_KAIFUKUNO_HIKARI, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			costfix += 14 * n_A_Weapon_ATKplus * eqpnum;
		}
	}



	//----------------------------------------------------------------
	// 「カタパルト」の「トライアングルショット」消費増加（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_TRIANGLE_SHOT) {
		eqpnum = EquipNumSearch(ITEM_ID_CATAPULT, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			costfix += 2 * n_A_Weapon_ATKplus * eqpnum;
		}
	}



	//----------------------------------------------------------------
	// 「大型クロスボウ」の「アローストーム」消費増加（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_ARROW_STORM) {
		eqpnum = EquipNumSearch(ITEM_ID_OGATA_CROSSBOW, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			costfix += 5 * n_A_Weapon_ATKplus * eqpnum;
		}
	}



	//----------------------------------------------------------------
	// 「メディカルブーツ」の「コルセオヒール」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_COLUCEO_HEAL) {
		eqpnum = EquipNumSearch(ITEM_ID_MEDICAL_BOOTS, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			costfix -= 5 * n_A_SHOES_DEF_PLUS * eqpnum;
		}
	}



	//----------------------------------------------------------------
	// 「メディカルブーツ　回復の光セット」の「ヒール」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_HEAL) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_MEDICAL_BOOTS_KAIFUKUNO_HIKARI, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			costfix -= 6 * n_A_Weapon_ATKplus * eqpnum;
		}
	}



	//----------------------------------------------------------------
	// 「メディカルブーツ　回復の光セット」の「コルセオヒール」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_COLUCEO_HEAL) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_MEDICAL_BOOTS_KAIFUKUNO_HIKARI, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			costfix -= 10 * n_A_Weapon_ATKplus * eqpnum;
		}
	}



	//----------------------------------------------------------------
	// 「メディカルブーツ　回復の光セット」の「ハイネスヒール」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_HIGHNESS_HEAL) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_MEDICAL_BOOTS_KAIFUKUNO_HIKARI, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			costfix -= 14 * n_A_Weapon_ATKplus * eqpnum;
		}
	}



	//----------------------------------------------------------------
	// 「マジカルフェザー」の「ホーリーライト」消費増加（ペナルティ）
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_HOLY_LIGHT) {
		eqpnum = EquipNumSearch(ITEM_ID_MAGICAL_FEATHER, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			costfix += 15 * LearnedSkillSearch(SKILL_ID_IMPOSITIO_MANUS) * eqpnum;
		}
	}



	//----------------------------------------------------------------
	// 「ルイーゼの赤い靴　モルデンカードセット」の「カートレボリューション」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_CART_REVOLUTION) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_RUISENO_AKAIKUTSU_MORDEN_CARD, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			if (n_A_SHOES_DEF_PLUS >= 6) {
				costfix -= 4 * eqpnum;
			}
		}
	}



	//----------------------------------------------------------------
	// 「アルティメットモードチェンジャー　ペオースプレートセット」の「ウィンドカッター」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_WIND_CUTTER) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_ULTIMATE_MODE_CHANGER_PEORTH_PLATE, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			if (n_A_BODY_DEF_PLUS >= 7) {
				costfix -= 15 * eqpnum;
			}
		}
	}



	//----------------------------------------------------------------
	// 「アルティメットモードチェンジャー　ペオースプレートセット」の「イグニッションブレイク」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_IGNITION_BREAK) {
		eqpnum = EquipNumSearch(ITEM_SET_ID_ULTIMATE_MODE_CHANGER_PEORTH_PLATE, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			if (n_A_BODY_DEF_PLUS >= 7) {
				costfix -= 25 * eqpnum;
			}
		}
	}



	//----------------------------------------------------------------
	// 「ケミカルグローブ」の「カートトルネード」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_CART_TORNADO) {
		eqpnum = EquipNumSearch(ITEM_ID_CHEMICAL_GLOVE, EQUIP_REGION_ID_ANY);
		if (eqpnum > 0) {
			costfix -= 1 * LearnedSkillSearch(SKILL_ID_CART_KAIZO) * eqpnum;
		}
	}



	//----------------------------------------------------------------
	// 「螺旋風魔の宝珠」の「風魔手裏剣-乱華-」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_FUMASHURIKEN_RANKA) {
		eqpnum = EquipNumSearch(ITEM_ID_RASEN_FUMANO_HOZYU);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_GENZYUTSU_KYOGAKU) >= 5) {
				costfix -= 10 * eqpnum;
			}
		}
	}



	//----------------------------------------------------------------
	// 「シールドリング」の「アースドライブ」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_EARTH_DRIVE) {
		eqpnum = EquipNumSearch(ITEM_ID_SHIELD_RING);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_PINGPOINT_ATTACK) >= 5) {
				costfix -= 25 * eqpnum;
			}
		}
	}



	//----------------------------------------------------------------
	// 「ふわふわタンポポシューズ」の、「イヌハッカメテオ」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_INUHAKKA_METEOR) {
		eqpnum = EquipNumSearch(ITEM_ID_FUWAFUWA_TANPOPO_SHOES);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_DAICHINO_TAMASHI) >= 1) {
				if (LearnedSkillSearch(SKILL_ID_INUHAKKA_SHOWER) >= 5) {
					costfix -= 50 * eqpnum;
				}
			}
		}
	}



	//----------------------------------------------------------------
	// 「スナイピングシューズ」の、「カモフラージュ」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_CAMOUFLAGE) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_SNIPING_SHOES)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_ELECTRIC_SHOCKER) >= 5) {
				costfix -= 20 * eqpnum;
			}
		}
	}



	//----------------------------------------------------------------
	// 「悪鬼羅刹の指輪」の、「獅子吼」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SISIKO) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_AKKI_RASETSUNO_YUBIWA)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_ZIRAISHIN) >= 5) {
				costfix -= 35 * eqpnum;
			}
		}
	}



	//----------------------------------------------------------------
	// 「悪鬼羅刹の指輪」の、「修羅身弾」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SHURASHINDAN) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_AKKI_RASETSUNO_YUBIWA)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_ZIRAISHIN) >= 5) {
				costfix -= 4 * eqpnum;
			}
		}
	}



	//----------------------------------------------------------------
	// 「ゲフェニア氷の魔道具」の、「ジャックフロスト」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_JACK_FROST) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_GEFFENIA_KORINO_MADOGU)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_COMMET) >= 5) {
				costfix -= 35 * eqpnum;
			}
		}
	}



	//----------------------------------------------------------------
	// 「ゲフェニア氷の魔道具」の、「コメット」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_COMMET) {
		if ((eqpnum = EquipNumSearch(ITEM_ID_GEFFENIA_KORINO_MADOGU)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_JACK_FROST) >= 5) {
				costfix -= 100 * eqpnum;
			}
		}
	}



	//----------------------------------------------------------------
	// 「ジャガーノート」の、「ファイアーダンス」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_FIRE_DANCE) {
		if ((itemCount = EquipNumSearch(ITEM_ID_JAGUAR_NOTE)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_FALLIN_ANGEL) >= 1) {
				costfix -= 20 * itemCount;
			}
		}
	}



	//----------------------------------------------------------------
	// 「知覚増幅リング」の、「サイキックウェーブ」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_PSYCHIC_WAVE) {
		if ((itemCount = EquipNumSearch(ITEM_ID_CHIKAKU_ZOFUKU_RING)) > 0) {
			if (LearnedSkillSearch(SKILL_ID_VACUUM_EXTREME) >= 5) {
				costfix -= 20 * itemCount;
			}
		}
	}



	//----------------------------------------------------------------
	// 「審判の天秤」の、「レイオブジェネシス」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_RAY_OF_GENESIS) {
		eqpnum = EquipNumSearch(ITEM_ID_SHINPANNO_TENBIN);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_INSPIRATION) >= 5) {
				costfix -= 20 * eqpnum;
			}
		}
	}



	//----------------------------------------------------------------
	// 「リングオブパズズ」の、「チェーンライトニング」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_CHAIN_LIGHTNING) {
		eqpnum = EquipNumSearch(ITEM_ID_RING_OF_PAZUZU);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_CHAIN_LIGHTNING) >= 5) {
				costfix -= 35 * eqpnum;
			}
		}
	}



	//----------------------------------------------------------------
	// 「スカルリング」の、「死霊爆発」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_SHIRYO_BAKUHATSU) {
		eqpnum = EquipNumSearch(ITEM_ID_SCALL_RING);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_SHIRYO_HYOI) >= 5) {
				costfix -= 25 * eqpnum;
			}
		}
	}



	//----------------------------------------------------------------
	// 「きらきらニャンニャンチョーカー」の、「マタタビランス」消費減少
	//----------------------------------------------------------------
	if (skillId == SKILL_ID_MATATABI_LANCE) {
		eqpnum = EquipNumSearch(ITEM_ID_KIRAKIRA_NYANNYAN_CHOKER);
		if (eqpnum > 0) {
			if (LearnedSkillSearch(SKILL_ID_NYAN_GRASS) >= 5) {
				costfix -= 10 * eqpnum;
			}
		}
	}





	//----------------------------------------------------------------
	// 「性能カスタマイズ」の、効果
	//----------------------------------------------------------------
	confval = g_objCharaConfCustomSkill.GetConf(CCharaConfCustomSkill.CONF_ID_SKILL_COST_MINUS);
	if (confval != 0) {
		costfix -= confval;
	}





	// TODO: データ移行過渡処理
	// 計算したSP効果を、移行前のデータ形式に変換して、加算する
	if (IsEnableMigrationBlockTransit()) {

		var spTag = null;

		spTag = new CMigEquipableSpTag()
			.SetSpId(MIG_EQUIPABLE_SP_EFFECT_ID_SKILL_COST)
			.AddAttribute(MIG_EQUIPABLE_SP_ATTRIBUTE_ID_SKILL, g_skillManager.GetBaseSkillId(skillId))

		costfix += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		costfix += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTag, null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
	}





	return costfix;
}

function StPlusCalc() {
	let idx = 0;
	let jobBonusArray = null;
	let superNoviceBonus = 0;
	let bufLv = 0;
	let vartmp = 0;
	let itemCount = 0;
	let itemCountRight = 0;
	let itemCountLeft = 0;
	let itemCountAccessary1 = 0;
	let itemCountAccessary2 = 0;
	let cardCount = 0;
	let cardCountRight = 0;
	let cardCountLeft = 0;
	let cardCountHeadTop = 0;
	let cardCountHeadMid = 0;
	let cardCountShield = 0;
	let cardCountBody = 0;
	let cardCountShoulder = 0;
	let cardCountShoes = 0;
	let cardCountAccessary1 = 0;
	let cardCountAccessary2 = 0;

	// TODO: 将来的に構造の変更が必要
	// 拡張表示用
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_STR_PLUS, 0);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_AGI_PLUS, 0);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_VIT_PLUS, 0);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_INT_PLUS, 0);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_DEX_PLUS, 0);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_LUK_PLUS, 0);

	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_STR_PLUS_PLANE, 0);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_AGI_PLUS_PLANE, 0);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_VIT_PLUS_PLANE, 0);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_INT_PLUS_PLANE, 0);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_DEX_PLUS_PLANE, 0);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_LUK_PLUS_PLANE, 0);

	// ジョブ補正の算出
	InitJobInfo();
	n_A_JobLV = eval(document.calcForm.A_JobLV.value);
	jobBonusArray = GetJobBonus(n_A_JOB, n_A_JobLV);

	// スーパーノービスの無死亡ボーナス
	if (
		(
			(IsSameJobClass(JOB_ID_SUPERNOVICE) && (n_A_JobLV >= 70))
			||
			IsSameJobClass(JOB_ID_SUPERNOVICE_PLUS)
		)
		&&
		UsedSkillSearch(SKILL_ID_SUPER_NOVICE_NODEAD_BONUS)
	){
		superNoviceBonus = 10;
	}

	//----------------------------------------------------------------
	// 求めた値を基礎値とする
	//----------------------------------------------------------------
	var wSPC_STR = jobBonusArray[0] + superNoviceBonus;
	var wSPC_AGI = jobBonusArray[1] + superNoviceBonus;
	var wSPC_VIT = jobBonusArray[2] + superNoviceBonus;
	var wSPC_INT = jobBonusArray[3] + superNoviceBonus;
	var wSPC_DEX = jobBonusArray[4] + superNoviceBonus;
	var wSPC_LUK = jobBonusArray[5] + superNoviceBonus;
	var wSPC_POW = jobBonusArray[6];
	var wSPC_STA = jobBonusArray[7];
	var wSPC_WIS = jobBonusArray[8];
	var wSPC_SPL = jobBonusArray[9];
	var wSPC_CON = jobBonusArray[10];
	var wSPC_CRT = jobBonusArray[11];
	var wSPCall = 0;

	//----------------------------------------------------------------
	// 装備の加算値、全パラメタ上昇効果の加算値を適用
	//----------------------------------------------------------------
	wSPCall += GetEquippedTotalSPEquipExact(7);
	wSPC_STR += GetEquippedTotalSPEquipExact(1) + wSPCall;
	wSPC_AGI += GetEquippedTotalSPEquipExact(2) + wSPCall;
	wSPC_VIT += GetEquippedTotalSPEquipExact(3) + wSPCall;
	wSPC_INT += GetEquippedTotalSPEquipExact(4) + wSPCall;
	wSPC_DEX += GetEquippedTotalSPEquipExact(5) + wSPCall;
	wSPC_LUK += GetEquippedTotalSPEquipExact(6) + wSPCall;

	// TODO: データ移行過渡処理
	// 計算したSP効果を、移行前のデータ形式に変換して、加算する
	if (IsEnableMigrationBlockTransit()) {
		var idxArray = 0;
		var wSPCallMIG = 0;
		var spTagStrArrayAll = MigGetItemSpTagArrayByOldSpID(ITEM_SP_ALLSTATUS_PLUS);
		var spTagStrArrayStr = MigGetItemSpTagArrayByOldSpID(ITEM_SP_STR_PLUS);
		var spTagStrArrayAgi = MigGetItemSpTagArrayByOldSpID(ITEM_SP_AGI_PLUS);
		var spTagStrArrayVit = MigGetItemSpTagArrayByOldSpID(ITEM_SP_VIT_PLUS);
		var spTagStrArrayInt = MigGetItemSpTagArrayByOldSpID(ITEM_SP_INT_PLUS);
		var spTagStrArrayDex = MigGetItemSpTagArrayByOldSpID(ITEM_SP_DEX_PLUS);
		var spTagStrArrayLuk = MigGetItemSpTagArrayByOldSpID(ITEM_SP_LUK_PLUS);

		for (idxArray = 0; idxArray < spTagStrArrayAll.length; idxArray++) {
			wSPCallMIG += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagStrArrayAll[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		}
		wSPC_STR += wSPCallMIG;
		wSPC_AGI += wSPCallMIG;
		wSPC_VIT += wSPCallMIG;
		wSPC_INT += wSPCallMIG;
		wSPC_DEX += wSPCallMIG;
		wSPC_LUK += wSPCallMIG;

		for (idxArray = 0; idxArray < spTagStrArrayStr.length; idxArray++) {
			wSPC_STR += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagStrArrayStr[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		}
		for (idxArray = 0; idxArray < spTagStrArrayAgi.length; idxArray++) {
			wSPC_AGI += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagStrArrayAgi[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		}
		for (idxArray = 0; idxArray < spTagStrArrayVit.length; idxArray++) {
			wSPC_VIT += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagStrArrayVit[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		}
		for (idxArray = 0; idxArray < spTagStrArrayInt.length; idxArray++) {
			wSPC_INT += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagStrArrayInt[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		}
		for (idxArray = 0; idxArray < spTagStrArrayDex.length; idxArray++) {
			wSPC_DEX += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagStrArrayDex[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		}
		for (idxArray = 0; idxArray < spTagStrArrayLuk.length; idxArray++) {
			wSPC_LUK += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagStrArrayLuk[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		}
	}

	//----------------------------------------------------------------
	// 「ふくろうの目」の、ＤＥＸ＋効果
	//----------------------------------------------------------------
	wSPC_DEX += Math.max(LearnedSkillSearch(SKILL_ID_FUKURONO_ME), UsedSkillSearch(SKILL_ID_FUKURONO_ME));

	//----------------------------------------------------------------
	// 「ラウドボイス」の、ＳＴＲ＋効果
	//----------------------------------------------------------------
	if ((UsedSkillSearch(SKILL_ID_LOUD_VOICE) && ((_APPLY_UPDATE_LV200) || UsedSkillSearch(SKILL_ID_MADOGEAR) == 0))
		|| (g_confDataIchizi[CCharaConfIchizi.CONF_ID_LOUD_VOICE] >= 1)
		|| TimeItemNumSearch(TIME_ITEM_ID_KOKKOCHAN)
		|| TimeItemNumSearch(TIME_ITEM_ID_RUDO_MASK)
		|| TimeItemNumSearch(TIME_ITEM_ID_SHISHIONO_KABUTO)
		|| TimeItemNumSearch(TIME_ITEM_ID_GREATER_DRACLE_HORN)
		) {
		wSPC_STR += 4;
	}

	//----------------------------------------------------------------
	// 「ヒルトバインディング」の、ＳＴＲ＋効果
	//----------------------------------------------------------------

	wSPC_STR += Math.max(LearnedSkillSearch(SKILL_ID_HILT_BINDING), UsedSkillSearch(SKILL_ID_HILT_BINDING));

	//----------------------------------------------------------------
	// 「念」の、ＳＴＲ＋、ＩＮＴ＋効果
	//----------------------------------------------------------------
	wSPC_STR += UsedSkillSearch(SKILL_ID_NEN);
	wSPC_INT += UsedSkillSearch(SKILL_ID_NEN);

	//----------------------------------------------------------------
	// 「ドラゴノロジー」の、ＩＮＴ＋効果
	//----------------------------------------------------------------
	wSPC_INT += Math.round(Math.max(LearnedSkillSearch(SKILL_ID_DRAGONOLOGY), UsedSkillSearch(SKILL_ID_DRAGONOLOGY)) / 2);

	//----------------------------------------------------------------
	// 「トラップ研究」の、ＩＮＴ＋効果
	//----------------------------------------------------------------
	wSPC_INT += Math.max(LearnedSkillSearch(SKILL_ID_TRAP_KENKYU), UsedSkillSearch(SKILL_ID_TRAP_KENKYU));

	//----------------------------------------------------------------
	// 「チェイスウォーク」の、ＳＴＲ＋効果
	//----------------------------------------------------------------
	switch (UsedSkillSearch(SKILL_ID_CHASEWALK)) {
		case 5:
			wSPC_STR += 16;
			break;
		case 4:
			wSPC_STR += 8;
			break;
		case 3:
			wSPC_STR += 4;
			break;
		case 2:
			wSPC_STR += 2;
			break;
		case 1:
			wSPC_STR += 1;
			break;
	}

	if(EquipNumSearch(1305)){
		var w = Math.floor(n_A_JobLV / 5);
		if(w > 6) w = 6;
		wSPC_STR -= w;
		wSPC_AGI -= w;
		wSPC_VIT -= w;
		wSPC_INT -= w;
		wSPC_DEX -= w;
		wSPC_LUK -= w;
	}

	// 拡張表示用のデータを格納
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_STR_PLUS_PLANE, wSPC_STR - jobBonusArray[0]);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_AGI_PLUS_PLANE, wSPC_AGI - jobBonusArray[1]);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_VIT_PLUS_PLANE, wSPC_VIT - jobBonusArray[2]);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_INT_PLUS_PLANE, wSPC_INT - jobBonusArray[3]);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_DEX_PLUS_PLANE, wSPC_DEX - jobBonusArray[4]);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_LUK_PLUS_PLANE, wSPC_LUK - jobBonusArray[5]);

	// 計算データ出力用のデータを格納
	g_ITEM_SP_STR_PLUS_PLANE_value_forCalcData = wSPC_STR;
	g_ITEM_SP_AGI_PLUS_PLANE_value_forCalcData = wSPC_AGI;
	g_ITEM_SP_VIT_PLUS_PLANE_value_forCalcData = wSPC_VIT;
	g_ITEM_SP_INT_PLUS_PLANE_value_forCalcData = wSPC_INT;
	g_ITEM_SP_DEX_PLUS_PLANE_value_forCalcData = wSPC_DEX;
	g_ITEM_SP_LUK_PLUS_PLANE_value_forCalcData = wSPC_LUK;

	//----------------------------------------------------------------
	// 「アーチャー　集中力向上」の効果
	// 「時限アイテム　ヴンダーカンマー（集中力向上）」の効果
	// 「一次職支援　集中力向上」の効果
	// 「時限アイテム　ブルーリボン（集中力向上）」の効果
	//----------------------------------------------------------------
	if((sklLv = UsedSkillSearch(SKILL_ID_SHUCHURYOKU_KOZYO)) > 0) {
		wSPC_DEX = Math.floor((n_A_DEX + wSPC_DEX) * (102 + sklLv) / 100) - n_A_DEX;
		wSPC_AGI = Math.floor((n_A_AGI + wSPC_AGI) * (102 + sklLv) / 100) - n_A_AGI;
	}
	else if (TimeItemNumSearch(TIME_ITEM_ID_VNDER_CANMER_SHUCHURYOKU_KOZYO) > 0){
		wSPC_DEX = Math.floor((n_A_DEX + wSPC_DEX) * 107 / 100) - n_A_DEX;
		wSPC_AGI = Math.floor((n_A_AGI + wSPC_AGI) * 107 / 100) - n_A_AGI;
	}
	else if ((bufLv = g_confDataIchizi[CCharaConfIchizi.CONF_ID_SHUCHURYOKU_KOZYO]) > 0) {
		wSPC_DEX = Math.floor((n_A_DEX + wSPC_DEX) * (102 + bufLv) / 100) - n_A_DEX;
		wSPC_AGI = Math.floor((n_A_AGI + wSPC_AGI) * (102 + bufLv) / 100) - n_A_AGI;
	}
	else if (TimeItemNumSearch(TIME_ITEM_ID_BLUE_RIBBON) > 0) {
		wSPC_DEX = Math.floor((n_A_DEX + wSPC_DEX) * 104 / 100) - n_A_DEX;
		wSPC_AGI = Math.floor((n_A_AGI + wSPC_AGI) * 104 / 100) - n_A_AGI;
	}
	else if (TimeItemNumSearch(4) > 0) {
		wSPC_DEX = Math.floor((n_A_DEX + wSPC_DEX) * 103 / 100) - n_A_DEX;
		wSPC_AGI = Math.floor((n_A_AGI + wSPC_AGI) * 103 / 100) - n_A_AGI;
	}

	//----------------------------------------------------------------
	// これ以降は、集中力向上が乗らない効果
	//----------------------------------------------------------------

	//----------------------------------------------------------------
	// 「ガンスリンガー　インクリージングアキュラシー」の効果
	//----------------------------------------------------------------
	if (UsedSkillSearch(SKILL_ID_INCREASING_ACCURACY) > 0){
		wSPC_DEX += 4;
		wSPC_AGI += 4;
	}

	//----------------------------------------------------------------
	// 「太陽・月・星の祝福」の、＋効果
	//----------------------------------------------------------------
	const taiyono_shukufuku = Math.max(LearnedSkillSearch(SKILL_ID_TAIYONO_SHUKUFUKU), UsedSkillSearch(SKILL_ID_TAIYONO_SHUKUFUKU));
	const tsukino_shukufuku = Math.max(LearnedSkillSearch(SKILL_ID_TSUKUNO_SHUKUFUKU), UsedSkillSearch(SKILL_ID_TSUKUNO_SHUKUFUKU));
	const hoshino_shukufuku = Math.max(LearnedSkillSearch(SKILL_ID_HOSHINO_SHUKUFUKU), UsedSkillSearch(SKILL_ID_HOSHINO_SHUKUFUKU));
	switch (UsedSkillSearch(SKILL_ID_TAIYOTO_TSUKITO_HOSHINO_HI)) {
		case 0:	// 無条件で発動
			wSPC_STR += 2 * taiyono_shukufuku;
			wSPC_VIT += 2 * taiyono_shukufuku;
			wSPC_DEX += 2 * taiyono_shukufuku;
			wSPC_AGI += 2 * tsukino_shukufuku;
			wSPC_INT += 2 * tsukino_shukufuku;
			wSPC_LUK += 2 * tsukino_shukufuku;
			wSPC_STR += 2 * hoshino_shukufuku;
			wSPC_AGI += 2 * hoshino_shukufuku;
			wSPC_VIT += 2 * hoshino_shukufuku;
			wSPC_INT += 2 * hoshino_shukufuku;
			wSPC_DEX += 2 * hoshino_shukufuku;
			wSPC_LUK += 2 * hoshino_shukufuku;
			break;
		case 1:	// 今日の日付で発動
			let today = (new Date()).getDate();
			if (today % 5 == 0 && hoshino_shukufuku > 0) { // 5の倍数 ∧ 星を習得済み
				wSPC_STR += 2 * hoshino_shukufuku;
				wSPC_AGI += 2 * hoshino_shukufuku;
				wSPC_VIT += 2 * hoshino_shukufuku;
				wSPC_INT += 2 * hoshino_shukufuku;
				wSPC_DEX += 2 * hoshino_shukufuku;
				wSPC_LUK += 2 * hoshino_shukufuku;
			} else
			if (today % 2 == 0) {	// ( 5の倍数ではない ∨ 5の倍数だが星を未習得 ) ∧ 偶数
				wSPC_STR += 2 * taiyono_shukufuku;
				wSPC_VIT += 2 * taiyono_shukufuku;
				wSPC_DEX += 2 * taiyono_shukufuku;
			} else
			if (today % 2 == 1) {	// ( 5の倍数ではない ∨ 5の倍数だが星を未習得 ) ∧ 奇数
				wSPC_AGI += 2 * tsukino_shukufuku;
				wSPC_INT += 2 * tsukino_shukufuku;
				wSPC_LUK += 2 * tsukino_shukufuku;
			}
			break;
		case 2:	// 太陽の日
			wSPC_STR += 2 * taiyono_shukufuku;
			wSPC_VIT += 2 * taiyono_shukufuku;
			wSPC_DEX += 2 * taiyono_shukufuku;
			break;
		case 3:	// 月の日
			wSPC_AGI += 2 * tsukino_shukufuku;
			wSPC_INT += 2 * tsukino_shukufuku;
			wSPC_LUK += 2 * tsukino_shukufuku;
			break;
		case 4:	// 星の日
			wSPC_STR += 2 * hoshino_shukufuku;
			wSPC_AGI += 2 * hoshino_shukufuku;
			wSPC_VIT += 2 * hoshino_shukufuku;
			wSPC_INT += 2 * hoshino_shukufuku;
			wSPC_DEX += 2 * hoshino_shukufuku;
			wSPC_LUK += 2 * hoshino_shukufuku;
			break;
	}

	//----------------------------------------------------------------
	// 「宇宙の構え」の、＋効果
	//----------------------------------------------------------------
	wSPC_STR += 5 * UsedSkillSearch(SKILL_ID_UCHUNO_KAMAE);
	wSPC_AGI += 5 * UsedSkillSearch(SKILL_ID_UCHUNO_KAMAE);
	wSPC_VIT += 5 * UsedSkillSearch(SKILL_ID_UCHUNO_KAMAE);
	wSPC_INT += 5 * UsedSkillSearch(SKILL_ID_UCHUNO_KAMAE);
	wSPC_DEX += 5 * UsedSkillSearch(SKILL_ID_UCHUNO_KAMAE);
	wSPC_LUK += 5 * UsedSkillSearch(SKILL_ID_UCHUNO_KAMAE);

	if(GetLowerJobSeriesID(n_A_JOB)==41 && EquipNumSearch(672)) wSPC_AGI += 1;
	if(GetLowerJobSeriesID(n_A_JOB)==41 && EquipNumSearch(673)) wSPC_INT += 1;
	if(GetLowerJobSeriesID(n_A_JOB)==41 && EquipNumSearch(675)) wSPC_LUK += 2;
	if(GetLowerJobSeriesID(n_A_JOB)==41 && EquipNumSearch(676)) wSPC_DEX += 2;
	if(GetLowerJobSeriesID(n_A_JOB)==41 && EquipNumSearch(678)) wSPC_LUK += 1;
	if(n_A_SHOES_DEF_PLUS >= 9 && EquipNumSearch(717)) wSPC_AGI += 2;
	if(n_A_HEAD_DEF_PLUS >= 5 && EquipNumSearch(1069)) wSPC_LUK += (n_A_HEAD_DEF_PLUS - 4);
	if(n_A_Weapon_ATKplus >= 6 && EquipNumSearch(1168)) wSPC_INT += (n_A_Weapon_ATKplus - 5);
	if(EquipNumSearch(ITEM_ID_STUFF_OF_ORD) && LearnedSkillSearch(SKILL_ID_DRAGONOLOGY) == 5) wSPC_INT += 3;
	if(EquipNumSearch(1172)) wSPC_INT += Math.floor(n_A_Weapon_ATKplus / 2);
	if(n_A_HEAD_DEF_PLUS >= 7 && EquipNumSearch(1273)) wSPC_AGI += 2;
	if(EquipNumSearch(348)) wSPC_STR += Math.floor(n_A_BaseLV / 5) * EquipNumSearch(348);
	if(n_A_BODY_DEF_PLUS >= 2 && EquipNumSearch(1493)) wSPC_AGI += Math.floor(n_A_BODY_DEF_PLUS / 2);
	if(SU_STR >= 60 && EquipNumSearch(1524)){
		wSPC_STR += 2 * EquipNumSearch(1524);
		if(SU_STR >= 80) wSPC_STR += 1 * EquipNumSearch(1524);
	}
	if(SU_AGI >= 60 && EquipNumSearch(1525)){
		wSPC_AGI += 2 * EquipNumSearch(1525);
		if(SU_AGI >= 80) wSPC_AGI += 1 * EquipNumSearch(1525);
	}
	if(SU_VIT >= 60 && EquipNumSearch(1526)){
		wSPC_VIT += 2 * EquipNumSearch(1526);
		if(SU_VIT >= 80) wSPC_VIT += 1 * EquipNumSearch(1526);
	}
	if(SU_DEX >= 60 && EquipNumSearch(1527)){
		wSPC_DEX += 2 * EquipNumSearch(1527);
		if(SU_DEX >= 80) wSPC_DEX += 1 * EquipNumSearch(1527);
	}
	if(SU_INT >= 60 && EquipNumSearch(1528)){
		wSPC_INT += 2 * EquipNumSearch(1528);
		if(SU_INT >= 80) wSPC_INT += 1 * EquipNumSearch(1528);
	}
	if(SU_LUK >= 60 && EquipNumSearch(1529)){
		var w = EquipNumSearch(1529);
		wSPC_LUK += 2 * w;
		if(SU_LUK >= 80){
			wSPC_LUK += w;
			wSPC_DEX += w;
		}
		if(SU_LUK >= 100){
			wSPC_INT += w;
			wSPC_DEX += w;
		}
		if(SU_LUK >= 120){
			wSPC_LUK += w;
			wSPC_DEX += w;
			wSPC_INT += 3 * w;
		}
	}
	if(SU_INT >= 120){
		if(EquipNumSearch(1538) || EquipNumSearch(1545) || EquipNumSearch(1552) || EquipNumSearch(1559)) wSPC_INT += 1;
	}
	if(n_A_SHOES_DEF_PLUS >= 8 && EquipNumSearch(1588)) wSPC_AGI += (n_A_SHOES_DEF_PLUS - 7);
	if(n_A_BaseLV >= 150){
		if(EquipNumSearch(1695)){
			wSPC_STR += 2;
			wSPC_AGI += 2;
			wSPC_VIT += 2;
			wSPC_INT += 2;
			wSPC_DEX += 2;
			wSPC_LUK += 2;
		}
	}
	if(EquipNumSearch(1695)) if(GetLowerJobSeriesID(n_A_JOB)==4) wSPC_DEX += 3;
	if(EquipNumSearch(1743)) wSPC_LUK += n_A_BODY_DEF_PLUS;
	if(n_A_Equip[EQUIP_REGION_ID_ARMS]==1078 || n_A_Equip[EQUIP_REGION_ID_ARMS]==1079){
		wSPC_INT += (n_A_Weapon_ATKplus -5);
		if(n_A_Equip[EQUIP_REGION_ID_ARMS]==1078){
			if(n_A_Weapon_ATKplus >= 7) wSPC_INT += 2;
			if(n_A_Weapon_ATKplus >= 9) wSPC_INT += 3;
		}
		if(n_A_Equip[EQUIP_REGION_ID_ARMS]==1079){
			if(n_A_Weapon_ATKplus >= 7) wSPC_INT += 2;
			if(n_A_Weapon_ATKplus >= 9) wSPC_INT += 5;
			if(n_A_Weapon_ATKplus >= 10) wSPC_INT += 3;
		}
	}
	if(n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT]==1078 || n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT]==1079){
		wSPC_INT += (n_A_Weapon2_ATKplus -5);
		if(n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT]==1078){
			if(n_A_Weapon2_ATKplus >= 7) wSPC_INT += 2;
			if(n_A_Weapon2_ATKplus >= 9) wSPC_INT += 3;
		}
		if(n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT]==1079){
			if(n_A_Weapon2_ATKplus >= 7) wSPC_INT += 2;
			if(n_A_Weapon2_ATKplus >= 9) wSPC_INT += 5;
			if(n_A_Weapon2_ATKplus >= 10) wSPC_INT += 3;
		}
	}
	if(EquipNumSearch(1766)){
		if(n_A_Weapon_ATKplus >= 1 && n_A_Equip[EQUIP_REGION_ID_ARMS]==1766){
			wSPC_INT += n_A_Weapon_ATKplus;
			wSPC_LUK += n_A_Weapon_ATKplus;
		}
		if(n_A_Weapon2_ATKplus >= 1 && n_A_Equip[EQUIP_REGION_ID_ARMS_LEFT]==1766){
			wSPC_INT += n_A_Weapon2_ATKplus;
			wSPC_LUK += n_A_Weapon2_ATKplus;
		}
	}
	if(n_A_SHOULDER_DEF_PLUS >= 6 && EquipNumSearch(1767)) wSPC_AGI += 2 * (n_A_SHOULDER_DEF_PLUS - 5);
	if(n_A_SHOES_DEF_PLUS >= 6 && EquipNumSearch(1768)) wSPC_INT += n_A_SHOES_DEF_PLUS - 5;

	// 技巧の時空ブーツ
	if(n_A_SHOES_DEF_PLUS >= 3 && EquipNumSearch(1921)) {
		wSPC_DEX += 3 * ROUNDDOWN(n_A_SHOES_DEF_PLUS / 3);
	}
	if(n_A_SHOES_DEF_PLUS >= 3 && EquipNumSearch(ITEM_ID_GIKONO_ZIKU_BOOTS_S1)) {
		wSPC_DEX += 3 * ROUNDDOWN(n_A_SHOES_DEF_PLUS / 3);
	}

	if(n_A_BODY_DEF_PLUS >= 3 && EquipNumSearch(1992)) wSPC_AGI += ROUNDDOWN(n_A_BODY_DEF_PLUS / 3);
	if(EquipNumSearch(2237)){
		wSPC_VIT += n_A_BODY_DEF_PLUS;
		if(EquipNumSearch(2239)) wSPC_VIT += 5 * n_A_BODY_DEF_PLUS;
	}
	if(EquipNumSearch(2332)){
		if(n_A_BaseLV <= 99) wSPC_DEX += ROUNDDOWN(n_A_HEAD_DEF_PLUS / 2);
		else wSPC_DEX += n_A_HEAD_DEF_PLUS;
	}
	if(EquipNumSearch(2334)){
		if(n_A_BaseLV <= 99) wSPC_STR += ROUNDDOWN(n_A_HEAD_DEF_PLUS / 2);
		else wSPC_STR += n_A_HEAD_DEF_PLUS;
	}
	if(EquipNumSearch(2338)){
		if(n_A_BaseLV <= 99) wSPC_INT += ROUNDDOWN(n_A_HEAD_DEF_PLUS / 2);
		else wSPC_INT += n_A_HEAD_DEF_PLUS;
	}
	if(EquipNumSearch(2365)){
		var tx = ROUNDDOWN(n_A_BODY_DEF_PLUS / 2);
		if(SU_STR >= 90) wSPC_STR += tx;
		if(SU_AGI >= 90) wSPC_AGI += tx;
		if(SU_VIT >= 90) wSPC_VIT += tx;
		if(SU_INT >= 90) wSPC_INT += tx;
		if(SU_DEX >= 90) wSPC_DEX += tx;
		if(SU_LUK >= 90) wSPC_LUK += tx;
	}
	if(EquipNumSearch(2443)){
		var w2443 = 3 * n_A_SHOES_DEF_PLUS;
		wSPC_STR += w2443;
		wSPC_AGI += w2443;
		wSPC_VIT += w2443;
		wSPC_INT += w2443;
		wSPC_DEX += w2443;
		wSPC_LUK += w2443;
	}
	if(CardNumSearch(855)){
		if(n_A_SHOES_DEF_PLUS >= 9 && EquipNumSearch(2451)) wSPC_STR += 8;
		if(n_A_SHOULDER_DEF_PLUS >= 9 && EquipNumSearch(2452)) wSPC_AGI += 8;
		if(n_A_SHOULDER_DEF_PLUS >= 9 && EquipNumSearch(2453)) wSPC_DEX += 10;
		if(n_A_SHIELD_DEF_PLUS >= 9 && EquipNumSearch(2454)) wSPC_LUK += 10;
		if(n_A_BODY_DEF_PLUS >= 9 && EquipNumSearch(2455)) wSPC_VIT += 8;
	}
	if(n_A_BaseLV >= 130 && EquipNumSearch(2463)) wSPC_VIT += 4;
	if(EquipNumSearch(1808)){
		wSPC_STR += 10;
		wSPC_AGI += 10;
		wSPC_VIT += 10;
		wSPC_INT += 10;
		wSPC_DEX += 10;
		wSPC_LUK += 10;
	}
	if(EquipNumSearch(649)) wSPC_DEX -= SU_DEX;
	if(n_A_WeaponType==9) wSPC_INT += CardNumSearch(466);

	if(GetLowerJobSeriesID(n_A_JOB)==3) wSPC_INT += CardNumSearch(383);
	if(CardNumSearch(173))wSPC_INT += n_A_SHIELD_DEF_PLUS;
	if(CardNumSearch(402))wSPC_LUK += n_A_SHOULDER_DEF_PLUS;
	if(CardNumSearch(406))wSPC_AGI += n_A_SHOES_DEF_PLUS;
	if(CardNumSearch(198))wSPC_VIT += n_A_BODY_DEF_PLUS;
	if(n_A_card[CARD_REGION_ID_HEAD_TOP] == 180)wSPC_STR += n_A_HEAD_DEF_PLUS;
	if(CardNumSearch(185))wSPC_VIT += Math.floor(SU_DEX /18);
	if(CardNumSearch(187))wSPC_STR += Math.floor(SU_INT /18);
	if(CardNumSearch(189))wSPC_LUK += Math.floor(SU_AGI /18);
	if(CardNumSearch(191))wSPC_AGI += Math.floor(SU_LUK /18);
	if(CardNumSearch(196))wSPC_INT += Math.floor(SU_STR /18);
	if(CardNumSearch(197))wSPC_DEX += Math.floor(SU_VIT /18);
	if(CardNumSearch(405)){
		if(GetLowerJobSeriesID(n_A_JOB)==1 || GetLowerJobSeriesID(n_A_JOB)==2 || GetLowerJobSeriesID(n_A_JOB)==6){
			wSPC_STR += 2;
			if(EquipNumSearch(2058)) wSPC_STR += 2;
		}
		if(GetLowerJobSeriesID(n_A_JOB)==3 || GetLowerJobSeriesID(n_A_JOB)==4 || GetLowerJobSeriesID(n_A_JOB)==5){
			wSPC_INT += 2;
			if(EquipNumSearch(2058)) wSPC_INT += 2;
		}
	}
	if(GetLowerJobSeriesID(n_A_JOB)==5 && n_A_card[CARD_REGION_ID_HEAD_TOP]==621) wSPC_INT += Math.floor(n_A_HEAD_DEF_PLUS / 3);
	if(GetLowerJobSeriesID(n_A_JOB)==4 && n_A_card[CARD_REGION_ID_HEAD_TOP]==622) wSPC_DEX += Math.floor(n_A_HEAD_DEF_PLUS / 3);
	if(GetLowerJobSeriesID(n_A_JOB)==1 && n_A_card[CARD_REGION_ID_HEAD_TOP]==625) wSPC_STR += Math.floor(n_A_HEAD_DEF_PLUS / 3);
	if(GetLowerJobSeriesID(n_A_JOB)==6 && n_A_card[CARD_REGION_ID_HEAD_TOP]==637) wSPC_LUK += Math.floor(n_A_HEAD_DEF_PLUS / 3);

	if(EquipNumSearch(2348)) wSPC_INT += Math.floor(n_A_BaseLV / 20);
	if(EquipNumSearch(2350)) wSPC_STR += Math.floor(n_A_BaseLV / 20);
	if(EquipNumSearch(2352)) wSPC_AGI += Math.floor(n_A_BaseLV / 20);
	if(EquipNumSearch(2354)) wSPC_DEX += Math.floor(n_A_BaseLV / 20);
	if(EquipNumSearch(2430)){
		wSPC_DEX += n_A_Weapon_ATKplus;
		wSPC_INT += n_A_Weapon_ATKplus;
	}
	if(EquipNumSearch(ITEM_ID_RUNE_HELM)){
		if(n_A_BaseLV <= 99) wSPC_VIT += ROUNDDOWN(n_A_HEAD_DEF_PLUS / 2);
		else wSPC_VIT += n_A_HEAD_DEF_PLUS;
	}

	if (UsedSkillSearch(SKILL_ID_GIANT_GROWTH) > 0) {
		if (EquipNumSearch(ITEM_ID_RUNE_HELM) > 0) {
			wSPC_STR += 30;
			wSPC_INT -= 30;
		}
		else if (EquipNumSearch(ITEM_ID_ZYASPER_CIRCLET) > 0) {
			wSPC_STR += 30;
			wSPC_INT -= 30;
		}
		else if (EquipNumSearch(ITEM_ID_TENBINKYUNO_DIADEM) > 0) {
			if (IsSameJobClass(JOB_ID_RUNEKNIGHT)) {
				wSPC_STR += 30;
				wSPC_INT -= 30;
			}
		}
		else if (EquipNumSearch(ITEM_ID_FAFNIR_HELM) > 0) {
			wSPC_STR += 30;
			wSPC_INT -= 30;
		}
	}

	if(EquipNumSearch(2543)) wSPC_VIT += n_A_SHOES_DEF_PLUS;

	/* TODO */
	// 独自実装箇所　ここから

	//----------------------------------------------------------------
	// 「ヴァルキリーハンマー」の、職業による強化
	//----------------------------------------------------------------
	if (EquipNumSearch(ITEM_ID_VALKYRIE_HAMMER)) {
		switch (GetLowerJobSeriesID(n_A_JOB)) {

		// ノービス系
		case JOB_SERIES_ID_NOVICE:
			wSPC_VIT += 1 * n_A_Weapon_ATKplus;
			break;

		// ソードマン系
		case JOB_SERIES_ID_SWORDMAN:
			wSPC_VIT += 1 * n_A_Weapon_ATKplus;
			break;

		// マーチャント系
		case JOB_SERIES_ID_MERCHANT:
			break;

		default:
			switch (GetHigherJobSeriesID(n_A_JOB)) {

			// プリースト系
			case JOB_SERIES_ID_PRIEST:
				break;

			// モンク系
			case JOB_SERIES_ID_MONK:
				break;
			}
		}
	}

	//----------------------------------------------------------------
	// 「古びたバレリーナの髪飾り」の、精錬による強化
	// 「古びたミンストレルソングの帽子」の、精錬による強化
	//----------------------------------------------------------------
	if(EquipNumSearch(ITEM_ID_FURUBITA_BALLERINA)
		|| EquipNumSearch(ITEM_ID_FURUBITA_MINSTRELSONG)) {
		wSPC_STR += n_A_HEAD_DEF_PLUS;
		wSPC_AGI += n_A_HEAD_DEF_PLUS;
		wSPC_VIT += n_A_HEAD_DEF_PLUS;
		wSPC_DEX += n_A_HEAD_DEF_PLUS;
		wSPC_INT += n_A_HEAD_DEF_PLUS;
		wSPC_LUK += n_A_HEAD_DEF_PLUS;
	}

	//----------------------------------------------------------------
	// 「古びたシャドウクラウン」の、精錬による強化
	//----------------------------------------------------------------
	if(EquipNumSearch(ITEM_ID_FURUBITA_SHADOWCROWN)) {
		wSPC_DEX += 2 * n_A_HEAD_DEF_PLUS;
	}

	//----------------------------------------------------------------
	// 「エメラルドイヤリング」の、スキル習得による強化
	//----------------------------------------------------------------
	if (EquipNumSearch(ITEM_ID_EMERALDEARRING)) {
		var wEMERALDEARRING = ROUNDDOWN(LearnedSkillSearch(SKILL_ID_LESSON) / 2) * EquipNumSearch(ITEM_ID_EMERALDEARRING);
		wSPC_AGI += wEMERALDEARRING;
		wSPC_INT += wEMERALDEARRING;
		wSPC_DEX += wEMERALDEARRING;
	}

	//----------------------------------------------------------------
	// 「セリーヌ・キミカード　ノーブルセット」の、精錬による効果
	//----------------------------------------------------------------
	if (CardNumSearch(CARD_SET_ID_CELINE_KIMI_NOBLE_CROSS)) {
		wSPC_LUK += 3 * n_A_Weapon_ATKplus;
	}

	//----------------------------------------------------------------
	// 「ヴァルキリーナイフ」の、職業による強化
	//----------------------------------------------------------------
	if (EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE)) {
		switch (GetLowerJobSeriesID(n_A_JOB)) {

		// ノービス系
		case JOB_SERIES_ID_NOVICE:
			wSPC_INT += 2 * n_A_Weapon_ATKplus * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE);
			wSPC_DEX += 2 * n_A_Weapon_ATKplus * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE);
			wSPC_DEX -= ROUNDDOWN(SU_DEX / 10) * n_A_Weapon_ATKplus * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE);
			break;

		// マジシャン系
		case JOB_SERIES_ID_MAGICIAN:
			break;

		// シーフ系
		case JOB_SERIES_ID_THIEF:
			break;

		default:
			switch (GetHigherJobSeriesID(n_A_JOB)) {

			// ハンター系
			case JOB_SERIES_ID_HUNTER:
				wSPC_INT += 2 * n_A_Weapon_ATKplus * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE);
				wSPC_DEX += 2 * n_A_Weapon_ATKplus * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE);
				break;

			// バード系、ダンサー系
			case JOB_SERIES_ID_BARD:
			case JOB_SERIES_ID_DANCER:
				wSPC_DEX -= ROUNDDOWN(SU_DEX / 10) * n_A_Weapon_ATKplus * EquipNumSearch(ITEM_ID_VALKYRIE_KNIFE);
				break;
			}
		}
	}

	//----------------------------------------------------------------
	// 「ガーディアンユニット」の、精錬による効果
	//----------------------------------------------------------------
	if (EquipNumSearch(ITEM_ID_GUARDIAN_UNIT)) {
		wSPC_VIT += 1 * n_A_BODY_DEF_PLUS;
	}

	//----------------------------------------------------------------
	// 「サバイバルオーブ　サークレットセット」の、装備効果
	//----------------------------------------------------------------
	if (EquipNumSearch(ITEM_SET_ID_SURVIVAL_ORB_SURVIVAL_CIRCLET)) {
		if (n_A_HEAD_DEF_PLUS >= 7) wSPC_VIT += 4;
		if (n_A_HEAD_DEF_PLUS >= 9) wSPC_VIT += 4;
	}

	//----------------------------------------------------------------
	// 「サファイアリスト」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_SAPPHIRE_LIST)) > 0) {
		var upCount = Math.floor(LearnedSkillSearch(SKILL_ID_SLIMPOTION_PITCHER) / 2);
		wSPC_INT += 1 * upCount * itemCount;
		wSPC_DEX += 1 * upCount * itemCount;
		wSPC_LUK += 1 * upCount * itemCount;
	}

	//----------------------------------------------------------------
	// 「[ECO] モーモー・アルマカード」の、精錬による効果
	//----------------------------------------------------------------
	if (CardNumSearch(CARD_ID_ECO_MOMO_ARMA)) {
		wSPC_VIT += 1 * n_A_SHOES_DEF_PLUS;
		wSPC_INT += 1 * n_A_SHOES_DEF_PLUS;

		if (n_A_SHOES_DEF_PLUS >= 9) {
			wSPC_VIT += 5;
			wSPC_INT += 5;
		}
	}

	//----------------------------------------------------------------
	// 「エナジー＜致命ノ一撃＞」の、精錬による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_ENCHANT_ENERGY_CHIMEINO_ICHIGEKI)) > 0) {
		wSPC_LUK += 3 * n_A_SHOULDER_DEF_PLUS * cardCount;
	}

	//----------------------------------------------------------------
	// 「盗賊のすすめ第一巻」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_TOZOKUNO_SUSUME_DAIIKKAN)) > 0) {
		if (LearnedSkillSearch(SKILL_ID_GRAPHITY) >= 1) {
			wSPC_STR += 5 * itemCount;
			wSPC_AGI += 5 * itemCount;
			wSPC_INT += 5 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「時魔術師のローブ」の、追加発動による効果
	//----------------------------------------------------------------
	if ((bufLv = TimeItemNumSearch(114)) > 0) {
		wSPC_INT += 3 * n_A_BODY_DEF_PLUS * bufLv;
	}

	//----------------------------------------------------------------
	// 「超越者のローブ」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_CHOETSUSHANO_ROBE)) > 0) {
		wSPC_INT += 3 * n_A_BODY_DEF_PLUS * itemCount;
	}

	//----------------------------------------------------------------
	// 「栄光の証」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_EIKONO_AKASHI)) > 0) {
		if (n_A_BaseLV >= 150) {
			wSPC_STR += 1 * itemCount;
			wSPC_AGI += 1 * itemCount;
			wSPC_VIT += 1 * itemCount;
			wSPC_INT += 1 * itemCount;
			wSPC_DEX += 1 * itemCount;
			wSPC_LUK += 1 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「エンチャント　血のニーヴ(腕力)」の、精錬による効果
	//----------------------------------------------------------------
	cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_WANRYOKU, CARD_REGION_ID_ARMS_RIGHT_ANY);
	cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_WANRYOKU, CARD_REGION_ID_ARMS_LEFT_ANY);
	cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_WANRYOKU, CARD_REGION_ID_HEAD_TOP_ANY);
	cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_WANRYOKU, CARD_REGION_ID_SHIELD_ANY);
	cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_WANRYOKU, CARD_REGION_ID_BODY_ANY);
	cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_WANRYOKU, CARD_REGION_ID_SHOULDER_ANY);
	cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_WANRYOKU, CARD_REGION_ID_SHOES_ANY);
	if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
		+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

		// 右手武器へのエンチャント
		vartmp = 0;
		if (n_A_Weapon_ATKplus >= 7) vartmp += 2;
		if (n_A_Weapon_ATKplus >= 9) vartmp += 2;
		wSPC_STR += vartmp * cardCountRight

		// 左手武器へのエンチャント
		vartmp = 0;
		if (n_A_Weapon2_ATKplus >= 7) vartmp += 2;
		if (n_A_Weapon2_ATKplus >= 9) vartmp += 2;
		wSPC_STR += vartmp * cardCountLeft

		// 頭防具へのエンチャント
		vartmp = 0;
		if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 2;
		wSPC_STR += vartmp * cardCountHeadTop

		// 盾防具へのエンチャント
		vartmp = 0;
		if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 2;
		wSPC_STR += vartmp * cardCountShield

		// 体防具へのエンチャント
		vartmp = 0;
		if (n_A_BODY_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_BODY_DEF_PLUS >= 9) vartmp += 2;
		wSPC_STR += vartmp * cardCountBody

		// 肩防具へのエンチャント
		vartmp = 0;
		if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 2;
		wSPC_STR += vartmp * cardCountShoulder

		// 靴防具へのエンチャント
		vartmp = 0;
		if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 2;
		wSPC_STR += vartmp * cardCountShoes

		// アクセサリへのエンチャント
		// 精錬できないので処理不要
	}

	//----------------------------------------------------------------
	// 「エンチャント　血のニーヴ(迅速)」の、精錬による効果
	//----------------------------------------------------------------
	cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_ZINSOKU, CARD_REGION_ID_ARMS_RIGHT_ANY);
	cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_ZINSOKU, CARD_REGION_ID_ARMS_LEFT_ANY);
	cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_ZINSOKU, CARD_REGION_ID_HEAD_TOP_ANY);
	cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_ZINSOKU, CARD_REGION_ID_SHIELD_ANY);
	cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_ZINSOKU, CARD_REGION_ID_BODY_ANY);
	cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_ZINSOKU, CARD_REGION_ID_SHOULDER_ANY);
	cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_ZINSOKU, CARD_REGION_ID_SHOES_ANY);
	if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
		+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

		// 右手武器へのエンチャント
		vartmp = 0;
		if (n_A_Weapon_ATKplus >= 7) vartmp += 2;
		if (n_A_Weapon_ATKplus >= 9) vartmp += 2;
		wSPC_AGI += vartmp * cardCountRight

		// 左手武器へのエンチャント
		vartmp = 0;
		if (n_A_Weapon2_ATKplus >= 7) vartmp += 2;
		if (n_A_Weapon2_ATKplus >= 9) vartmp += 2;
		wSPC_AGI += vartmp * cardCountLeft

		// 頭防具へのエンチャント
		vartmp = 0;
		if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 2;
		wSPC_AGI += vartmp * cardCountHeadTop

		// 盾防具へのエンチャント
		vartmp = 0;
		if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 2;
		wSPC_AGI += vartmp * cardCountShield

		// 体防具へのエンチャント
		vartmp = 0;
		if (n_A_BODY_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_BODY_DEF_PLUS >= 9) vartmp += 2;
		wSPC_AGI += vartmp * cardCountBody

		// 肩防具へのエンチャント
		vartmp = 0;
		if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 2;
		wSPC_AGI += vartmp * cardCountShoulder

		// 靴防具へのエンチャント
		vartmp = 0;
		if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 2;
		wSPC_AGI += vartmp * cardCountShoes

		// アクセサリへのエンチャント
		// 精錬できないので処理不要
	}

	//----------------------------------------------------------------
	// 「エンチャント　血のニーヴ(体力)」の、精錬による効果
	//----------------------------------------------------------------
	cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_TAIRYOKU, CARD_REGION_ID_ARMS_RIGHT_ANY);
	cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_TAIRYOKU, CARD_REGION_ID_ARMS_LEFT_ANY);
	cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_TAIRYOKU, CARD_REGION_ID_HEAD_TOP_ANY);
	cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_TAIRYOKU, CARD_REGION_ID_SHIELD_ANY);
	cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_TAIRYOKU, CARD_REGION_ID_BODY_ANY);
	cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_TAIRYOKU, CARD_REGION_ID_SHOULDER_ANY);
	cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_TAIRYOKU, CARD_REGION_ID_SHOES_ANY);
	if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
		+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

		// 右手武器へのエンチャント
		vartmp = 0;
		if (n_A_Weapon_ATKplus >= 7) vartmp += 2;
		if (n_A_Weapon_ATKplus >= 9) vartmp += 2;
		wSPC_VIT += vartmp * cardCountRight

		// 左手武器へのエンチャント
		vartmp = 0;
		if (n_A_Weapon2_ATKplus >= 7) vartmp += 2;
		if (n_A_Weapon2_ATKplus >= 9) vartmp += 2;
		wSPC_VIT += vartmp * cardCountLeft

		// 頭防具へのエンチャント
		vartmp = 0;
		if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 2;
		wSPC_VIT += vartmp * cardCountHeadTop

		// 盾防具へのエンチャント
		vartmp = 0;
		if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 2;
		wSPC_VIT += vartmp * cardCountShield

		// 体防具へのエンチャント
		vartmp = 0;
		if (n_A_BODY_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_BODY_DEF_PLUS >= 9) vartmp += 2;
		wSPC_VIT += vartmp * cardCountBody

		// 肩防具へのエンチャント
		vartmp = 0;
		if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 2;
		wSPC_VIT += vartmp * cardCountShoulder

		// 靴防具へのエンチャント
		vartmp = 0;
		if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 2;
		wSPC_VIT += vartmp * cardCountShoes

		// アクセサリへのエンチャント
		// 精錬できないので処理不要
	}

	//----------------------------------------------------------------
	// 「エンチャント　血のニーヴ(知力)」の、精錬による効果
	//----------------------------------------------------------------
	cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_CHIRYOKU, CARD_REGION_ID_ARMS_RIGHT_ANY);
	cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_CHIRYOKU, CARD_REGION_ID_ARMS_LEFT_ANY);
	cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_CHIRYOKU, CARD_REGION_ID_HEAD_TOP_ANY);
	cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_CHIRYOKU, CARD_REGION_ID_SHIELD_ANY);
	cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_CHIRYOKU, CARD_REGION_ID_BODY_ANY);
	cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_CHIRYOKU, CARD_REGION_ID_SHOULDER_ANY);
	cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_CHIRYOKU, CARD_REGION_ID_SHOES_ANY);
	if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
		+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

		// 右手武器へのエンチャント
		vartmp = 0;
		if (n_A_Weapon_ATKplus >= 7) vartmp += 2;
		if (n_A_Weapon_ATKplus >= 9) vartmp += 2;
		wSPC_INT += vartmp * cardCountRight

		// 左手武器へのエンチャント
		vartmp = 0;
		if (n_A_Weapon2_ATKplus >= 7) vartmp += 2;
		if (n_A_Weapon2_ATKplus >= 9) vartmp += 2;
		wSPC_INT += vartmp * cardCountLeft

		// 頭防具へのエンチャント
		vartmp = 0;
		if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 2;
		wSPC_INT += vartmp * cardCountHeadTop

		// 盾防具へのエンチャント
		vartmp = 0;
		if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 2;
		wSPC_INT += vartmp * cardCountShield

		// 体防具へのエンチャント
		vartmp = 0;
		if (n_A_BODY_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_BODY_DEF_PLUS >= 9) vartmp += 2;
		wSPC_INT += vartmp * cardCountBody

		// 肩防具へのエンチャント
		vartmp = 0;
		if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 2;
		wSPC_INT += vartmp * cardCountShoulder

		// 靴防具へのエンチャント
		vartmp = 0;
		if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 2;
		wSPC_INT += vartmp * cardCountShoes

		// アクセサリへのエンチャント
		// 精錬できないので処理不要
	}

	//----------------------------------------------------------------
	// 「エンチャント　血のニーヴ(集中)」の、精錬による効果
	//----------------------------------------------------------------
	cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_SHUCHU, CARD_REGION_ID_ARMS_RIGHT_ANY);
	cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_SHUCHU, CARD_REGION_ID_ARMS_LEFT_ANY);
	cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_SHUCHU, CARD_REGION_ID_HEAD_TOP_ANY);
	cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_SHUCHU, CARD_REGION_ID_SHIELD_ANY);
	cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_SHUCHU, CARD_REGION_ID_BODY_ANY);
	cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_SHUCHU, CARD_REGION_ID_SHOULDER_ANY);
	cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_SHUCHU, CARD_REGION_ID_SHOES_ANY);
	if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
		+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

		// 右手武器へのエンチャント
		vartmp = 0;
		if (n_A_Weapon_ATKplus >= 7) vartmp += 2;
		if (n_A_Weapon_ATKplus >= 9) vartmp += 2;
		wSPC_DEX += vartmp * cardCountRight

		// 左手武器へのエンチャント
		vartmp = 0;
		if (n_A_Weapon2_ATKplus >= 7) vartmp += 2;
		if (n_A_Weapon2_ATKplus >= 9) vartmp += 2;
		wSPC_DEX += vartmp * cardCountLeft

		// 頭防具へのエンチャント
		vartmp = 0;
		if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 2;
		wSPC_DEX += vartmp * cardCountHeadTop

		// 盾防具へのエンチャント
		vartmp = 0;
		if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 2;
		wSPC_DEX += vartmp * cardCountShield

		// 体防具へのエンチャント
		vartmp = 0;
		if (n_A_BODY_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_BODY_DEF_PLUS >= 9) vartmp += 2;
		wSPC_DEX += vartmp * cardCountBody

		// 肩防具へのエンチャント
		vartmp = 0;
		if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 2;
		wSPC_DEX += vartmp * cardCountShoulder

		// 靴防具へのエンチャント
		vartmp = 0;
		if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 2;
		wSPC_DEX += vartmp * cardCountShoes

		// アクセサリへのエンチャント
		// 精錬できないので処理不要
	}

	//----------------------------------------------------------------
	// 「エンチャント　血のニーヴ(幸運)」の、精錬による効果
	//----------------------------------------------------------------
	cardCountRight	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_KOUN, CARD_REGION_ID_ARMS_RIGHT_ANY);
	cardCountLeft	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_KOUN, CARD_REGION_ID_ARMS_LEFT_ANY);
	cardCountHeadTop  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_KOUN, CARD_REGION_ID_HEAD_TOP_ANY);
	cardCountShield	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_KOUN, CARD_REGION_ID_SHIELD_ANY);
	cardCountBody	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_KOUN, CARD_REGION_ID_BODY_ANY);
	cardCountShoulder = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_KOUN, CARD_REGION_ID_SHOULDER_ANY);
	cardCountShoes	  = CardNumSearch(CARD_ID_ENCHANT_CHINO_NIEVE_KOUN, CARD_REGION_ID_SHOES_ANY);
	if (cardCountRight + cardCountLeft + cardCountHeadTop + cardCountShield
		+ cardCountBody + cardCountShoulder + cardCountShoes > 0) {

		// 右手武器へのエンチャント
		vartmp = 0;
		if (n_A_Weapon_ATKplus >= 7) vartmp += 2;
		if (n_A_Weapon_ATKplus >= 9) vartmp += 2;
		wSPC_LUK += vartmp * cardCountRight

		// 左手武器へのエンチャント
		vartmp = 0;
		if (n_A_Weapon2_ATKplus >= 7) vartmp += 2;
		if (n_A_Weapon2_ATKplus >= 9) vartmp += 2;
		wSPC_LUK += vartmp * cardCountLeft

		// 頭防具へのエンチャント
		vartmp = 0;
		if (n_A_HEAD_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_HEAD_DEF_PLUS >= 9) vartmp += 2;
		wSPC_LUK += vartmp * cardCountHeadTop

		// 盾防具へのエンチャント
		vartmp = 0;
		if (n_A_SHIELD_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHIELD_DEF_PLUS >= 9) vartmp += 2;
		wSPC_LUK += vartmp * cardCountShield

		// 体防具へのエンチャント
		vartmp = 0;
		if (n_A_BODY_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_BODY_DEF_PLUS >= 9) vartmp += 2;
		wSPC_LUK += vartmp * cardCountBody

		// 肩防具へのエンチャント
		vartmp = 0;
		if (n_A_SHOULDER_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHOULDER_DEF_PLUS >= 9) vartmp += 2;
		wSPC_LUK += vartmp * cardCountShoulder

		// 靴防具へのエンチャント
		vartmp = 0;
		if (n_A_SHOES_DEF_PLUS >= 7) vartmp += 2;
		if (n_A_SHOES_DEF_PLUS >= 9) vartmp += 2;
		wSPC_LUK += vartmp * cardCountShoes

		// アクセサリへのエンチャント
		// 精錬できないので処理不要
	}

	//----------------------------------------------------------------
	// 「ルーンナイトセイレン(MVP)カード」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_RUNE_KNIGHT_SEIREN_MVP)) > 0) {
		if (n_A_BaseLV >= 165) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「ルーンナイトセイレン(MVP)カード」の、精錬による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_RUNE_KNIGHT_SEIREN_MVP)) > 0) {
		if (n_A_SHOULDER_DEF_PLUS >= 10) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「ウォーロックカトリーヌ(MVP)カード」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_WARLOCK_CATHERINE_MVP)) > 0) {
		if (n_A_BaseLV >= 165) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「ウォーロックカトリーヌ(MVP)カード」の、精錬による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_WARLOCK_CATHERINE_MVP)) > 0) {
		if (n_A_SHOULDER_DEF_PLUS >= 10) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「レンジャーセシル(MVP)カード」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_RANGER_CECIL_MVP)) > 0) {
		if (n_A_BaseLV >= 165) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「レンジャーセシル(MVP)カード」の、精錬による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_RANGER_CECIL_MVP)) > 0) {
		if (n_A_SHOULDER_DEF_PLUS >= 10) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「アークビショップマーガレッタ(MVP)カード」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_ARCH_BISHOP_MARGARETTE_MVP)) > 0) {
		if (n_A_BaseLV >= 165) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「アークビショップマーガレッタ(MVP)カード」の、精錬による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_ARCH_BISHOP_MARGARETTE_MVP)) > 0) {
		if (n_A_SHOULDER_DEF_PLUS >= 10) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「ギロチンクロスエレメス(MVP)カード」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_GUILLOTINE_CROSS_ELEMES_MVP)) > 0) {
		if (n_A_BaseLV >= 165) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「ギロチンクロスエレメス(MVP)カード」の、精錬による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_GUILLOTINE_CROSS_ELEMES_MVP)) > 0) {
		if (n_A_SHOULDER_DEF_PLUS >= 10) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「メカニックハワード(MVP)カード」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_MECHANIC_HAWARD_MVP)) > 0) {
		if (n_A_BaseLV >= 165) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「メカニックハワード(MVP)カード」の、精錬による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_MECHANIC_HAWARD_MVP)) > 0) {
		if (n_A_SHOULDER_DEF_PLUS >= 10) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「ロイヤルガードランデル(MVP)カード」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_ROYAL_GUARD_RANDEL_MVP)) > 0) {
		if (n_A_BaseLV >= 165) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「ロイヤルガードランデル(MVP)カード」の、精錬による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_ROYAL_GUARD_RANDEL_MVP)) > 0) {
		if (n_A_SHOULDER_DEF_PLUS >= 10) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「ソーサラーセリア(MVP)カード」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_SORCERER_CERIA_MVP)) > 0) {
		if (n_A_BaseLV >= 165) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「ソーサラーセリア(MVP)カード」の、精錬による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_SORCERER_CERIA_MVP)) > 0) {
		if (n_A_SHOULDER_DEF_PLUS >= 10) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「ミンストレルバジル(MVP)カード」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_MINSTREL_ARFOSIO_MVP)) > 0) {
		if (n_A_BaseLV >= 165) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「ミンストレルバジル(MVP)カード」の、精錬による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_MINSTREL_ARFOSIO_MVP)) > 0) {
		if (n_A_SHOULDER_DEF_PLUS >= 10) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「ワンダラートレンティーニ(MVP)カード」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_WANDERER_TRENTINI_MVP)) > 0) {
		if (n_A_BaseLV >= 165) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「ワンダラートレンティーニ(MVP)カード」の、精錬による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_WANDERER_TRENTINI_MVP)) > 0) {
		if (n_A_SHOULDER_DEF_PLUS >= 10) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「修羅チェン(MVP)カード」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_SHURA_CHENG_MVP)) > 0) {
		if (n_A_BaseLV >= 165) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「修羅チェン(MVP)カード」の、精錬による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_SHURA_CHENG_MVP)) > 0) {
		if (n_A_SHOULDER_DEF_PLUS >= 10) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「シャドウチェイサーガーティ(MVP)カード」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_SHADOW_CHASER_GARTY_MVP)) > 0) {
		if (n_A_BaseLV >= 165) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「シャドウチェイサーガーティ(MVP)カード」の、精錬による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_SHADOW_CHASER_GARTY_MVP)) > 0) {
		if (n_A_SHOULDER_DEF_PLUS >= 10) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「ジェネティックエミュール(MVP)カード」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_GENETIC_EMUR_MVP)) > 0) {
		if (n_A_BaseLV >= 165) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「ジェネティックエミュール(MVP)カード」の、精錬による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_GENETIC_EMUR_MVP)) > 0) {
		if (n_A_SHOULDER_DEF_PLUS >= 10) {
			wSPC_STR += 10 * cardCount;
			wSPC_AGI += 10 * cardCount;
			wSPC_VIT += 10 * cardCount;
			wSPC_INT += 10 * cardCount;
			wSPC_DEX += 10 * cardCount;
			wSPC_LUK += 10 * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「セリーヌのブローチ　リボンセット」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_SET_ID_CELINENO_BROACH_CELINENO_RIBBON)) > 0) {
		wSPC_STR += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		wSPC_AGI += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		wSPC_VIT += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		wSPC_INT += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		wSPC_DEX += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		wSPC_LUK += 1 * n_A_HEAD_DEF_PLUS * itemCount;
	}

	//----------------------------------------------------------------
	// 「セリーヌのブローチ　瑞々しいバラセット」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_SET_ID_CELINENO_BROACH_MIZUMIZUSHI_BARA)) > 0) {
		wSPC_STR += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		wSPC_AGI += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		wSPC_VIT += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		wSPC_INT += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		wSPC_DEX += 1 * n_A_HEAD_DEF_PLUS * itemCount;
		wSPC_LUK += 1 * n_A_HEAD_DEF_PLUS * itemCount;
	}

	//----------------------------------------------------------------
	// 「獄エンチャント」の、職業による効果
	//----------------------------------------------------------------
	if (CardNumSearch(CARD_ID_GOKU)) {
		// 職業限定の効果
		if (IsSameJobClass(JOB_ID_MINSTREL) || IsSameJobClass(JOB_ID_WANDERER)) {
			wSPC_STR += 10;
			wSPC_AGI += 10;
			wSPC_VIT += 10;
			wSPC_INT += 10;
			wSPC_DEX += 10;
			wSPC_LUK += 10;
		}
	}

	//----------------------------------------------------------------
	// 「ローラのプレートメイル」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_LOLANO_PLATEMAIL)) > 0) {
		wSPC_VIT += 1 * n_A_BODY_DEF_PLUS * itemCount;
	}

	//----------------------------------------------------------------
	// 「タウロス」の、精錬による効果
	//----------------------------------------------------------------
	if (CardNumSearch(CARD_ID_TAUROS)) {
		// 職業限定の効果
		if (IsSameJobClass(JOB_ID_GENETIC)) {
			wSPC_VIT += 1 * n_A_HEAD_DEF_PLUS;
			wSPC_INT += 1 * n_A_HEAD_DEF_PLUS;
		}
	}

	//----------------------------------------------------------------
	// 「禁忌の魔導書」の、スキル習得による強化
	//----------------------------------------------------------------
	if (EquipNumSearch(ITEM_ID_KINKINO_MADOSHO)) {
		wSPC_INT += 3 * LearnedSkillSearch(SKILL_ID_SUMMON_AGNI);
		wSPC_DEX += 3 * LearnedSkillSearch(SKILL_ID_SUMMON_AQUA);
		wSPC_AGI += 3 * LearnedSkillSearch(SKILL_ID_SUMMON_VENTOS);
		wSPC_VIT += 3 * LearnedSkillSearch(SKILL_ID_SUMMON_TERA);
	}

	//----------------------------------------------------------------
	// 「エーギルリング　ヘルムセット」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_SET_ID_AEGIR_RING_AEGIR_HELM)) > 0) {
		if (n_A_HEAD_DEF_PLUS >= 7) {
			wSPC_STR += 5 * itemCount;
			wSPC_AGI += 5 * itemCount;
			wSPC_VIT += 5 * itemCount;
			wSPC_INT += 5 * itemCount;
			wSPC_DEX += 5 * itemCount;
			wSPC_LUK += 5 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「天邪鬼の鬼面」の、素ステータスよる効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_AMANOZYAKUNO_KIMEN)) > 0) {
		wSPC_INT += 3 * ROUNDDOWN(SU_STR / 18) * itemCount;
		wSPC_LUK += 3 * ROUNDDOWN(SU_AGI / 18) * itemCount;
		wSPC_DEX += 3 * ROUNDDOWN(SU_VIT / 18) * itemCount;
		wSPC_STR += 3 * ROUNDDOWN(SU_INT / 18) * itemCount;
		wSPC_VIT += 3 * ROUNDDOWN(SU_DEX / 18) * itemCount;
		wSPC_AGI += 3 * ROUNDDOWN(SU_LUK / 18) * itemCount;
	}

	//----------------------------------------------------------------
	// 「鉱員のつるはし」の、精錬による効果
	//----------------------------------------------------------------
	itemCountRight = EquipNumSearch(ITEM_ID_KOINNO_TSURUHASHI, EQUIP_REGION_ID_ARMS);
	itemCountLeft = EquipNumSearch(ITEM_ID_KOINNO_TSURUHASHI, EQUIP_REGION_ID_ARMS_LEFT);
	if ((itemCountRight > 0) || (itemCountLeft > 0)) {
		wSPC_VIT += 1 * n_A_Weapon_ATKplus *  itemCountRight;
		wSPC_VIT += 1 * n_A_Weapon2_ATKplus *  itemCountLeft;
	}

	//----------------------------------------------------------------
	// 「自警団の弓」の、素ＩＮＴによる効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_ZIKEIDANNO_YUMI)) > 0) {
		wSPC_AGI += 1 * ROUNDDOWN(SU_INT / 10) * itemCount;
	}

	//----------------------------------------------------------------
	// 「大自然のギター」の、精錬による効果
	//----------------------------------------------------------------
	itemCountRight = EquipNumSearch(ITEM_ID_DAISHIZENNO_GUITAR, EQUIP_REGION_ID_ARMS);
	itemCountLeft = EquipNumSearch(ITEM_ID_DAISHIZENNO_GUITAR, EQUIP_REGION_ID_ARMS_LEFT);
	if ((itemCountRight > 0) || (itemCountLeft > 0)) {
		wSPC_VIT += 1 * n_A_Weapon_ATKplus *  itemCountRight;
		wSPC_VIT += 1 * n_A_Weapon2_ATKplus *  itemCountLeft;
	}

	//----------------------------------------------------------------
	// 「大自然のロープ」の、精錬による効果
	//----------------------------------------------------------------
	itemCountRight = EquipNumSearch(ITEM_ID_DAISHIZENNO_ROPE, EQUIP_REGION_ID_ARMS);
	itemCountLeft = EquipNumSearch(ITEM_ID_DAISHIZENNO_ROPE, EQUIP_REGION_ID_ARMS_LEFT);
	if ((itemCountRight > 0) || (itemCountLeft > 0)) {
		wSPC_VIT += 1 * n_A_Weapon_ATKplus *  itemCountRight;
		wSPC_VIT += 1 * n_A_Weapon2_ATKplus *  itemCountLeft;
	}

	//----------------------------------------------------------------
	// 「名も無き剣士のブーツ　イグニゼム＝セニア（ＭＶＰ）カードセット」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_SET_ID_NAMONAKI_KENNSHINO_BOOTS_IGNISEM_CENIA_MVP)) > 0) {
		if (n_A_BaseLV <= 99) {
			wSPC_STR += 3 * n_A_SHOES_DEF_PLUS * itemCount;
		}
		else {
			wSPC_STR += 10 * n_A_SHOES_DEF_PLUS * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「エメラルドリング」の、スキル習得による強化
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_EMERALD_RING)) > 0) {
		wSPC_AGI += 1 * ROUNDDOWN(LearnedSkillSearch(SKILL_ID_DOUBLE_STRAFING) / 2) * itemCount;
		wSPC_VIT += 1 * ROUNDDOWN(LearnedSkillSearch(SKILL_ID_DOUBLE_STRAFING) / 2) * itemCount;
		wSPC_DEX += 1 * ROUNDDOWN(LearnedSkillSearch(SKILL_ID_DOUBLE_STRAFING) / 2) * itemCount;
	}

	//----------------------------------------------------------------
	// 「古代龍の宝冠」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_KODAIRYUNO_HOKAN)) > 0) {
		if (n_A_HEAD_DEF_PLUS >= 10) {
			wSPC_INT += 1 * ROUNDDOWN((SU_INT + SU_DEX) / 10) * itemCount;
			wSPC_DEX += 1 * ROUNDDOWN((SU_INT + SU_DEX) / 10) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「おもちゃの指輪」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_OMOCHANO_YUBIWA)) > 0) {
		wSPC_STR += 1 * ROUNDDOWN(LearnedSkillSearch(SKILL_ID_KEN_SHUREN) / 2) * itemCount;
		wSPC_STR += 1 * ROUNDDOWN(LearnedSkillSearch(SKILL_ID_KEN_SHUREN_GENETIC) / 2) * itemCount;
		wSPC_AGI += 1 * ROUNDDOWN(LearnedSkillSearch(SKILL_ID_KEN_SHUREN) / 2) * itemCount;
		wSPC_AGI += 1 * ROUNDDOWN(LearnedSkillSearch(SKILL_ID_KEN_SHUREN_GENETIC) / 2) * itemCount;
		wSPC_VIT += 1 * ROUNDDOWN(LearnedSkillSearch(SKILL_ID_KEN_SHUREN) / 2) * itemCount;
		wSPC_VIT += 1 * ROUNDDOWN(LearnedSkillSearch(SKILL_ID_KEN_SHUREN_GENETIC) / 2) * itemCount;
	}

	//----------------------------------------------------------------
	// 「精巧な猫じゃらしの模型」の、精錬による効果
	//----------------------------------------------------------------
	itemCountRight = EquipNumSearch(ITEM_ID_SEIKONA_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS);
	itemCountLeft = EquipNumSearch(ITEM_ID_SEIKONA_NEKOZYARASHINO_MOKEI, EQUIP_REGION_ID_ARMS_LEFT);
	if ((itemCountRight > 0) || (itemCountLeft > 0)) {
		wSPC_DEX += 1 * n_A_Weapon_ATKplus * itemCountRight;
		wSPC_DEX += 1 * n_A_Weapon2_ATKplus * itemCountLeft;
	}

	//----------------------------------------------------------------
	// 「トンボがとまった魔力の猫じゃらし」の、精錬による効果
	//----------------------------------------------------------------
	itemCountRight = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_MARYOKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS);
	itemCountLeft = EquipNumSearch(ITEM_ID_TONBOGA_TOMATTA_MARYOKUNO_NEKOZYARASHI, EQUIP_REGION_ID_ARMS_LEFT);
	if ((itemCountRight > 0) || (itemCountLeft > 0)) {
		wSPC_INT += 1 * n_A_Weapon_ATKplus * itemCountRight;
		wSPC_INT += 1 * n_A_Weapon2_ATKplus * itemCountLeft;
	}

	//----------------------------------------------------------------
	// 「ビッグエッグリングカード」の、精錬による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_BIG_EGGRING, CARD_REGION_ID_HEAD_TOP_ANY)) > 0) {
		wSPC_STR += 1 * n_A_HEAD_DEF_PLUS * cardCount;
		wSPC_AGI += 1 * n_A_HEAD_DEF_PLUS * cardCount;
		wSPC_VIT += 1 * n_A_HEAD_DEF_PLUS * cardCount;
		wSPC_INT += 1 * n_A_HEAD_DEF_PLUS * cardCount;
		wSPC_DEX += 1 * n_A_HEAD_DEF_PLUS * cardCount;
		wSPC_LUK += 1 * n_A_HEAD_DEF_PLUS * cardCount;
	}

	//----------------------------------------------------------------
	// 「パワードチップ」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_POWERED_CHIP)) > 0) {
		if ((sklLv = LearnedSkillSearch(SKILL_ID_PILE_BUNKER)) >= 3) {
			wSPC_STR += 5 * itemCount;
			wSPC_VIT += 5 * itemCount;
			wSPC_DEX += 5 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「不死の軍団認識票　ひまわり少年セット」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_SET_ID_FUSHINO_GUNDAN_NINSHIKIHYO_HIMAWARI_SHONEN)) > 0) {
		wSPC_INT += 2 * n_A_Weapon_ATKplus * itemCount;
	}

	//----------------------------------------------------------------
	// 「イリュージョンスタッフオブオルド」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_STUFF_OF_OLDE)) > 0) {
		if (LearnedSkillSearch(SKILL_ID_DRAGONOLOGY) >= 5) {
			wSPC_INT += 3 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「トラベラーシューズ」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_TRAVELER_SHOES)) > 0) {
		wSPC_STR += 1 * LearnedSkillSearch(SKILL_ID_SWING_DANCE) * itemCount;
		wSPC_AGI += 1 * LearnedSkillSearch(SKILL_ID_SWING_DANCE) * itemCount;
		wSPC_VIT += 1 * LearnedSkillSearch(SKILL_ID_SWING_DANCE) * itemCount;
		wSPC_INT += 1 * LearnedSkillSearch(SKILL_ID_SWING_DANCE) * itemCount;
		wSPC_DEX += 1 * LearnedSkillSearch(SKILL_ID_SWING_DANCE) * itemCount;
		wSPC_LUK += 1 * LearnedSkillSearch(SKILL_ID_SWING_DANCE) * itemCount;
	}

	//----------------------------------------------------------------
	// 「勇者のブローチ　勇者のトレードメイルセット」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_SET_ID_YUSHANO_BROACH_YUSHANO_TRADE_MAIL)) > 0) {
		wSPC_STR += 2 * n_A_BODY_DEF_PLUS * itemCount;
		wSPC_AGI += 2 * n_A_BODY_DEF_PLUS * itemCount;
		wSPC_VIT += 2 * n_A_BODY_DEF_PLUS * itemCount;
		wSPC_INT += 2 * n_A_BODY_DEF_PLUS * itemCount;
		wSPC_DEX += 2 * n_A_BODY_DEF_PLUS * itemCount;
		wSPC_LUK += 2 * n_A_BODY_DEF_PLUS * itemCount;
	}

	//----------------------------------------------------------------
	// 「パイシーズ」の、職業による効果
	//----------------------------------------------------------------
	if ((cardCount = CardNumSearch(CARD_ID_PISCES, CARD_REGION_ID_HEAD_TOP_ANY)) > 0) {
		if (IsSameJobClass(JOB_ID_SORCERER)) {
			wSPC_INT += 1 * n_A_HEAD_DEF_PLUS * cardCount;
		}
	}

	//----------------------------------------------------------------
	// 「星の眼帯　オークヒーローカードセット」の、素ＬＵＫによる効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_SET_ID_HOSHINO_GANTAI_ORC_HERO_CARD)) > 0) {
		if (n_A_BaseLV <= 99) {
			wSPC_VIT += 1 * Math.floor(SU_LUK / 10) * itemCount;
			wSPC_LUK += 1 * Math.floor(SU_LUK / 10) * itemCount;
		}
		else {
			wSPC_VIT += 3 * Math.floor(SU_LUK / 10) * itemCount;
			wSPC_LUK += 3 * Math.floor(SU_LUK / 10) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「血塗られた人形のドレス　セリーヌのリボンセット」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_SET_ID_CHINURARETA_NINGYONO_DRESS_CELINENO_RIBBON)) > 0) {
		wSPC_STR += 1 * n_A_BODY_DEF_PLUS * itemCount;
		wSPC_AGI += 1 * n_A_BODY_DEF_PLUS * itemCount;
		wSPC_VIT += 1 * n_A_BODY_DEF_PLUS * itemCount;
		wSPC_INT += 1 * n_A_BODY_DEF_PLUS * itemCount;
		wSPC_DEX += 1 * n_A_BODY_DEF_PLUS * itemCount;
		wSPC_LUK += 1 * n_A_BODY_DEF_PLUS * itemCount;
	}

	//----------------------------------------------------------------
	// 「イリュージョンゴヴニュの兜」の、ベースレベルによる強化
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_GOIBHNIUNO_KABUTO)) > 0) {
		if (n_A_BaseLV >= 170) {
			wSPC_VIT += 3 * n_A_HEAD_DEF_PLUS * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「イリュージョンゴヴニュの鎧」の、ベースレベルによる強化
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_GOIBHNIUNO_YOROI)) > 0) {
		if (n_A_BaseLV >= 170) {
			wSPC_VIT += 3 * n_A_BODY_DEF_PLUS * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「イリュージョンゴヴニュの肩飾り」の、ベースレベルによる強化
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_GOIBHNIUNO_KATAKAZARI)) > 0) {
		if (n_A_BaseLV >= 170) {
			wSPC_VIT += 3 * n_A_SHOULDER_DEF_PLUS * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「イリュージョンゴヴニュの軍靴」の、ベースレベルによる強化
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_ILLUSION_GOIBHNIUNO_GUNKA)) > 0) {
		if (n_A_BaseLV >= 170) {
			wSPC_VIT += 3 * n_A_SHOES_DEF_PLUS * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「シールドリング」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_SHIELD_RING)) > 0) {
		if (LearnedSkillSearch(SKILL_ID_DEBOTION) >= 5) {
			wSPC_STR += 5 * itemCount;
			wSPC_INT += 5 * itemCount;
			wSPC_DEX += 5 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「盗賊のすすめ第二巻」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_TOZOKUNO_SUSUME_DAINIKAN)) > 0) {
		if (LearnedSkillSearch(SKILL_ID_GRAPHITY) >= 1) {
			wSPC_VIT += 5 * itemCount;
			wSPC_DEX += 5 * itemCount;
			wSPC_LUK += 5 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「フロンティアブーツ　自警団の弓セット」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_SET_ID_FRONTIER_BOOTS_ZIKEDANNO_YUMI)) > 0) {
		if (n_A_SHOES_DEF_PLUS >= 7) {
			wSPC_AGI += 6 * ROUNDDOWN(SU_INT / 40) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「スナイピングシューズ」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_SNIPING_SHOES)) > 0) {
		if (LearnedSkillSearch(SKILL_ID_ELECTRIC_SHOCKER) >= 5) {
			wSPC_STR += 10 * itemCount;
			wSPC_AGI += 10 * itemCount;
			wSPC_VIT += 10 * itemCount;
			wSPC_INT += 10 * itemCount;
			wSPC_DEX += 10 * itemCount;
			wSPC_LUK += 10 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「イルシオンスーツI」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_ILUSION_SUIT_1)) > 0) {
		if (n_A_BaseLV >= 170) {
			wSPC_AGI += 2 * itemCount;
			wSPC_VIT += 2 * itemCount;
			wSPC_LUK += 2 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「イルシオンスーツII」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_ILUSION_SUIT_2)) > 0) {
		if (n_A_BaseLV >= 170) {
			wSPC_STR += 2 * itemCount;
			wSPC_INT += 2 * itemCount;
			wSPC_DEX += 2 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「ダークリング」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_DARK_RING)) > 0) {
		wSPC_STR += 1 * LearnedSkillSearch(SKILL_ID_WEAPON_CRUSH) * itemCount;
		wSPC_AGI += 1 * LearnedSkillSearch(SKILL_ID_WEAPON_CRUSH) * itemCount;
		wSPC_DEX += 1 * LearnedSkillSearch(SKILL_ID_WEAPON_CRUSH) * itemCount;
	}

	//----------------------------------------------------------------
	// 「覚醒火雷大神靴　月夜花カード　セット」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSE_HONOIKAZUCHINOOOKAMI_KUTSU_WORUYAFA_CARD)) > 0) {
		if (n_A_BaseLV <= 99) {
			wSPC_INT += 3 * n_A_SHOES_DEF_PLUS * itemCount;
		} else {
			wSPC_INT += 10 * n_A_SHOES_DEF_PLUS * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「ルーングリーブ」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_RUNE_GREEVE)) > 0) {
		wSPC_STR += 3 * Math.floor((LearnedSkillSearch(SKILL_ID_WATER_DRAGON_BREATH) + LearnedSkillSearch(SKILL_ID_FIRE_DRAGON_BREATH)) / 2) * itemCount;
		wSPC_AGI += 3 * Math.floor((LearnedSkillSearch(SKILL_ID_WATER_DRAGON_BREATH) + LearnedSkillSearch(SKILL_ID_FIRE_DRAGON_BREATH)) / 2) * itemCount;
		wSPC_VIT += 3 * Math.floor((LearnedSkillSearch(SKILL_ID_WATER_DRAGON_BREATH) + LearnedSkillSearch(SKILL_ID_FIRE_DRAGON_BREATH)) / 2) * itemCount;
		wSPC_INT += 3 * Math.floor((LearnedSkillSearch(SKILL_ID_WATER_DRAGON_BREATH) + LearnedSkillSearch(SKILL_ID_FIRE_DRAGON_BREATH)) / 2) * itemCount;
		wSPC_DEX += 3 * Math.floor((LearnedSkillSearch(SKILL_ID_WATER_DRAGON_BREATH) + LearnedSkillSearch(SKILL_ID_FIRE_DRAGON_BREATH)) / 2) * itemCount;
		wSPC_LUK += 3 * Math.floor((LearnedSkillSearch(SKILL_ID_WATER_DRAGON_BREATH) + LearnedSkillSearch(SKILL_ID_FIRE_DRAGON_BREATH)) / 2) * itemCount;
	}

	//----------------------------------------------------------------
	// 「インペリアルガトリングスーツ」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_GATLING_SUIT)) > 0) {
		if (LearnedSkillSearch(SKILL_ID_ETERNAL_CHAIN) >= 10) {
			wSPC_DEX += 10 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「グレースガトリングスーツ」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_GATLING_SUIT)) > 0) {
		if (LearnedSkillSearch(SKILL_ID_ETERNAL_CHAIN) >= 10) {
			wSPC_DEX += 30 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「ガーディアンナイツアーチャーボウ」の、スキル習得による効果
	//----------------------------------------------------------------
	itemCount = Math.max(
		EquipNumSearchMIG(ITEM_ID_GUARDIAN_KNIGHTS_ARCHER_BOW),
		EquipNumSearchMIG(ITEM_ID_GUARDIAN_KNIGHTS_ARCHER_BOW_T1)
		);
	if (itemCount > 0) {
		if (n_A_Weapon_ATKplus >= 9) {
			wSPC_INT += 3 * LearnedSkillSearch(SKILL_ID_TRAP_KENKYU) * itemCount;
			wSPC_DEX += 3 * LearnedSkillSearch(SKILL_ID_TRAP_KENKYU) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「辰戌の腕輪」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearchMIG(ITEM_ID_TATSUINUNO_UDEWA)) > 0) {
		wSPC_AGI += 4 * LearnedSkillSearch(SKILL_ID_TENKETSU_HAN) * itemCount;
	}

	//----------------------------------------------------------------
	// 「インペリアルメナススーツ」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_MENUS_SUIT)) > 0) {
		if (LearnedSkillSearch(SKILL_ID_FAINT_BOMB) >= 10) {
			wSPC_DEX += 10 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「グレースメナススーツ」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_MENUS_SUIT)) > 0) {
		if (LearnedSkillSearch(SKILL_ID_FAINT_BOMB) >= 10) {
			wSPC_DEX += 30 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「覚醒深淵の王の指輪　古王グローザ　セット」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_SET_ID_KAKUSE_SHINENNO_ONO_YUBIWA_KOO_GLOZA)) > 0) {
		if (EquipNumSearch(ITEM_SET_ID_KAKUSE_SHINENNO_ONO_YUBIWA_KOO_GLOZA_OWASHINO_GANKO) == 0) {
			wSPC_STR += 10 * n_A_SHOES_DEF_PLUS * itemCount;
			wSPC_VIT += 3 * n_A_SHOES_DEF_PLUS * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「剛勇無双の神輿　剛勇無双の貫　セット」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearchMIG(ITEM_SET_ID_GOYUMUSONO_MIKOSHI_GOYUMUSONO_TSURANUKI)) > 0) {


		wSPC_STR += 10 * Math.floor(n_A_SHOES_DEF_PLUS / 3) * itemCount;
		wSPC_AGI += 10 * Math.floor(n_A_SHOES_DEF_PLUS / 3) * itemCount;
		wSPC_VIT += 10 * Math.floor(n_A_SHOES_DEF_PLUS / 3) * itemCount;
		wSPC_INT += 10 * Math.floor(n_A_SHOES_DEF_PLUS / 3) * itemCount;
		wSPC_DEX += 10 * Math.floor(n_A_SHOES_DEF_PLUS / 3) * itemCount;
		wSPC_LUK += 10 * Math.floor(n_A_SHOES_DEF_PLUS / 3) * itemCount;

		// 移行チェック用の処理
		n_tok[ITEM_SP_ALLSTATUS_PLUS_FOR_SET] += 10 * Math.floor(n_A_SHOES_DEF_PLUS / 3) * itemCount;
	}

	//----------------------------------------------------------------
	// 「インペリアルレインストームスーツ」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_RAINSTORM_SUIT)) > 0) {
		if (LearnedSkillSearch(SKILL_ID_SEVERE_RAINSTORM) >= 5) {
			wSPC_DEX += 10 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「グレースレインストームスーツ」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_RAINSTORM_SUIT)) > 0) {
		if (LearnedSkillSearch(SKILL_ID_SEVERE_RAINSTORM) >= 5) {
			wSPC_DEX += 30 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「インペリアルスカルローブ」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearchMIG(ITEM_ID_IMPERIAL_SCULL_ROBE)) > 0) {
		if (LearnedSkillSearch(SKILL_ID_SHIRYO_HYOI) >= 5) {
			wSPC_INT += 10 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「グレーススカルローブ」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearchMIG(ITEM_ID_GRACE_SCULL_ROBE)) > 0) {
		if (LearnedSkillSearch(SKILL_ID_SHIRYO_HYOI) >= 5) {
			wSPC_INT += 30 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「もふもふラブリーフォックス」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_MOFUMOFU_LOVELY_FOX)) > 0) {
		wSPC_VIT += 5 * LearnedSkillSearch(SKILL_ID_KEIKAI) * itemCount;
	}

	//----------------------------------------------------------------
	// 「星の眼帯　封印されたオークヒーローカードセット」の、素ＬＵＫによる効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_SET_ID_HOSHINO_GANTAI_FUINSARETA_ORC_HERO_CARD)) > 0) {
		if (n_A_BaseLV <= 99) {
			wSPC_VIT += 1 * Math.floor(SU_LUK / 20) * itemCount;
			wSPC_LUK += 1 * Math.floor(SU_LUK / 20) * itemCount;
		}
		else {
			wSPC_VIT += 1 * Math.floor(SU_LUK / 10) * itemCount;
			wSPC_LUK += 1 * Math.floor(SU_LUK / 10) * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「名も無き剣士のブーツ　封印されたイグニゼム＝セニア（ＭＶＰ）カードセット」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_SET_ID_NAMONAKI_KENNSHINO_BOOTS_FUINSARETA_IGNISEM_CENIA_MVP)) > 0) {
		if (n_A_BaseLV <= 99) {
			wSPC_STR += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		}
		else {
			wSPC_STR += 4 * n_A_SHOES_DEF_PLUS * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「ダークトライアド」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_DARK_TRIAD)) > 0) {
		wSPC_AGI += 10 * LearnedSkillSearch(SKILL_ID_MAELSTORM) * itemCount;
	}

	//----------------------------------------------------------------
	// 「ぽかぽかタンポポケープ」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_POKAPOKA_TANPOPO_CAPE)) > 0) {
		if (LearnedSkillSearch(SKILL_ID_DAICHINO_TAMASHI) >= 1) {
			vartmp = 0;
			vartmp += LearnedSkillSearch(SKILL_ID_MATATABI_LANCE);
			vartmp += LearnedSkillSearch(SKILL_ID_MATATABINO_NEKKO);
			vartmp += LearnedSkillSearch(SKILL_ID_INUHAKKA_METEOR);
			vartmp += LearnedSkillSearch(SKILL_ID_INUHAKKA_SHOWER);
			vartmp += LearnedSkillSearch(SKILL_ID_CHATTERING);
			vartmp += LearnedSkillSearch(SKILL_ID_MYAUMYAU);
			vartmp += LearnedSkillSearch(SKILL_ID_NYAN_GRASS);

			wSPC_INT += 1 * vartmp * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「ゾディアック　双児宮のマント」セットの、職業による効果
	//----------------------------------------------------------------
	if (CardNumSearch(CARD_SET_ID_ENCHANT_ZODIAC_SOZIKYUNO_MANT)) {
		if (IsSameJobClass(JOB_ID_MINSTREL) || IsSameJobClass(JOB_ID_WANDERER)) {
			wSPC_INT += 2 * n_A_SHOULDER_DEF_PLUS;
			wSPC_DEX += 2 * n_A_SHOULDER_DEF_PLUS;
		}
	}

	//----------------------------------------------------------------
	// 「異境の統轄者　黒蛇王カード」セットの、ジョブレベルによる効果
	//----------------------------------------------------------------
	if (CardNumSearch(CARD_SET_ID_ENCHANT_IKYONO_TOKATSUSHA_KOKUDAO)) {
		wSPC_INT += 1 * Math.floor(n_A_JobLV / 3);
	}

	//----------------------------------------------------------------
	// 「楯無の鎧　封印されたRSX-0806カードセット」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_SET_ID_TATENASHINO_YOROI_FUINSARETA_RSX_0806)) > 0) {
		wSPC_VIT += 2 * n_A_BODY_DEF_PLUS * itemCount;
	}

	//----------------------------------------------------------------
	// 「アプローズサンダル　封印されたアモンラーカードセット」の、精錬による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_SET_ID_APPLAUSE_SANDAL_FUINSARETA_AMON_RA)) > 0) {
		wSPC_STR += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		wSPC_AGI += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		wSPC_VIT += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		wSPC_INT += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		wSPC_DEX += 1 * n_A_SHOES_DEF_PLUS * itemCount;
		wSPC_LUK += 1 * n_A_SHOES_DEF_PLUS * itemCount;

		// 移行チェック用の処理
		n_tok[ITEM_SP_ALLSTATUS_PLUS_FOR_SET] += 1 * n_A_SHOES_DEF_PLUS * itemCount;
	}

	//----------------------------------------------------------------
	// 「異境の統轄者　封印された黒蛇王カード」セットの、ジョブレベルによる効果
	//----------------------------------------------------------------
	if (CardNumSearch(CARD_SET_ID_ENCHANT_IKYONO_TOKATSUSHA_FUINSARETA_KOKUDAO)) {
		wSPC_INT += 1 * Math.floor(n_A_JobLV / 10);
	}

	//----------------------------------------------------------------
	// 「フォー・オブ・ア・カインド」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_FOUR_OF_A_KIND)) > 0) {
		wSPC_INT += 10 * LearnedSkillSearch(SKILL_ID_RADIUS) * itemCount;
	}

	//----------------------------------------------------------------
	// 「ディア・デ・ムエルトス」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_DIA_DE_MUERTOS)) > 0) {
		wSPC_INT += 5 * LearnedSkillSearch(SKILL_ID_SOUL_ENERGY_KENKYU) * itemCount;
	}

	//----------------------------------------------------------------
	// 「トランセンデンスリング」の、ベースレベルによる効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_TRANSCENDENCE_RING)) > 0) {
		if (n_A_BaseLV >= 200) {
			wSPC_STR += 15 * itemCount;
			wSPC_AGI += 15 * itemCount;
			wSPC_VIT += 15 * itemCount;
			wSPC_INT += 15 * itemCount;
			wSPC_DEX += 15 * itemCount;
			wSPC_LUK += 15 * itemCount;
		}
	}

	//----------------------------------------------------------------
	// 「ラウドパーク」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_LOUD_PARK)) > 0) {
		wSPC_INT += 6 * LearnedSkillSearch(SKILL_ID_FRIGNO_UTA) * itemCount;
	}

	//----------------------------------------------------------------
	// 「フィフスエレメント」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_FIFTH_ELEMENT)) > 0) {
		vartmp = 0;
		vartmp += LearnedSkillSearch(SKILL_ID_SUMMON_AGNI);
		vartmp += LearnedSkillSearch(SKILL_ID_SUMMON_AQUA);
		vartmp += LearnedSkillSearch(SKILL_ID_SUMMON_VENTOS);
		vartmp += LearnedSkillSearch(SKILL_ID_SUMMON_TERA);

		wSPC_INT += 5 * vartmp * itemCount;
	}

	//----------------------------------------------------------------
	// 「マジックコンプレッション」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_MAGIC_COMPRESSION)) > 0) {
		wSPC_INT += 5 * LearnedSkillSearch(SKILL_ID_ELEMENTAL_SYMPASY) * itemCount;
	}

	//----------------------------------------------------------------
	// 「アメイジング・グレイス」の、スキル習得による効果
	//----------------------------------------------------------------
	if ((itemCount = EquipNumSearch(ITEM_ID_AMAZING_GRACE)) > 0) {
		wSPC_INT += 3 * LearnedSkillSearch(SKILL_ID_ORATIO) * itemCount;
	}

	//----------------------------------------------------------------
	// 集中力向上が乗らない効果（セット装備等）
	//----------------------------------------------------------------
	wSPCall = GetEquippedTotalSPEquip(7) - GetEquippedTotalSPEquipExact(7);
	wSPC_STR += GetEquippedTotalSPEquip(1) - GetEquippedTotalSPEquipExact(1) + wSPCall;
	wSPC_AGI += GetEquippedTotalSPEquip(2) - GetEquippedTotalSPEquipExact(2) + wSPCall;
	wSPC_VIT += GetEquippedTotalSPEquip(3) - GetEquippedTotalSPEquipExact(3) + wSPCall;
	wSPC_INT += GetEquippedTotalSPEquip(4) - GetEquippedTotalSPEquipExact(4) + wSPCall;
	wSPC_DEX += GetEquippedTotalSPEquip(5) - GetEquippedTotalSPEquipExact(5) + wSPCall;
	wSPC_LUK += GetEquippedTotalSPEquip(6) - GetEquippedTotalSPEquipExact(6) + wSPCall;

	var wSPCall2 = GetEquippedTotalSPEquip(ITEM_SP_ALLSTATUS_PLUS_FOR_SET);
	wSPC_STR += GetEquippedTotalSPEquip(ITEM_SP_STR_PLUS_FOR_SET) + wSPCall2;
	wSPC_AGI += GetEquippedTotalSPEquip(ITEM_SP_AGI_PLUS_FOR_SET) + wSPCall2;
	wSPC_VIT += GetEquippedTotalSPEquip(ITEM_SP_VIT_PLUS_FOR_SET) + wSPCall2;
	wSPC_INT += GetEquippedTotalSPEquip(ITEM_SP_INT_PLUS_FOR_SET) + wSPCall2;
	wSPC_DEX += GetEquippedTotalSPEquip(ITEM_SP_DEX_PLUS_FOR_SET) + wSPCall2;
	wSPC_LUK += GetEquippedTotalSPEquip(ITEM_SP_LUK_PLUS_FOR_SET) + wSPCall2;

	wSPCall = GetEquippedTotalSPCardAndElse(7);
	wSPC_STR += GetEquippedTotalSPCardAndElse(1) + wSPCall;
	wSPC_AGI += GetEquippedTotalSPCardAndElse(2) + wSPCall;
	wSPC_VIT += GetEquippedTotalSPCardAndElse(3) + wSPCall;
	wSPC_INT += GetEquippedTotalSPCardAndElse(4) + wSPCall;
	wSPC_DEX += GetEquippedTotalSPCardAndElse(5) + wSPCall;
	wSPC_LUK += GetEquippedTotalSPCardAndElse(6) + wSPCall;

	wSPCall2 = GetEquippedTotalSPCardAndElse(ITEM_SP_ALLSTATUS_PLUS_FOR_SET);
	wSPC_STR += GetEquippedTotalSPCardAndElse(ITEM_SP_STR_PLUS_FOR_SET) + wSPCall2;
	wSPC_AGI += GetEquippedTotalSPCardAndElse(ITEM_SP_AGI_PLUS_FOR_SET) + wSPCall2;
	wSPC_VIT += GetEquippedTotalSPCardAndElse(ITEM_SP_VIT_PLUS_FOR_SET) + wSPCall2;
	wSPC_INT += GetEquippedTotalSPCardAndElse(ITEM_SP_INT_PLUS_FOR_SET) + wSPCall2;
	wSPC_DEX += GetEquippedTotalSPCardAndElse(ITEM_SP_DEX_PLUS_FOR_SET) + wSPCall2;
	wSPC_LUK += GetEquippedTotalSPCardAndElse(ITEM_SP_LUK_PLUS_FOR_SET) + wSPCall2;

	// TODO: データ移行過渡処理
	// 計算したSP効果を、移行前のデータ形式に変換して、加算する
	if (IsEnableMigrationBlockTransit()) {
		var idxArray = 0;
		var wSPCallMIG = 0;
		var spTagStrArrayAll = MigGetItemSpTagArrayByOldSpID(ITEM_SP_ALLSTATUS_PLUS);
		var spTagStrArrayStr = MigGetItemSpTagArrayByOldSpID(ITEM_SP_STR_PLUS);
		var spTagStrArrayAgi = MigGetItemSpTagArrayByOldSpID(ITEM_SP_AGI_PLUS);
		var spTagStrArrayVit = MigGetItemSpTagArrayByOldSpID(ITEM_SP_VIT_PLUS);
		var spTagStrArrayInt = MigGetItemSpTagArrayByOldSpID(ITEM_SP_INT_PLUS);
		var spTagStrArrayDex = MigGetItemSpTagArrayByOldSpID(ITEM_SP_DEX_PLUS);
		var spTagStrArrayLuk = MigGetItemSpTagArrayByOldSpID(ITEM_SP_LUK_PLUS);

		for (idxArray = 0; idxArray < spTagStrArrayAll.length; idxArray++) {
			wSPCallMIG += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTagStrArrayAll[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
			wSPCallMIG += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTagStrArrayAll[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
			wSPCallMIG -= g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagStrArrayAll[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		}
		wSPC_STR += wSPCallMIG;
		wSPC_AGI += wSPCallMIG;
		wSPC_VIT += wSPCallMIG;
		wSPC_INT += wSPCallMIG;
		wSPC_DEX += wSPCallMIG;
		wSPC_LUK += wSPCallMIG;

		for (idxArray = 0; idxArray < spTagStrArrayStr.length; idxArray++) {
			wSPC_STR += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTagStrArrayStr[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
			wSPC_STR += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTagStrArrayStr[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
			wSPC_STR -= g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagStrArrayStr[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		}
		for (idxArray = 0; idxArray < spTagStrArrayAgi.length; idxArray++) {
			wSPC_AGI += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTagStrArrayAgi[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
			wSPC_AGI += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTagStrArrayAgi[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
			wSPC_AGI -= g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagStrArrayAgi[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		}
		for (idxArray = 0; idxArray < spTagStrArrayVit.length; idxArray++) {
			wSPC_VIT += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTagStrArrayVit[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
			wSPC_VIT += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTagStrArrayVit[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
			wSPC_VIT -= g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagStrArrayVit[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		}
		for (idxArray = 0; idxArray < spTagStrArrayInt.length; idxArray++) {
			wSPC_INT += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTagStrArrayInt[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
			wSPC_INT += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTagStrArrayInt[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
			wSPC_INT -= g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagStrArrayInt[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		}
		for (idxArray = 0; idxArray < spTagStrArrayDex.length; idxArray++) {
			wSPC_DEX += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTagStrArrayDex[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
			wSPC_DEX += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTagStrArrayDex[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
			wSPC_DEX -= g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagStrArrayDex[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		}
		for (idxArray = 0; idxArray < spTagStrArrayLuk.length; idxArray++) {
			wSPC_LUK += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSpValue(spTagStrArrayLuk[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
			wSPC_LUK += g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetSetSpValue(spTagStrArrayLuk[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
			wSPC_LUK -= g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).GetPlaneSpValue(spTagStrArrayLuk[idxArray], null, MIG_EFFECTIVE_SP_CALC_MODE_SUM);
		}
	}

	//----------------------------------------------------------------
	// ランダムエンチャント効果
	// （集中力向上は乗らないらしいので、たぶんこの位置）
	//----------------------------------------------------------------
	wSPCall = GetRndOptTotalValue(ITEM_SP_ALLSTATUS_PLUS, null, false);
	wSPC_STR += GetRndOptTotalValue(ITEM_SP_STR_PLUS, null, false) + wSPCall;
	wSPC_AGI += GetRndOptTotalValue(ITEM_SP_AGI_PLUS, null, false) + wSPCall;
	wSPC_VIT += GetRndOptTotalValue(ITEM_SP_VIT_PLUS, null, false) + wSPCall;
	wSPC_INT += GetRndOptTotalValue(ITEM_SP_INT_PLUS, null, false) + wSPCall;
	wSPC_DEX += GetRndOptTotalValue(ITEM_SP_DEX_PLUS, null, false) + wSPCall;
	wSPC_LUK += GetRndOptTotalValue(ITEM_SP_LUK_PLUS, null, false) + wSPCall;

	//----------------------------------------------------------------
	// スキル「フルスロットル」による効果
	//----------------------------------------------------------------
	if (UsedSkillSearch(SKILL_ID_FULLSLOT) > 0) {
		wSPC_STR += ROUNDDOWN(SU_STR * 0.2);
		wSPC_AGI += ROUNDDOWN(SU_AGI * 0.2);
		wSPC_VIT += ROUNDDOWN(SU_VIT * 0.2);
		wSPC_DEX += ROUNDDOWN(SU_DEX * 0.2);
		wSPC_INT += ROUNDDOWN(SU_INT * 0.2);
		wSPC_LUK += ROUNDDOWN(SU_LUK * 0.2);
	}

	//----------------------------------------------------------------
	// 「サモナー　大地の力」による効果
	//----------------------------------------------------------------
	if (Math.max(LearnedSkillSearch(SKILL_ID_DAICHINO_CHIKARA), UsedSkillSearch(SKILL_ID_DAICHINO_CHIKARA)) > 0) {
		wSPC_INT += 7;
	}

	//----------------------------------------------------------------
	// 「一次職支援　ブレッシング」による効果
	//----------------------------------------------------------------
	wSPC_STR += g_confDataIchizi[CCharaConfIchizi.CONF_ID_BLESSING];
	wSPC_INT += g_confDataIchizi[CCharaConfIchizi.CONF_ID_BLESSING];
	wSPC_DEX += g_confDataIchizi[CCharaConfIchizi.CONF_ID_BLESSING];

	//----------------------------------------------------------------
	// 「一次職支援　速度増加」による効果
	//----------------------------------------------------------------
	if(g_confDataIchizi[CCharaConfIchizi.CONF_ID_SOKUDO_ZOKA] > 0 && 
		g_confDataDebuff[CCharaConfDebuff.CONF_ID_QUAGMIRE] == 0 && 
		g_confDataDebuff[CCharaConfDebuff.CONF_ID_DECAGI] == 0) {
		wSPC_AGI += g_confDataIchizi[CCharaConfIchizi.CONF_ID_SOKUDO_ZOKA] + 2;
	}

	//----------------------------------------------------------------
	// 「二次職支援　グロリア」による効果
	//----------------------------------------------------------------
	wSPC_LUK += (g_confDataNizi[CCharaConfNizi.CONF_ID_GLORIA] * 30);

	if (UsedSkillSearch(SKILL_ID_TRUE_SIGHT)) {
		wSPC_STR += 5;
		wSPC_AGI += 5;
		wSPC_VIT += 5;
		wSPC_DEX += 5;
		wSPC_INT += 5;
		wSPC_LUK += 5;
	}
	//----------------------------------------------------------------
	// 「二次職支援　トゥルーサイト」の、効果
	//----------------------------------------------------------------
	else if ((sklLv = g_confDataNizi[CCharaConfNizi.CONF_ID_TRUE_SIGHT]) > 0) {
		wSPC_STR += 5;
		wSPC_AGI += 5;
		wSPC_VIT += 5;
		wSPC_DEX += 5;
		wSPC_INT += 5;
		wSPC_LUK += 5;
	}

	if (UsedSkillSearch(SKILL_ID_SPURT_ZYOTAI) && n_A_WeaponType==0) {
		wSPC_STR += 10;
	}

	if(UsedSkillSearch(SKILL_ID_GIANT_GROWTH)) {
		wSPC_STR += 30;
	}

	//----------------------------------------------------------------
	// 「三次職支援　ジャイアントグロース」の効果
	//----------------------------------------------------------------
	if(g_confDataSanzi[CCharaConfSanzi.CONF_ID_GIANT_GLOTH]) {
		wSPC_STR += 30;
	}

	if (UsedSkillSearch(SKILL_ID_INSPIRATION)
		|| TimeItemNumSearch(TIME_ITEM_ID_ZETSUBONO_KAMI_MOROCC_CARD)
		|| TimeItemNumSearch(TIME_ITEM_ID_DEMI_FREYA)
		|| TimeItemNumSearch(TIME_ITEM_ID_MAKENSHI_SAKRAY_CARD)
		) {
		var w = ROUNDDOWN(n_A_BaseLV / 10 + n_A_JobLV / 5);
		wSPC_STR += w;
		wSPC_AGI += w;
		wSPC_VIT += w;
		wSPC_DEX += w;
		wSPC_INT += w;
		wSPC_LUK += w;
	}

	if(n_A_PassSkill4[0]){
		wSPC_STR += 5;
		wSPC_DEX += 5;
		wSPC_INT += 5;
	}
	wSPC_STR += n_A_PassSkill4[1];
	wSPC_VIT += n_A_PassSkill4[2];
	wSPC_AGI += n_A_PassSkill4[3];
	wSPC_DEX += n_A_PassSkill4[4];
	if(n_A_PassSkill4[5]){
		wSPC_STR += 20;
		wSPC_AGI += 20;
		wSPC_VIT += 20;
		wSPC_DEX += 20;
		wSPC_INT += 20;
		wSPC_LUK += 20;
	}

	if(n_A_PassSkill8[4]){
		wSPC_STR += 1;
		wSPC_AGI += 1;
		wSPC_VIT += 1;
		wSPC_DEX += 1;
		wSPC_INT += 1;
		wSPC_LUK += 1;
	}
	if (UsedSkillSearch(SKILL_ID_MARIAGE_STATUS)) {
		wSPC_STR -= 1;
		wSPC_AGI -= 1;
		wSPC_VIT -= 1;
		wSPC_DEX -= 1;
		wSPC_INT -= 1;
		wSPC_LUK -= 1;
	}

	//----------------------------------------------------------------
	// 「三次職支援　アクラウスダッシュ」の効果
	//----------------------------------------------------------------
	switch (g_confDataSanzi[CCharaConfSanzi.CONF_ID_ARCLOUSE_DASH]) {
	case 1:
	case 2:
		wSPC_AGI += 3;
		break;
	case 3:
	case 4:
		wSPC_AGI += 9;
		break;
	case 5:
		wSPC_AGI += 15;
		break;
	}

	wSPC_VIT += 5 * UsedSkillSearch(SKILL_ID_DEFENCE);

	/**
	 * プレイヤー状態異常「メロディーオブシンク」の効果
	 */
	wSPC_INT -= 5 * g_confDataDebuff[CCharaConfDebuff.CONF_ID_MELODYOFSINK];

	/**
	 * プレイヤー状態異常「精神衝撃」の効果
	 */
	wSPC_INT -= 4 * g_confDataDebuff[CCharaConfDebuff.CONF_ID_MANDRAGORA];

	/**
	 * プレイヤー状態異常「ビヨンドオブウォークライ」の効果
	 */
	wSPC_STR -= 6 * g_confDataDebuff[CCharaConfDebuff.CONF_ID_BEYOND_OF_WARCRY];

	/**
	 * プレイヤー状態異常「ハーモナイズ」の効果
	 */
	if (g_confDataDebuff[CCharaConfDebuff.CONF_ID_HARMONIZE] > 0) {
		const harmonize_val = (5 + 5 * g_confDataDebuff[CCharaConfDebuff.CONF_ID_HARMONIZE]);
		wSPC_STR -= harmonize_val;
		wSPC_AGI -= harmonize_val;
		wSPC_VIT -= harmonize_val;
		wSPC_INT -= harmonize_val;
		wSPC_DEX -= harmonize_val;
		wSPC_LUK -= harmonize_val;
	}

	/**
	 * プレイヤー状態異常「オールステータスダウン」の効果
	 */
	if (g_confDataDebuff[CCharaConfDebuff.CONF_ID_ALL_STATUS_DOWN] > 0) {
		wSPC_STR -= 100;
		wSPC_AGI -= 100;
		wSPC_VIT -= 100;
		wSPC_INT -= 100;
		wSPC_DEX -= 100;
		wSPC_LUK -= 100;
	}

	if(n_A_PassSkill7[49]){
		wSPC_STR += 10;
		wSPC_AGI += 10;
		wSPC_VIT += 10;
		wSPC_INT += 10;
		wSPC_DEX += 10;
		wSPC_LUK += 10;
	}else{
		if(n_A_PassSkill7[3]) wSPC_STR += n_A_PassSkill7[3];
		if(n_A_PassSkill7[4]) wSPC_AGI += n_A_PassSkill7[4];
		if(n_A_PassSkill7[5]) wSPC_VIT += n_A_PassSkill7[5];
		if(n_A_PassSkill7[6]) wSPC_INT += n_A_PassSkill7[6];
		if(n_A_PassSkill7[7]) wSPC_DEX += n_A_PassSkill7[7];
		if(n_A_PassSkill7[8]) wSPC_LUK += n_A_PassSkill7[8];
		if(TimeItemNumSearch(79)){
			if(n_A_PassSkill7[3] <6) wSPC_STR += 6 - n_A_PassSkill7[3];
			if(n_A_PassSkill7[4] <6) wSPC_AGI += 6 - n_A_PassSkill7[4];
			if(n_A_PassSkill7[5] <6) wSPC_VIT += 6 - n_A_PassSkill7[5];
			if(n_A_PassSkill7[6] <6) wSPC_INT += 6 - n_A_PassSkill7[6];
			if(n_A_PassSkill7[7] <6) wSPC_DEX += 6 - n_A_PassSkill7[7];
			if(n_A_PassSkill7[8] <6) wSPC_LUK += 6 - n_A_PassSkill7[8];
		}
	}
	if(n_A_PassSkill7[16]) wSPC_STR += 20;
	if(n_A_PassSkill7[17]) wSPC_AGI += 20;
	if(n_A_PassSkill7[18]) wSPC_VIT += 20;
	if(n_A_PassSkill7[19]) wSPC_INT += 20;
	if(n_A_PassSkill7[20]) wSPC_DEX += 20;
	if(n_A_PassSkill7[21]) wSPC_LUK += 20;

	if (UsedSkillSearch(SKILL_ID_TENSE_ICHIZISHOKUNO_TAMASHI)) {
		if(35<= n_A_JOB && n_A_JOB <= 40 && n_A_BaseLV <70){
			var w=0;
			w = n_A_BaseLV - 10;
			if(w > 50) w = 50;
			if(w <0) w = 0;
			if(n_A_STR + wSPC_STR <= w) wSPC_STR = w - n_A_STR;
			if(n_A_AGI + wSPC_AGI <= w) wSPC_AGI = w - n_A_AGI;
			if(n_A_VIT + wSPC_VIT <= w) wSPC_VIT = w - n_A_VIT;
			if(n_A_INT + wSPC_INT <= w) wSPC_INT = w - n_A_INT;
			if(n_A_DEX + wSPC_DEX <= w) wSPC_DEX = w - n_A_DEX;
			if(n_A_LUK + wSPC_LUK <= w) wSPC_LUK = w - n_A_LUK;
		}
	}

	var w_marikon = 0;
	for(var i=12;i<=17;i++){
		if(n_A_PassSkill3[i] != 0) w_marikon = 1;
	}
	if(w_marikon == 1 && n_A_PassSkill3[18]==0){
		if(n_A_STR + wSPC_STR <99){
			if(n_A_STR + wSPC_STR + Math.floor(n_A_PassSkill3[12] /2) <99) wSPC_STR += Math.floor(n_A_PassSkill3[12] /2);
			else wSPC_STR = (99 - n_A_STR);
		}
		if(n_A_AGI + wSPC_AGI <99){
			if(n_A_AGI + wSPC_AGI + Math.floor(n_A_PassSkill3[13] /2) <99) wSPC_AGI += Math.floor(n_A_PassSkill3[13] /2);
			else wSPC_AGI = (99 - n_A_AGI);
		}
		if(n_A_VIT + wSPC_VIT <99){
			if(n_A_VIT + wSPC_VIT + Math.floor(n_A_PassSkill3[14] /2) <99) wSPC_VIT += Math.floor(n_A_PassSkill3[14] /2);
			else wSPC_VIT = (99 - n_A_VIT);
		}
		if(n_A_INT + wSPC_INT <99){
			if(n_A_INT + wSPC_INT + Math.floor(n_A_PassSkill3[15] /2) <99) wSPC_INT += Math.floor(n_A_PassSkill3[15] /2);
			else wSPC_INT = (99 - n_A_INT);
		}
		if(n_A_DEX + wSPC_DEX <99){
			if(n_A_DEX + wSPC_DEX + Math.floor(n_A_PassSkill3[16] /2) <99) wSPC_DEX += Math.floor(n_A_PassSkill3[16] /2);
			else wSPC_DEX = (99 - n_A_DEX);
		}
		if(n_A_LUK + wSPC_LUK <99){
			if(n_A_LUK + wSPC_LUK + Math.floor(n_A_PassSkill3[17] /2) <99) wSPC_LUK += Math.floor(n_A_PassSkill3[17] /2);
			else wSPC_LUK = (99 - n_A_LUK);
		}
	}else if(w_marikon == 1 && n_A_PassSkill3[18]){
		wSPC_STR += n_A_PassSkill3[12];
		wSPC_AGI += n_A_PassSkill3[13];
		wSPC_VIT += n_A_PassSkill3[14];
		wSPC_INT += n_A_PassSkill3[15];
		wSPC_DEX += n_A_PassSkill3[16];
		wSPC_LUK += n_A_PassSkill3[17];
	}

	//----------------------------------------------------------------
	// 「性能カスタマイズ」の、効果
	//----------------------------------------------------------------
	confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_STR_PLUS);
	if (confval != 0) {
		wSPC_STR += confval;
	}

	confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_AGI_PLUS);
	if (confval != 0) {
		wSPC_AGI += confval;
	}

	confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_VIT_PLUS);
	if (confval != 0) {
		wSPC_VIT += confval;
	}

	confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_INT_PLUS);
	if (confval != 0) {
		wSPC_INT += confval;
	}

	confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_DEX_PLUS);
	if (confval != 0) {
		wSPC_DEX += confval;
	}

	confval = g_objCharaConfCustomStatus.GetConf(CCharaConfCustomStatus.CONF_ID_LUK_PLUS);
	if (confval != 0) {
		wSPC_LUK += confval;
	}

	if(g_confDataDebuff[CCharaConfDebuff.CONF_ID_QUAGMIRE]){
		var w1;
		var w2;
		if(g_confDataDebuff[CCharaConfDebuff.CONF_ID_QUAGMIRE] <= 5){
			w1 = Math.floor((n_A_AGI + wSPC_AGI) / 2);
			w2 = 9999;
		}else{
			w1 = Math.floor((n_A_AGI + wSPC_AGI) / 4);
			w2 = 5 * (g_confDataDebuff[CCharaConfDebuff.CONF_ID_QUAGMIRE] - 5);
		}
		if(w1 > w2) wSPC_AGI -= w2;
		else wSPC_AGI -= w1;
		if(g_confDataDebuff[CCharaConfDebuff.CONF_ID_QUAGMIRE] <= 5) w1 = Math.floor((n_A_DEX + wSPC_DEX) / 2);
		else w1 = Math.floor((n_A_DEX + wSPC_DEX) / 4);
		if(w1 > w2) wSPC_DEX -= w2;
		else wSPC_DEX -= w1;
	}
	if(g_confDataDebuff[CCharaConfDebuff.CONF_ID_DECAGI]) wSPC_AGI -= (g_confDataDebuff[CCharaConfDebuff.CONF_ID_DECAGI] + 2);
	if(g_confDataDebuff[CCharaConfDebuff.CONF_ID_CURSE]) wSPC_LUK = -1 * n_A_LUK;
	n_A_STR += wSPC_STR;
	n_A_AGI += wSPC_AGI;
	n_A_VIT += wSPC_VIT;
	n_A_INT += wSPC_INT;
	n_A_DEX += wSPC_DEX;
	n_A_LUK += wSPC_LUK;

	// 拡張表示用のデータを格納
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_STR_PLUS, wSPC_STR - jobBonusArray[0]);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_AGI_PLUS, wSPC_AGI - jobBonusArray[1]);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_VIT_PLUS, wSPC_VIT - jobBonusArray[2]);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_INT_PLUS, wSPC_INT - jobBonusArray[3]);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_DEX_PLUS, wSPC_DEX - jobBonusArray[4]);
	CExtraInfoAreaComponentManager.dispDataMap.set(ITEM_SP_LUK_PLUS, wSPC_LUK - jobBonusArray[5]);

	//------------------------------------------------------------------------------------------------
	//
	// 特性ステータス対応
	//
	//------------------------------------------------------------------------------------------------
	var wSPC_SPEC_ALL = GetEquippedTotalSPEquip(ITEM_SP_ALL_SPECS_PLUS);

	wSPC_POW += GetEquippedTotalSPEquip(ITEM_SP_POW_PLUS) + GetEquippedTotalSPCardAndElse(ITEM_SP_POW_PLUS);
	wSPC_STA += GetEquippedTotalSPEquip(ITEM_SP_STA_PLUS) + GetEquippedTotalSPCardAndElse(ITEM_SP_STA_PLUS);
	wSPC_WIS += GetEquippedTotalSPEquip(ITEM_SP_WIS_PLUS) + GetEquippedTotalSPCardAndElse(ITEM_SP_WIS_PLUS);
	wSPC_SPL += GetEquippedTotalSPEquip(ITEM_SP_SPL_PLUS) + GetEquippedTotalSPCardAndElse(ITEM_SP_SPL_PLUS);
	wSPC_CON += GetEquippedTotalSPEquip(ITEM_SP_CON_PLUS) + GetEquippedTotalSPCardAndElse(ITEM_SP_CON_PLUS);
	wSPC_CRT += GetEquippedTotalSPEquip(ITEM_SP_CRT_PLUS) + GetEquippedTotalSPCardAndElse(ITEM_SP_CRT_PLUS);

	// ランダムエンチャント効果
	wSPC_SPEC_ALL += GetRndOptTotalValue(ITEM_SP_ALL_SPECS_PLUS, null, false);

	wSPC_POW += GetRndOptTotalValue(ITEM_SP_POW_PLUS, null, false);
	wSPC_STA += GetRndOptTotalValue(ITEM_SP_STA_PLUS, null, false);
	wSPC_WIS += GetRndOptTotalValue(ITEM_SP_WIS_PLUS, null, false);
	wSPC_SPL += GetRndOptTotalValue(ITEM_SP_SPL_PLUS, null, false);
	wSPC_CON += GetRndOptTotalValue(ITEM_SP_CON_PLUS, null, false);
	wSPC_CRT += GetRndOptTotalValue(ITEM_SP_CRT_PLUS, null, false);

	// 全ステ上昇を分配
	wSPC_POW += wSPC_SPEC_ALL;
	wSPC_STA += wSPC_SPEC_ALL;
	wSPC_WIS += wSPC_SPEC_ALL;
	wSPC_SPL += wSPC_SPEC_ALL;
	wSPC_CON += wSPC_SPEC_ALL;
	wSPC_CRT += wSPC_SPEC_ALL;


	//----------------------------------------------------------------
	// 「性能カスタマイズ」の、効果
	//----------------------------------------------------------------
	confval = g_objCharaConfCustomSpecStatus.GetConf(CCharaConfCustomSpecStatus.CONF_ID_POW_PLUS);
	if (confval != 0) {
		wSPC_POW += confval;
	}

	confval = g_objCharaConfCustomSpecStatus.GetConf(CCharaConfCustomSpecStatus.CONF_ID_STA_PLUS);
	if (confval != 0) {
		wSPC_STA += confval;
	}

	confval = g_objCharaConfCustomSpecStatus.GetConf(CCharaConfCustomSpecStatus.CONF_ID_WIS_PLUS);
	if (confval != 0) {
		wSPC_WIS += confval;
	}

	confval = g_objCharaConfCustomSpecStatus.GetConf(CCharaConfCustomSpecStatus.CONF_ID_SPL_PLUS);
	if (confval != 0) {
		wSPC_SPL += confval;
	}

	confval = g_objCharaConfCustomSpecStatus.GetConf(CCharaConfCustomSpecStatus.CONF_ID_CON_PLUS);
	if (confval != 0) {
		wSPC_CON += confval;
	}

	confval = g_objCharaConfCustomSpecStatus.GetConf(CCharaConfCustomSpecStatus.CONF_ID_CRT_PLUS);
	if (confval != 0) {
		wSPC_CRT += confval;
	}



	// 「砂時計のネックレス」の効果（ペナルティ）
	if ((itemCount = EquipNumSearch(ITEM_ID_SUNADOKENO_NECKLACE)) > 0) {
		confval = Math.min(6, Math.floor(n_A_JobLV / 5)) * itemCount;

		wSPC_POW -= confval;
		wSPC_STA -= confval;
		wSPC_WIS -= confval;
		wSPC_SPL -= confval;
		wSPC_CON -= confval;
		wSPC_CRT -= confval;
	}

	// 「ソウルアセティック」スキル「霊道術修練」による効果
	if ((sklLv = Math.max(LearnedSkillSearch(SKILL_ID_REIDOZYUTSU_SHUREN), UsedSkillSearch(SKILL_ID_REIDOZYUTSU_SHUREN))) > 0) {
		wSPC_SPL += sklLv;
	}

	// 四次職支援「レリギオ」による効果
	// 術者側の H.Plus +100 あたり効果量 +2 加算は未実装
	// SKILL_ID_RERIGIO
	if ((bufLv = g_confDataYozi[CCharaConfYozi.CONF_ID_RERIGIO]) > 0) {
		value = 2 * bufLv;
		wSPC_STA += value;
		wSPC_WIS += value;
		wSPC_SPL += value;
	}

	// 四次職支援「ベネディクトゥム」による効果
	// 術者側の H.Plus +100 あたり効果量 +2 加算は未実装
	// SKILL_ID_BENEDICTUM
	if ((bufLv = g_confDataYozi[CCharaConfYozi.CONF_ID_BENEDICTUM]) > 0) {

		value = 2 * bufLv;

		wSPC_POW += value;
		wSPC_CON += value;
		wSPC_CRT += value;
	}

	// 四次職支援「サンドフェスティバル」による効果
	if ((bufLv = g_confDataYozi[CCharaConfYozi.CONF_ID_SAND_FESTIVAL]) > 0) {
		if (g_confDataYozi[CCharaConfYozi.CONF_ID_RERIGIO] == 0) {
			value = 2 * bufLv;

			wSPC_STA += value;
			wSPC_WIS += value;
			wSPC_SPL += value;
		}
	}

	// 四次職支援「マリンフェスティバル」による効果
	if ((bufLv = g_confDataYozi[CCharaConfYozi.CONF_ID_MARIN_FESTIVAL]) > 0) {
		if (g_confDataYozi[CCharaConfYozi.CONF_ID_BENEDICTUM] == 0) {
			value = 2 * bufLv;

			wSPC_POW += value;
			wSPC_CON += value;
			wSPC_CRT += value;	
		}
	}

	// 「ナイトウォッチ」スキル「グレネードマスタリー」による効果
	if ((sklLv = Math.max(LearnedSkillSearch(SKILL_ID_GRENADE_MASTERY), UsedSkillSearch(SKILL_ID_GRENADE_MASTERY))) > 0) {
		wSPC_CON += sklLv
	}
	

	// 特性ステータス補正の保持
	var spc4thArray = StoreSpecStatusBonusAll(wSPC_POW, wSPC_STA, wSPC_WIS, wSPC_SPL, wSPC_CON, wSPC_CRT);



	// ステータス補正の画面出力
	DisplayStatusBonusAll(
		n_A_BaseLV,
		wSPC_STR, wSPC_AGI, wSPC_VIT, wSPC_INT, wSPC_DEX, wSPC_LUK,
		spc4thArray[0], spc4thArray[1], spc4thArray[2], spc4thArray[3], spc4thArray[4], spc4thArray[5]
	);





	// 特性データ対応
	// 画面出力
}

/**
 * 装備中のＳＰの合計値を取得する（装備のみ）.
 * @param spid ＳＰのＩＤ
 * @return 当該ＳＰのパラメタ合計値
 */
function GetEquippedTotalSPEquip(spid) {

	// この関数だけ、シャドウ装備の効果を加算する
	let value = 0;

	value += GetEquippedTotalSPEquipSub(spid, false, false);
	value += GetEquippedTotalSPShadowSub(spid, false, false);

	return value;
}

/**
 * 装備中のＳＰの合計値を取得する（装備のみ、無条件効果のみ）.
 * @param spid ＳＰのＩＤ
 * @return 当該ＳＰのパラメタ合計値
 */
function GetEquippedTotalSPEquipExact(spid) {
	return GetEquippedTotalSPEquipSub(spid, false, true);
}

/**
 * 装備中のＳＰのリストを取得する（装備のみ）.
 * @param spid ＳＰのＩＤ
 * @return 当該ＳＰのパラメタ合計値
 */
function GetEquippedSPListEquip(spid) {
	return GetEquippedTotalSPEquipSub(spid, true, false);
}

/**
 * 装備中のＳＰの合計値を取得する（装備のみ）.
 * @param spid ＳＰのＩＤ
 * @return 当該ＳＰのパラメタ合計値
 */
function GetEquippedTotalSPEquipSub(spid, bListUp, bExact) {

	var invalidItemIdArray = null;

	// 効果が打ち消されるアイテムＩＤの配列を取得
	invalidItemIdArray = new Array()
		.concat(GetEquippedSPValueArrayEquip(ITEM_SP_INVALIDATE_ITEM_SP))
		.concat(GetEquippedSPValueArrayCardAndElse(ITEM_SP_INVALIDATE_ITEM_SP));



	// TODO: データ移行過渡処理
	// 移行後の通常処理（追加で行う）
	if (IsEnableMigrationBlockTransit()) {
		// 移行データが定義されているものは、打ち消されるＩＤの配列に追加する
		invalidItemIdArray = invalidItemIdArray.concat(g_constDataManager.itemDataManager.GetRegisteredIdArray());
	}



	if (invalidItemIdArray.length == 0) {
		invalidItemIdArray = null;
	}



	return GetEquippedSPSubEquip(spid, invalidItemIdArray, bListUp, bExact);
}

/**
 * 装備中のＳＰ値のリストを取得する（装備のみ）.
 * @param spid ＳＰのＩＤ
 * @return 当該ＳＰのパラメタ合計値
 */
function GetEquippedSPValueArrayEquip(spid) {
	return GetEquippedSPSubEquip(spid, null, true, false);
}

/**
 * 装備中のＳＰを取得する（装備のみ）.
 * @param spid ＳＰのＩＤ
 * @param invalidItemIdArray 効果無効のアイテムＩＤ配列
 * @param bListUp リストアップするかのフラグ
 * @return 当該ＳＰのパラメタ合計値
 */
function GetEquippedSPSubEquip(spid, invalidItemIdArray, bListUp, bExact) {

	var eqpRegionId = 0;
	var spDefIdx = 0;

	let eqpTranscendence = 0;
	var eqpRefined = 0;

	var spDefIdMod = 0;			// 特殊条件を取り除いたＳＰのＩＤ
	var spDefRemain = 0;		// 計算途中のＳＰＩＤ値
	var spDefBaseLvOver = 0;	// BaseLv以上条件
	var spDefBaseLvBy = 0;		// BaseLvが上がる度に条件
	var spDefJobRestrict = 0;	// 職業制限
	var spDefPureStatus = 0;	// 純粋なステータス条件
	var spDefPureStatusBy = 0;	// 純粋なステータスが上がる度に条件
	var spDefRefineOver = 0;	// 精錬値以上条件
	var spDefRefineBy = 0;		// 精錬値が上がる度に条件

	var pureStatusValue = [SU_STR, SU_AGI, SU_VIT, SU_INT, SU_DEX, SU_LUK];

	var spValPureStatus = 0;	// 純粋なステータスによる上昇量

	var spVal = 0;
	var itemId = 0;
	var itemData = 0;

	var spValToCorrect = 0;
	var listUpArray = new Array();



	// 全ての装備箇所をループ
	for(eqpRegionId = 0; eqpRegionId < n_A_Equip.length; eqpRegionId++) {

		// 装備データからアイテムデータを取得
		itemId = n_A_Equip[eqpRegionId];
		itemData = ItemObjNew[itemId];

		// 効果が無効の装備でないかを検査
		if (invalidItemIdArray) {
			if (invalidItemIdArray.indexOf(itemId) >= 0) {
				continue;
			}
		}

		// 装備箇所ごとに、精錬値を特定する
		switch (eqpRegionId) {

		case EQUIP_REGION_ID_ARMS:
			eqpTranscendence = typeof n_A_Weapon_Transcendence != "undefined" ? n_A_Weapon_Transcendence: 0;			
			eqpRefined = n_A_Weapon_ATKplus;
			break;

		case EQUIP_REGION_ID_ARMS_LEFT:
			eqpTranscendence = typeof n_A_Weapon2_Transcendence != "undefined" ? n_A_Weapon2_Transcendence: 0;
			eqpRefined = n_A_Weapon2_ATKplus;
			break;

		case EQUIP_REGION_ID_HEAD_TOP:
			eqpTranscendence = typeof n_A_HEAD_DEF_Transcendence != "undefined" ? n_A_HEAD_DEF_Transcendence: 0;
			eqpRefined = n_A_HEAD_DEF_PLUS;
			break;

		case EQUIP_REGION_ID_SHIELD:
			eqpTranscendence = typeof n_A_SHIELD_DEF_Transcendence != "undefined" ? n_A_SHIELD_DEF_Transcendence: 0;
			eqpRefined = n_A_SHIELD_DEF_PLUS;
			break;

		case EQUIP_REGION_ID_BODY:
			eqpTranscendence = typeof n_A_BODY_DEF_Transcendence != "undefined" ? n_A_BODY_DEF_Transcendence: 0;
			eqpRefined = n_A_BODY_DEF_PLUS;
			break;

		case EQUIP_REGION_ID_SHOULDER:
			eqpTranscendence = typeof n_A_SHOULDER_DEF_Transcendence != "undefined" ? n_A_SHOULDER_DEF_Transcendence: 0;
			eqpRefined = n_A_SHOULDER_DEF_PLUS;
			break;

		case EQUIP_REGION_ID_SHOES:
			eqpTranscendence = typeof n_A_SHOES_DEF_Transcendence != "undefined" ? n_A_SHOES_DEF_Transcendence: 0;
			eqpRefined = n_A_SHOES_DEF_PLUS;
			break;

		default:
			eqpTranscendence = 0;
			eqpRefined = 0;

		}

		// アイテムのＳＰ定義をループ検索
		for (spDefIdx = 0; itemData[ ITEM_DATA_INDEX_SPBEGIN + spDefIdx ] != ITEM_SP_END; spDefIdx += 2) {

			// ＳＰの定義を取得
			// spDefRemain は int の場合と BigInt の場合がある
			spDefRemain = itemData[ ITEM_DATA_INDEX_SPBEGIN + spDefIdx ];
			spDefValue = itemData[ ITEM_DATA_INDEX_SPBEGIN + spDefIdx + 1 ];

			// 超越段階を満たさない場合は、次へ
			spDefRemain = CheckSpDefTransendenceOver(spDefRemain, eqpTranscendence);
			if (spDefRemain < 0) {
				continue;
			}			
			// --- ここから下の spDefRemain は必ず Int 型 ---

			// 完全一致条件が指定されている場合
			if (bExact) {
				if (spDefRemain != spid) {
					continue;
				}
			}

			// ＳＰ定義ＩＤが一致しない場合は、次へ
			if (!IsMatchSpDefId(spDefRemain, spid)) {
				continue;
			}

			// 親密度条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefFriendlyOver(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// BaseLv以上条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefBaseLvOver(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// BaseLvが上がる度に条件を取得
			spDefBaseLvBy = Math.floor(spDefRemain / ITEM_SP_BASE_LV_BY_1_OFFSET);
			spDefRemain = spDefRemain % ITEM_SP_BASE_LV_BY_1_OFFSET;

			// 職業条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefJobRestrict(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// 純粋なステータス条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefPureStatus(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// 純粋なステータスが上がる度に条件を取得
			spDefPureStatusBy = Math.floor(spDefRemain / ITEM_SP_PURE_STR_BY_10_OFFSET);
			if (1 <= spDefPureStatusBy && spDefPureStatusBy <= 6) {
				spValPureStatus = Math.floor(pureStatusValue[spDefPureStatusBy - 1] / 10);
			}
			else if (7 == spDefPureStatusBy) {
				spValPureStatus = pureStatusValue[PARAM_DEX];
			}
			else if (8 == spDefPureStatusBy) {
				spValPureStatus = pureStatusValue[PARAM_VIT];
			}
			spDefRemain = spDefRemain % ITEM_SP_PURE_STR_BY_10_OFFSET;

			// 精錬値以上条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefRefineOver(spDefRemain, eqpRefined);
			if (spDefRemain < 0) {
				continue;
			}

			// 精錬値が上がる度に条件を取得
			spDefRefineBy = Math.floor(spDefRemain / ITEM_SP_REFINE_BY_1_OFFSET);
			spDefRemain = spDefRemain % ITEM_SP_REFINE_BY_1_OFFSET;

			// 追加すべきＳＰ定義値を計算

			spValToCorrect = itemData[ ITEM_DATA_INDEX_SPBEGIN + spDefIdx + 1 ];

			// 精錬値が上がる度に条件が設定されている場合
			if (spDefRefineBy > 0) {
				spValToCorrect *= Math.floor(eqpRefined / spDefRefineBy);
			}

			// 純粋なステータスが上がる度に条件が設定されている場合
			if (spDefPureStatusBy > 0) {
				spValToCorrect *= spValPureStatus;
			}

			// BaseLvが上がる度に条件が設定されている場合
			if (spDefBaseLvBy > 0) {
				spValToCorrect *= Math.floor(n_A_BaseLV / spDefBaseLvBy);
			}

			// 集計

			// リストアップの場合
			if (bListUp) {
				listUpArray.push(spValToCorrect);
			}

			// 合計値の場合
			else {
				spVal += spValToCorrect;
			}
		}
	}

	// 結果を戻す
	if (bListUp) {
		return listUpArray
	}

	else {
		return spVal;
	}
}

/**
 * 装備中のＳＰの合計値を取得する（装備のみ）.
 * @param spid ＳＰのＩＤ
 * @return 当該ＳＰのパラメタ合計値
 */
function GetEquippedTotalSPShadowSub(spid, bListUp, bExact) {

	var invalidItemIdArray = null;

	// 効果が打ち消されるアイテムＩＤの配列を取得
	invalidItemIdArray = new Array()
		.concat(GetEquippedSPValueArrayEquip(ITEM_SP_INVALIDATE_ITEM_SP))
		.concat(GetEquippedSPValueArrayCardAndElse(ITEM_SP_INVALIDATE_ITEM_SP));



	// TODO: データ移行過渡処理
	// 移行後の通常処理（追加で行う）
	if (IsEnableMigrationBlockTransit()) {
		// 移行データが定義されているものは、打ち消されるＩＤの配列に追加する
		invalidItemIdArray = invalidItemIdArray.concat(g_constDataManager.itemDataManager.GetRegisteredIdArray());
	}



	if (invalidItemIdArray.length == 0) {
		invalidItemIdArray = null;
	}



	return GetEquippedSPSubShadow(spid, invalidItemIdArray, bListUp, bExact);
}

/**
 * 装備中のＳＰを取得する（シャドウ装備のみ）.
 * @param spid ＳＰのＩＤ
 * @param invalidItemIdArray 効果無効のアイテムＩＤ配列
 * @param bListUp リストアップするかのフラグ
 * @return 当該ＳＰのパラメタ合計値
 */
function GetEquippedSPSubShadow(spid, invalidItemIdArray, bListUp, bExact) {

	var eqpRegionId = 0;
	var spDefIdx = 0;

	var spDefIdMod = 0;			// 特殊条件を取り除いたＳＰのＩＤ
	var spDefRemain = 0;		// 計算途中のＳＰＩＤ値
	var spDefBaseLvOver = 0;	// BaseLv以上条件
	var spDefBaseLvBy = 0;		// BaseLvが上がる度に条件
	var spDefJobRestrict = 0;	// 職業制限
	var spDefPureStatus = 0;	// 純粋なステータス条件
	var spDefPureStatusBy = 0;	// 純粋なステータスが上がる度に条件
	var spDefRefineOver = 0;	// 精錬値以上条件
	var spDefRefineBy = 0;		// 精錬値が上がる度に条件

	var pureStatusValue = [SU_STR, SU_AGI, SU_VIT, SU_INT, SU_DEX, SU_LUK];

	var spValPureStatus = 0;	// 純粋なステータスによる上昇量

	var spVal = 0;

	var spValToCorrect = 0;
	var listUpArray = new Array();



	// 全ての装備箇所をループ
	const eqprgnIDs = [
		EQUIP_REGION_ID_SHADOW_ARMS_RIGHT,
		EQUIP_REGION_ID_SHADOW_ARMS_LEFT,
		EQUIP_REGION_ID_SHADOW_BODY,
		EQUIP_REGION_ID_SHADOW_FOOT,
		EQUIP_REGION_ID_SHADOW_ACCESSARY_1,
		EQUIP_REGION_ID_SHADOW_ACCESSARY_2,
	]

	for (let idx = 0; idx < eqprgnIDs.length; idx++) {

		const eqpRegionId = eqprgnIDs[idx];

		// 装備IDを取得
		const itemId = g_itemIdArray[eqpRegionId];
		if (!itemId) {
			continue;
		}

		// 効果が無効の装備でないかを検査
		if (invalidItemIdArray) {
			if (invalidItemIdArray.indexOf(itemId) >= 0) {
				continue;
			}
		}

		// 装備IDからアイテムデータを取得
		const itemData = ItemObjNew[itemId];

		// 装備箇所ごとに、精錬値を特定する
		let eqpRefined = g_refinedArray[eqpRegionId];
		if (!eqpRefined) {
			eqpRefined = 0;
		}

		// アイテムのＳＰ定義をループ検索
		for (spDefIdx = 0; itemData[ ITEM_DATA_INDEX_SPBEGIN + spDefIdx ] != ITEM_SP_END; spDefIdx += 2) {

			// ＳＰの定義を取得
			spDefRemain = itemData[ ITEM_DATA_INDEX_SPBEGIN + spDefIdx ];
			spDefValue = itemData[ ITEM_DATA_INDEX_SPBEGIN + spDefIdx + 1 ];

			// 完全一致条件が指定されている場合
			if (bExact) {
				if (spDefRemain != spid) {
					continue;
				}
			}

			// ＳＰ定義ＩＤが一致しない場合は、次へ
			if (!IsMatchSpDefId(spDefRemain, spid)) {
				continue;
			}

			// 親密度条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefFriendlyOver(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// BaseLv以上条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefBaseLvOver(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// BaseLvが上がる度に条件を取得
			spDefBaseLvBy = Math.floor(spDefRemain / ITEM_SP_BASE_LV_BY_1_OFFSET);
			spDefRemain = spDefRemain % ITEM_SP_BASE_LV_BY_1_OFFSET;

			// 職業条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefJobRestrict(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// 純粋なステータス条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefPureStatus(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// 純粋なステータスが上がる度に条件を取得
			spDefPureStatusBy = Math.floor(spDefRemain / ITEM_SP_PURE_STR_BY_10_OFFSET);
			if (1 <= spDefPureStatusBy && spDefPureStatusBy <= 6) {
				spValPureStatus = Math.floor(pureStatusValue[spDefPureStatusBy - 1] / 10);
			}
			else if (7 == spDefPureStatusBy) {
				spValPureStatus = pureStatusValue[PARAM_DEX];
			}
			else if (8 == spDefPureStatusBy) {
				spValPureStatus = pureStatusValue[PARAM_VIT];
			}
			spDefRemain = spDefRemain % ITEM_SP_PURE_STR_BY_10_OFFSET;

			// 精錬値以上条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefRefineOver(spDefRemain, eqpRefined);
			if (spDefRemain < 0) {
				continue;
			}

			// 精錬値が上がる度に条件を取得
			spDefRefineBy = Math.floor(spDefRemain / ITEM_SP_REFINE_BY_1_OFFSET);
			spDefRemain = spDefRemain % ITEM_SP_REFINE_BY_1_OFFSET;

			// 追加すべきＳＰ定義値を計算

			spValToCorrect = itemData[ ITEM_DATA_INDEX_SPBEGIN + spDefIdx + 1 ];

			// 精錬値が上がる度に条件が設定されている場合
			if (spDefRefineBy > 0) {
				spValToCorrect *= Math.floor(eqpRefined / spDefRefineBy);
			}

			// 純粋なステータスが上がる度に条件が設定されている場合
			if (spDefPureStatusBy > 0) {
				spValToCorrect *= spValPureStatus;
			}

			// BaseLvが上がる度に条件が設定されている場合
			if (spDefBaseLvBy > 0) {
				spValToCorrect *= Math.floor(n_A_BaseLV / spDefBaseLvBy);
			}

			// 集計

			// リストアップの場合
			if (bListUp) {
				listUpArray.push(spValToCorrect);
			}

			// 合計値の場合
			else {
				spVal += spValToCorrect;
			}
		}
	}

	// 結果を戻す
	if (bListUp) {
		return listUpArray
	}

	else {
		return spVal;
	}
}

/**
 * カード・ペット・時限効果のＳＰ値のリストを取得する.
 * @param spid ＳＰのＩＤ
 * @return 当該ＳＰのパラメタ合計値
 */
function GetEquippedTotalSPCardAndElse(spid) {

	var list = null;
	var invalidCardIdArray = null;

	// 効果が打ち消されるアイテムＩＤの配列を取得
	invalidCardIdArray = new Array()
		.concat(GetEquippedSPValueArrayEquip(ITEM_SP_INVALIDATE_CARD_SP))
		.concat(GetEquippedSPValueArrayCardAndElse(ITEM_SP_INVALIDATE_CARD_SP));

	if (invalidCardIdArray.length == 0) {
		invalidCardIdArray = null;
	}

	if ((spid == ITEM_SP_ARMS_ELEMENT) || (spid == ITEM_SP_BODY_ELEMENT)) {
		list = GetEquippedSPSubSPCardAndElse(spid, invalidCardIdArray, true);
		return (list.length > 0) ? list[0] : 0;
	}
	else {
		return GetEquippedSPSubSPCardAndElse(spid, invalidCardIdArray, false);
	}
}

/**
 * カード・ペット・時限効果のＳＰ値のリストを取得する.
 * @param spid ＳＰのＩＤ
 * @return 当該ＳＰのパラメタ合計値
 */
function GetEquippedSPListCardAndElse(spid) {

	var list = null;
	var invalidCardIdArray = null;

	// 効果が打ち消されるアイテムＩＤの配列を取得
	invalidCardIdArray = new Array()
		.concat(GetEquippedSPValueArrayEquip(ITEM_SP_INVALIDATE_CARD_SP))
		.concat(GetEquippedSPValueArrayCardAndElse(ITEM_SP_INVALIDATE_CARD_SP));

	if (invalidCardIdArray.length == 0) {
		invalidCardIdArray = null;
	}

	if ((spid == ITEM_SP_ARMS_ELEMENT) || (spid == ITEM_SP_BODY_ELEMENT)) {
		list = GetEquippedSPSubSPCardAndElse(spid, invalidCardIdArray, true);
		return (list.length > 0) ? list[0] : 0;
	}
	else {
		return GetEquippedSPSubSPCardAndElse(spid, invalidCardIdArray, true);
	}
}

/**
 * カード・ペット・時限効果のＳＰ値のリストを取得する.
 * @param spid ＳＰのＩＤ
 * @return 当該ＳＰのパラメタ合計値
 */
function GetEquippedSPValueArrayCardAndElse(spid) {
	return GetEquippedSPSubSPCardAndElse(spid, null, true);
}

/**
 * カード・ペット・時限効果のＳＰの合計値を取得する.
 * @param spid ＳＰのＩＤ
 * @param invalidCardIdArray 効果無効のアイテムＩＤ配列
 * @param bListUp リストアップするかのフラグ
 * @return 当該ＳＰのパラメタ合計値
 */
function GetEquippedSPSubSPCardAndElse(spid, invalidCardIdArray, bListUp) {
	var i = 0;
	var j = 0;
	var spVal = 0;
	var cardRegionId = 0;
	var cardId = 0;
	var cardData = 0;
	var spDefIdx = 0;
	let eqpTranscendence = 0;
	var eqpRefined = 0;
	var spDefIdMod = 0;			// 特殊条件を取り除いたＳＰのＩＤ
	var spDefRemain = 0;		// 計算途中のＳＰＩＤ値
	var spDefBaseLvOver = 0;	// BaseLv以上条件
	var spDefBaseLvBy = 0;		// BaseLvが上がる度に条件
	var spDefJobRestrict = 0;	// 職業制限
	var spDefPureStatus = 0;	// 純粋なステータス条件
	var spDefPureStatusBy = 0;	// 純粋なステータスが上がる度に条件
	var spDefRefineOver = 0;	// 精錬値以上条件
	var spDefRefineBy = 0;		// 精錬値が上がる度に条件
	var pureStatusValue = [SU_STR, SU_AGI, SU_VIT, SU_INT, SU_DEX, SU_LUK];
	var spValPureStatus = 0;	// 純粋なステータスによる上昇量
	var spValToCorrect = 0;
	var listUpArray = new Array();
	var petFuncReturn = null;

	// 装備中のカードのＳＰの合計値を取得
	for(cardRegionId = 0; cardRegionId < n_A_card.length; cardRegionId++) {
		// 装備中のカードデータから、カードデータを取得
		cardId = n_A_card[cardRegionId];
		cardData = CardObjNew[cardId];
		// 効果が無効の装備でないかを検査
		if (invalidCardIdArray) {
			if (invalidCardIdArray.indexOf(cardId) >= 0) {
				continue;
			}
		}
		// カード装備箇所ごとに、精錬値を特定する
		switch (cardRegionId) {
			case CARD_REGION_ID_ARMS_RIGHT_1:
			case CARD_REGION_ID_ARMS_RIGHT_2:
			case CARD_REGION_ID_ARMS_RIGHT_3:
			case CARD_REGION_ID_ARMS_RIGHT_4:
				eqpRefined = n_A_Weapon_ATKplus;
				eqpTranscendence = typeof n_A_Weapon_Transcendence != "undefined" ? n_A_Weapon_Transcendence: 0;
				break;

			case CARD_REGION_ID_ARMS_LEFT_1:
			case CARD_REGION_ID_ARMS_LEFT_2:
			case CARD_REGION_ID_ARMS_LEFT_3:
			case CARD_REGION_ID_ARMS_LEFT_4:
				eqpRefined = n_A_Weapon2_ATKplus;
				eqpTranscendence = typeof n_A_Weapon2_Transcendence != "undefined" ? n_A_Weapon2_Transcendence: 0;
				break;

			case CARD_REGION_ID_HEAD_TOP:
			case CARD_REGION_ID_ENCHANT_HEAD_TOP_1:
			case CARD_REGION_ID_ENCHANT_HEAD_TOP_2:
			case CARD_REGION_ID_ENCHANT_HEAD_TOP_3:
				eqpRefined = n_A_HEAD_DEF_PLUS;
				eqpTranscendence = typeof n_A_HEAD_DEF_Transcendence != "undefined" ? n_A_HEAD_DEF_Transcendence: 0;
				break;

			case CARD_REGION_ID_SHIELD:
			case CARD_REGION_ID_ENCHANT_SHIELD_1:
			case CARD_REGION_ID_ENCHANT_SHIELD_2:
			case CARD_REGION_ID_ENCHANT_SHIELD_3:
				eqpRefined = n_A_SHIELD_DEF_PLUS;
				eqpTranscendence = typeof n_A_SHIELD_DEF_Transcendence != "undefined" ? n_A_SHIELD_DEF_Transcendence: 0;
				break;

			case CARD_REGION_ID_BODY:
			case CARD_REGION_ID_ENCHANT_BODY_1:
			case CARD_REGION_ID_ENCHANT_BODY_2:
			case CARD_REGION_ID_ENCHANT_BODY_3:
				eqpRefined = n_A_BODY_DEF_PLUS;
				eqpTranscendence = typeof n_A_BODY_DEF_Transcendence != "undefined" ? n_A_BODY_DEF_Transcendence: 0;
				break;

			case CARD_REGION_ID_SHOULDER:
			case CARD_REGION_ID_ENCHANT_SHOULDER_1:
			case CARD_REGION_ID_ENCHANT_SHOULDER_2:
			case CARD_REGION_ID_ENCHANT_SHOULDER_3:
				eqpRefined = n_A_SHOULDER_DEF_PLUS;
				eqpTranscendence = typeof n_A_SHOULDER_DEF_Transcendence != "undefined" ? n_A_SHOULDER_DEF_Transcendence: 0;
				break;

			case CARD_REGION_ID_SHOES:
			case CARD_REGION_ID_ENCHANT_SHOES_1:
			case CARD_REGION_ID_ENCHANT_SHOES_2:
			case CARD_REGION_ID_ENCHANT_SHOES_3:
				eqpRefined = n_A_SHOES_DEF_PLUS;
				eqpTranscendence = typeof n_A_SHOES_DEF_Transcendence != "undefined" ? n_A_SHOES_DEF_Transcendence: 0;
				break;

			default:
				eqpRefined = 0;
				eqpTranscendence = 0;
		}

		// カードのＳＰ定義をループ検索
		for(spDefIdx = 0; cardData[CARD_DATA_INDEX_SPBEGIN + spDefIdx] != 0; spDefIdx += 2) {

			// ＳＰの定義を取得
			// spDefRemain は int の場合と BigInt の場合がある
			spDefRemain = cardData[ CARD_DATA_INDEX_SPBEGIN + spDefIdx ];
			spDefValue = cardData[ CARD_DATA_INDEX_SPBEGIN + spDefIdx + 1 ];

			// 装備部位を満たさない場合は、次へ
			spDefRemain = CheckSpDefEquipmentLocation(spDefRemain, cardRegionId);
			if (spDefRemain < 0) {
				continue;
			}

			// 超越段階を満たさない場合は、次へ
			spDefRemain = CheckSpDefTransendenceOver(spDefRemain, eqpTranscendence);
			if (spDefRemain < 0) {
				continue;
			}
			// --- ここから下の spDefRemain は必ず Int 型 ---

			// ＳＰ定義ＩＤが一致しない場合は、次へ
			if (!IsMatchSpDefId(spDefRemain, spid)) {
				continue;
			}

			// 親密度条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefFriendlyOver(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// BaseLv以上条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefBaseLvOver(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// BaseLvが上がる度に条件を取得
			spDefBaseLvBy = Math.floor(spDefRemain / ITEM_SP_BASE_LV_BY_1_OFFSET);
			spDefRemain = spDefRemain % ITEM_SP_BASE_LV_BY_1_OFFSET;

			// 職業条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefJobRestrict(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// 純粋なステータス条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefPureStatus(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// 純粋なステータスが上がる度に条件を取得
			spDefPureStatusBy = Math.floor(spDefRemain / ITEM_SP_PURE_STR_BY_10_OFFSET);
			if (1 <= spDefPureStatusBy && spDefPureStatusBy <= 6) {
				spValPureStatus = Math.floor(pureStatusValue[spDefPureStatusBy - 1] / 10);
			}
			else if (7 == spDefPureStatusBy) {
				spValPureStatus = pureStatusValue[PARAM_DEX];
			}
			else if (8 == spDefPureStatusBy) {
				spValPureStatus = pureStatusValue[PARAM_VIT];
			}
			spDefRemain = spDefRemain % ITEM_SP_PURE_STR_BY_10_OFFSET;

			// 精錬値以上条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefRefineOver(spDefRemain, eqpRefined);
			if (spDefRemain < 0) {
				continue;
			}

			// 精錬値が上がる度に条件を取得
			spDefRefineBy = Math.floor(spDefRemain / ITEM_SP_REFINE_BY_1_OFFSET);
			spDefRemain = spDefRemain % ITEM_SP_REFINE_BY_1_OFFSET;

			// 追加すべきＳＰ定義値を計算

			spValToCorrect = cardData[ CARD_DATA_INDEX_SPBEGIN + spDefIdx + 1 ];

			// 精錬値が上がる度に条件が設定されている場合
			if (spDefRefineBy > 0) {
				spValToCorrect *= Math.floor(eqpRefined / spDefRefineBy);
			}

			// 純粋なステータスが上がる度に条件が設定されている場合
			if (spDefPureStatusBy > 0) {
				spValToCorrect *= spValPureStatus;
			}

			// BaseLvが上がる度に条件が設定されている場合
			if (spDefBaseLvBy > 0) {
				spValToCorrect *= Math.floor(n_A_BaseLV / spDefBaseLvBy);
			}

			// 集計

			// リストアップの場合
			if (bListUp) {
				listUpArray.push(spValToCorrect);
			}

			// 合計値の場合
			else {
				spVal += spValToCorrect;
			}
		}
	}

	// ペット効果
	// TODO: 無効ペットＩＤは未対応
	petFuncReturn = GetEquippedSPSubSPPet(spid, null, bListUp);

	// リストアップの場合
	if (bListUp) {
		listUpArray = listUpArray.concat(petFuncReturn);
	}

	// 合計値の場合
	else {
		spVal += petFuncReturn;
	}

	// 追加発動効果の合計値を加算する
	var timeObj = 0;
	var w_num = new Array();
	// 追加発動効果の指定状況を取得
	for (idx = 0; idx < g_timeItemConf.length; idx++) {
		if (g_timeItemConfEffective[idx]) {
			w_num[idx] = g_timeItemConf[idx];
		}
		else {
			w_num[idx] = 0;
		}
	}
	// 追加発動効果の重複をチェック
	for(i = 0; i < w_num.length; i++) {
		for(j = i + 1; j < w_num.length; j++) {
			if(w_num[i] == w_num[j]) w_num[j] = 0;
		}
	}
	// 発動中の時限効果を検索して加算
	for(i = 0; i < w_num.length; i++) {

		timeObj = ITEM_SP_TIME_OBJ[w_num[i]];

		// ＳＰ定義をループ検索（とりあえず、カードの部分からコピー）
		for(spDefIdx = 0; timeObj[TIME_ITEM_DATA_INDEX_SPBEGIN + spDefIdx] != 0; spDefIdx += 2) {

			// ＳＰの定義を取得
			// spDefRemain は int の場合と BigInt の場合がある
			spDefRemain = timeObj[ TIME_ITEM_DATA_INDEX_SPBEGIN + spDefIdx ];
			spDefValue = timeObj[ TIME_ITEM_DATA_INDEX_SPBEGIN + spDefIdx + 1 ];

			// 超越段階を満たさない場合は、次へ
			spDefRemain = CheckSpDefTransendenceOver(spDefRemain, eqpTranscendence);
			if (spDefRemain < 0) {
				continue;
			}
			// --- ここから下の spDefRemain は必ず Int 型 ---

			// ＳＰ定義ＩＤが一致しない場合は、次へ
			if (!IsMatchSpDefId(spDefRemain, spid)) {
				continue;
			}

			// 親密度条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefFriendlyOver(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// BaseLv以上条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefBaseLvOver(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// BaseLvが上がる度に条件を取得
			spDefBaseLvBy = Math.floor(spDefRemain / ITEM_SP_BASE_LV_BY_1_OFFSET);
			spDefRemain = spDefRemain % ITEM_SP_BASE_LV_BY_1_OFFSET;

			// 職業条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefJobRestrict(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// 純粋なステータス条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefPureStatus(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// 純粋なステータスが上がる度に条件を取得
			spDefPureStatusBy = Math.floor(spDefRemain / ITEM_SP_PURE_STR_BY_10_OFFSET);
			if (1 <= spDefPureStatusBy && spDefPureStatusBy <= 6) {
				spValPureStatus = Math.floor(pureStatusValue[spDefPureStatusBy - 1] / 10);
			}
			else if (7 == spDefPureStatusBy) {
				spValPureStatus = pureStatusValue[PARAM_DEX];
			}
			else if (8 == spDefPureStatusBy) {
				spValPureStatus = pureStatusValue[PARAM_VIT];
			}
			spDefRemain = spDefRemain % ITEM_SP_PURE_STR_BY_10_OFFSET;

			// 精錬値以上条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefRefineOver(spDefRemain, eqpRefined);
			if (spDefRemain < 0) {
				continue;
			}

			// 精錬値が上がる度に条件を取得
			spDefRefineBy = Math.floor(spDefRemain / ITEM_SP_REFINE_BY_1_OFFSET);
			spDefRemain = spDefRemain % ITEM_SP_REFINE_BY_1_OFFSET;

			// 追加すべきＳＰ定義値を計算

			spValToCorrect = timeObj[ TIME_ITEM_DATA_INDEX_SPBEGIN + spDefIdx + 1 ];

			// 精錬値が上がる度に条件が設定されている場合
			if (spDefRefineBy > 0) {
				spValToCorrect *= Math.floor(eqpRefined / spDefRefineBy);
			}

			// 純粋なステータスが上がる度に条件が設定されている場合
			if (spDefPureStatusBy > 0) {
				spValToCorrect *= spValPureStatus;
			}

			// BaseLvが上がる度に条件が設定されている場合
			if (spDefBaseLvBy > 0) {
				spValToCorrect *= Math.floor(n_A_BaseLV / spDefBaseLvBy);
			}

			// 集計

			// リストアップの場合
			if (bListUp) {
				listUpArray.push(spValToCorrect);
			}

			// 合計値の場合
			else {
				spVal += spValToCorrect;
			}
		}
	}


	// 結果を戻す
	if (bListUp) {
		return listUpArray
	}

	else {
		return spVal;
	}
}

/**
 * 装備中のＳＰの合計値を取得する（ペットのみ）.
 * @param spid ＳＰのＩＤ
 * @param invalidPetIdArray 効果無効のペットＩＤ配列
 * @param bListUp リストアップするかのフラグ
 * @return 当該ＳＰのパラメタ合計値
 */
function GetEquippedSPSubSPPet(spid, invalidPetIdArray, bListUp) {

	var spVal = 0;

	var petId = 0;
	var petData = 0;
	var friendlity = 0;

	var spDefIdx = 0;

	var eqpRefined = 0;

	var spDefIdMod = 0;			// 特殊条件を取り除いたＳＰのＩＤ
	var spDefRemain = 0;		// 計算途中のＳＰＩＤ値
	var spDefFriendly = 0;		// 親密度条件
	var spDefBaseLvOver = 0;	// BaseLv以上条件
	var spDefBaseLvBy = 0;		// BaseLvが上がる度に条件
	var spDefJobRestrict = 0;	// 職業制限
	var spDefPureStatus = 0;	// 純粋なステータス条件
	var spDefPureStatusBy = 0;	// 純粋なステータスが上がる度に条件
	var spDefRefineOver = 0;	// 精錬値以上条件
	var spDefRefineBy = 0;		// 精錬値が上がる度に条件

	var pureStatusValue = [SU_STR, SU_AGI, SU_VIT, SU_INT, SU_DEX, SU_LUK];
	var spValPureStatus = 0;

	var spValToCorrect = 0;
	var listUpArray = new Array();



	// 装備中のペットデータから、ペットデータを取得
	petId = n_A_PassSkill8[0];
	petData = PET_OBJ[petId];

	// 効果が無効のペットでないかを検査
	if (invalidPetIdArray) {
		if (invalidPetIdArray.indexOf(petId) >= 0) {

			// 結果を戻す
			if (bListUp) {
				return listUpArray
			}

			else {
				return spVal;
			}
		}
	}



	// 精錬値は０
	eqpRefined = 0;

	// ペットのＳＰ定義をループ検索
	for (spDefIdx = 0; petData[PET_DATA_INDEX_SPBEGIN + spDefIdx] != 0; spDefIdx += 2) {

		// ＳＰの定義を取得
		spDefRemain = petData[ PET_DATA_INDEX_SPBEGIN + spDefIdx ];
		spDefValue = petData[ PET_DATA_INDEX_SPBEGIN + spDefIdx + 1 ];

		// ＳＰ定義ＩＤが一致しない場合は、次へ
		if (!IsMatchSpDefId(spDefRemain, spid)) {
			continue;
		}

		// 親密度条件を満たさない場合は、次へ
		spDefRemain = CheckSpDefFriendlyOver(spDefRemain);
		if (spDefRemain < 0) {
			continue;
		}

		// BaseLv以上条件を満たさない場合は、次へ
		spDefRemain = CheckSpDefBaseLvOver(spDefRemain);
		if (spDefRemain < 0) {
			continue;
		}

		// BaseLvが上がる度に条件を取得
		spDefBaseLvBy = Math.floor(spDefRemain / ITEM_SP_BASE_LV_BY_1_OFFSET);
		spDefRemain = spDefRemain % ITEM_SP_BASE_LV_BY_1_OFFSET;

		// 職業条件を満たさない場合は、次へ
		spDefRemain = CheckSpDefJobRestrict(spDefRemain);
		if (spDefRemain < 0) {
			continue;
		}

		// 純粋なステータス条件を満たさない場合は、次へ
		spDefRemain = CheckSpDefPureStatus(spDefRemain);
		if (spDefRemain < 0) {
			continue;
		}

		// 純粋なステータスが上がる度に条件を取得
		spDefPureStatusBy = Math.floor(spDefRemain / ITEM_SP_PURE_STR_BY_10_OFFSET);
		if (1 <= spDefPureStatusBy && spDefPureStatusBy <= 6) {
			spValPureStatus = Math.floor(pureStatusValue[spDefPureStatusBy - 1] / 10);
		}
		else if (7 == spDefPureStatusBy) {
			spValPureStatus = pureStatusValue[PARAM_DEX];
		}
		else if (8 == spDefPureStatusBy) {
			spValPureStatus = pureStatusValue[PARAM_VIT];
		}
		spDefRemain = spDefRemain % ITEM_SP_PURE_STR_BY_10_OFFSET;

		// 精錬値以上条件を満たさない場合は、次へ
		spDefRemain = CheckSpDefRefineOver(spDefRemain, eqpRefined);
		if (spDefRemain < 0) {
			continue;
		}

		// 精錬値が上がる度に条件を取得
		spDefRefineBy = Math.floor(spDefRemain / ITEM_SP_REFINE_BY_1_OFFSET);
		spDefRemain = spDefRemain % ITEM_SP_REFINE_BY_1_OFFSET;

		// 追加すべきＳＰ定義値を計算

		spValToCorrect = petData[ PET_DATA_INDEX_SPBEGIN + spDefIdx + 1 ];

		// 精錬値が上がる度に条件が設定されている場合
		if (spDefRefineBy > 0) {
			spValToCorrect *= Math.floor(eqpRefined / spDefRefineBy);
		}

		// 純粋なステータスが上がる度に条件が設定されている場合
		if (spDefPureStatusBy > 0) {
			spValToCorrect *= spValPureStatus;
		}

		// BaseLvが上がる度に条件が設定されている場合
		if (spDefBaseLvBy > 0) {
			spValToCorrect *= Math.floor(n_A_BaseLV / spDefBaseLvBy);
		}

		// 集計

		// リストアップの場合
		if (bListUp) {
			listUpArray.push(spValToCorrect);
		}

		// 合計値の場合
		else {
			spVal += spValToCorrect;
		}
	}



	// 結果を戻す
	if (bListUp) {
		return listUpArray
	}

	else {
		return spVal;
	}
}

/**
 * 装備中のＳＰの合計値を取得する（衣装のみ）.
 * @param spid ＳＰのＩＤ
 * @return 当該ＳＰのパラメタ合計値
 */
function GetEquippedTotalSPCostume(spid) {

	var eqpRegionId = 0;
	var spDefIdx = 0;

	var eqpRefined = 0;

	var spDefIdMod = 0;			// 特殊条件を取り除いたＳＰのＩＤ
	var spDefRemain = 0;		// 計算途中のＳＰＩＤ値
	var spDefBaseLvOver = 0;	// BaseLv以上条件
	var spDefBaseLvBy = 0;		// BaseLvが上がる度に条件
	var spDefJobRestrict = 0;	// 職業制限
	var spDefPureStatus = 0;	// 純粋なステータス条件
	var spDefRefineOver = 0;	// 精錬値以上条件
	var spDefRefineBy = 0;		// 精錬値が上がる度に条件

	var pureStatusValue = [SU_STR, SU_AGI, SU_VIT, SU_INT, SU_DEX, SU_LUK];
	var spVal = 0;
	var costumeData = 0;



	// 全ての装備箇所をループ
	for(eqpRegionId = 0; eqpRegionId <= COSTUME_REGION_ID_ACCESSARY_2; eqpRegionId++) {

		// 装備データからアイテムデータを取得
		costumeData = CostumeOBJ[n_A_costume[eqpRegionId]];

		// 装備箇所ごとに、精錬値を特定する
		switch (eqpRegionId) {

		default:
			eqpRefined = 0;

		}

		// アイテムのＳＰ定義をループ検索
		for (spDefIdx = 0; costumeData[ COSTUME_DATA_INDEX_SPBEGIN + spDefIdx ] != ITEM_SP_END; spDefIdx += 2) {

			// ＳＰの定義を取得
			spDefRemain = costumeData[ COSTUME_DATA_INDEX_SPBEGIN + spDefIdx ];
			spDefValue = costumeData[ COSTUME_DATA_INDEX_SPBEGIN + spDefIdx + 1 ];

			// ＳＰ定義ＩＤが一致しない場合は、次へ
			if (!IsMatchSpDefId(spDefRemain, spid)) {
				continue;
			}

			// 親密度条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefFriendlyOver(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// BaseLv以上条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefBaseLvOver(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// BaseLvが上がる度に条件を取得
			spDefBaseLvBy = Math.floor(spDefRemain / ITEM_SP_BASE_LV_BY_1_OFFSET);
			spDefRemain = spDefRemain % ITEM_SP_BASE_LV_BY_1_OFFSET;

			// 職業条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefJobRestrict(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// 純粋なステータス条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefPureStatus(spDefRemain);
			if (spDefRemain < 0) {
				continue;
			}

			// 精錬値以上条件を満たさない場合は、次へ
			spDefRemain = CheckSpDefRefineOver(spDefRemain, eqpRefined);
			if (spDefRemain < 0) {
				continue;
			}

			// 精錬値が上がる度に条件を取得
			spDefRefineBy = Math.floor(spDefRemain / ITEM_SP_REFINE_BY_1_OFFSET);
			spDefRemain = spDefRemain % ITEM_SP_REFINE_BY_1_OFFSET;

			// ＳＰ定義値を追加する

			// 精錬値が上がる度に条件が設定されている場合
			if (spDefRefineBy > 0) {
				// BaseLvが上がる度に条件が設定されている場合
				if (spDefBaseLvBy > 0) {
					spVal += costumeData[ COSTUME_DATA_INDEX_SPBEGIN + spDefIdx + 1 ] * Math.floor(eqpRefined / spDefRefineBy) * Math.floor(n_A_BaseLV / spDefBaseLvBy);
				}
				else {
					spVal += costumeData[ COSTUME_DATA_INDEX_SPBEGIN + spDefIdx + 1 ] * Math.floor(eqpRefined / spDefRefineBy);
				}
			}

			// 精錬値によらず一定の場合
			else {
				// BaseLvが上がる度に条件が設定されている場合
				if (spDefBaseLvBy > 0) {
					spVal += costumeData[ COSTUME_DATA_INDEX_SPBEGIN + spDefIdx + 1 ] * Math.floor(n_A_BaseLV / spDefBaseLvBy);
				}
				else {
					spVal += costumeData[ COSTUME_DATA_INDEX_SPBEGIN + spDefIdx + 1 ];
				}
			}
		}

	}

	return spVal;
}

/**
 * 装備中のＳＰの合計値を取得する（矢のみ）.
 * @param spid ＳＰのＩＤ
 * @return 当該ＳＰのパラメタ合計値
 */
function GetEquippedTotalSPArrow(spid) {

	var spDefIdx = 0;

	var eqpRefined = 0;

	var spDefRemain = 0;		// 計算途中のＳＰＩＤ値
	var spDefValue = 0;			// 設定されているＳＰの値
	var spDefBaseLvBy = 0;		// BaseLvが上がる度に条件
	var spDefRefineBy = 0;		// 精錬値が上がる度に条件

	var spVal = 0;
	var arrowData = 0;



	// 矢データを取得
	arrowData = ArrowOBJNew[n_A_Arrow];

	eqpRefined = 0;

	// アイテムのＳＰ定義をループ検索
	for (spDefIdx = 0; arrowData[ ARROW_DATA_INDEX_SPBEGIN + spDefIdx ] != ITEM_SP_END; spDefIdx += 2) {

		// ＳＰの定義を取得
		spDefRemain = arrowData[ ARROW_DATA_INDEX_SPBEGIN + spDefIdx ];
		spDefValue = arrowData[ ARROW_DATA_INDEX_SPBEGIN + spDefIdx + 1 ];

		// ＳＰ定義ＩＤが一致しない場合は、次へ
		if (!IsMatchSpDefId(spDefRemain, spid)) {
			continue;
		}

		// 親密度条件を満たさない場合は、次へ
		spDefRemain = CheckSpDefFriendlyOver(spDefRemain);
		if (spDefRemain < 0) {
			continue;
		}

		// BaseLv以上条件を満たさない場合は、次へ
		spDefRemain = CheckSpDefBaseLvOver(spDefRemain);
		if (spDefRemain < 0) {
			continue;
		}

		// BaseLvが上がる度に条件を取得
		spDefBaseLvBy = Math.floor(spDefRemain / ITEM_SP_BASE_LV_BY_1_OFFSET);
		spDefRemain = spDefRemain % ITEM_SP_BASE_LV_BY_1_OFFSET;

		// 職業条件を満たさない場合は、次へ
		spDefRemain = CheckSpDefJobRestrict(spDefRemain);
		if (spDefRemain < 0) {
			continue;
		}

		// 純粋なステータス条件を満たさない場合は、次へ
		spDefRemain = CheckSpDefPureStatus(spDefRemain);
		if (spDefRemain < 0) {
			continue;
		}

		// 精錬値以上条件を満たさない場合は、次へ
		spDefRemain = CheckSpDefRefineOver(spDefRemain, eqpRefined);
		if (spDefRemain < 0) {
			continue;
		}

		// 精錬値が上がる度に条件を取得
		spDefRefineBy = Math.floor(spDefRemain / ITEM_SP_REFINE_BY_1_OFFSET);
		spDefRemain = spDefRemain % ITEM_SP_REFINE_BY_1_OFFSET;

		// ＳＰ定義値を追加する

		// 精錬値が上がる度に条件が設定されている場合
		if (spDefRefineBy > 0) {
			// BaseLvが上がる度に条件が設定されている場合
			if (spDefBaseLvBy > 0) {
				spVal += spDefValue * Math.floor(eqpRefined / spDefRefineBy) * Math.floor(n_A_BaseLV / spDefBaseLvBy);
			}
			else {
				spVal += spDefValue * Math.floor(eqpRefined / spDefRefineBy);
			}
		}

		// 精錬値によらず一定の場合
		else {
			// BaseLvが上がる度に条件が設定されている場合
			if (spDefBaseLvBy > 0) {
				spVal += spDefValue * Math.floor(n_A_BaseLV / spDefBaseLvBy);
			}
			else {
				spVal += spDefValue;
			}
		}
	}

	return spVal;
}

/**
 * アイテムに設定されたフラグ付きＳＰ定義ＩＤが、指定のＳＰＩＤに適合するかを検査する.
 */
function IsMatchSpDefId(itemSpId, targetSpId) {

	var spDefIdMod = 0;

	spDefIdMod = itemSpId;
	spDefIdMod = spDefIdMod % ITEM_SP_REFINE_BY_1_OFFSET;

	return (spDefIdMod == targetSpId);
}

/**
 * アイテムに設定されたフラグ付きＳＰ定義ＩＤが、親密度条件に適合するかを検査する.
 * @param {*} spDefRemain 
 * @returns 残りのItemSP(適合する場合), -1(適合しない場合)
 */
function CheckSpDefFriendlyOver(spDefRemain) {

	var friendlity = n_A_PassSkill8[17];	// 0=未設定(親しい), 1=逃亡寸前, 2=疎疎しい, 3=気まずい, 4=普通, 5=親しい, 6=きわめて親しい

	if (friendlity == 0) {
		// 「未設定」の場合は「親しい」で上書き
		friendlity = 5;
	}
	if (Math.floor(spDefRemain / ITEM_SP_PET_FRIENDLY_OVER_HIGHEST) > 0) {
		// Item SP が「きわめて親しい以上」
		if (friendlity < 6) {
			// 親密度が「きわめて親しい」より低い
			return -1;
		}
		return spDefRemain % ITEM_SP_PET_FRIENDLY_OVER_HIGHEST;
	}
	else if (Math.floor(spDefRemain / ITEM_SP_PET_FRIENDLY_OVER_HIGH) > 0) {
		// Item SP が「親しい以上」
		if (friendlity < 5) {
			// 親密度が「親しい」より低い
			return -1;
		}
		return spDefRemain % ITEM_SP_PET_FRIENDLY_OVER_HIGH;
	}

	// 親密度条件が設定されていない場合はそのまま返す
	return spDefRemain;
}

/**
 * アイテムに設定されたフラグ付きＳＰ定義ＩＤが、BaseLv以上条件に適合するかを検査する.
 */
function CheckSpDefBaseLvOver(spDefRemain) {

	var spDefCondition = 0;
	var spDefBase = ITEM_SP_BASE_LV_OVER_170_OFFSET;

	// 条件を取得
	spDefCondition = Math.floor(spDefRemain / spDefBase);

	// 条件を検査し、満たさない場合は -1 を返す
	switch (spDefCondition) {
	case 1:
		if (n_A_BaseLV < 170) {
			return -1;
		}
		break;
	case 2:
		if (n_A_BaseLV < 100) {
			return -1;
		}
		break;
	case 3:
		if (n_A_BaseLV > 99) {
			return -1;
		}
		break;
	case 4:
		if (n_A_BaseLV < 175) {
			return -1;
		}
		break;
	case 5:
		if (n_A_BaseLV < 250) {
			return -1;
		}
		break;
	}

	// 条件を満たす場合は、残りのＳＰ定義値を返す
	return (spDefRemain % spDefBase);
}

/**
 * アイテムに設定されたフラグ付きＳＰ定義ＩＤが、職業条件に適合するかを検査する.
 */
function CheckSpDefJobRestrict(spDefRemain) {

	var spDefCondition = 0;
	var spDefBase = ITEM_SP_JOB_RESTRICT_NOVICE_OFFSET;

	// 条件を取得
	spDefCondition = Math.floor(spDefRemain / spDefBase) - 1;

	// 条件を検査し、満たさない場合は -1 を返す
	if (spDefCondition >= 0) {
		if (!IsSameJobClass(spDefCondition)) {
			return -1;
		}
	}

	// 条件を満たす場合は、残りのＳＰ定義値を返す
	return (spDefRemain % spDefBase);
}

/**
 * アイテムに設定されたフラグ付きＳＰ定義ＩＤが、純粋なステータス条件に適合するかを検査する.
 */
function CheckSpDefPureStatus(spDefRemain) {
	const spDefBase = ITEM_SP_PURE_STR_90_OFFSET;
	// アイテムSP条件取得
	let spDefCondition = Math.floor(spDefRemain / spDefBase);
	if (spDefCondition === 0) {
		// 条件が設定されていない場合はそのまま返す
		return spDefRemain;
	}
	// 純粋なステータスを取得
	const pureStatusValue = [SU_STR, SU_AGI, SU_VIT, SU_INT, SU_DEX, SU_LUK];	// 基本ステータス [SU_STR, SU_AGI, SU_VIT, SU_INT, SU_DEX, SU_LUK]
	const pureSpStatusValue = g_pureStatus.slice(6, 12);						// 特性ステータス [SU_POW, SU_STA, SU_WIS, SU_SPL, SU_CON, SU_CRT]
	const idxStatus = (spDefCondition - 1) % 6;									// ステータス識別用の添字 0 ～ 5 を得る
	// 条件を満たす場合 true
	let boolResult = false;
	if (spDefCondition >= 55) {
		// 純粋な特性ステータスが50以上の場合 (55 - 60)
		boolResult = pureSpStatusValue[idxStatus] >= 50;
	} else if (spDefCondition >= 49) {
		// 純粋なステータスが100以上の場合 (49 - 54)
		boolResult = pureStatusValue[idxStatus] >= 100;
	} else if (spDefCondition >= 43) {
		// 純粋な特性ステータスが100以上の場合 (43 - 48)
		boolResult = pureSpStatusValue[idxStatus] >= 100;
	} else if (spDefCondition >= 37) {
		// 純粋なステータスが130以上の場合 (37 - 42)
		boolResult = pureStatusValue[idxStatus] >= 130;
	} else if (spDefCondition >= 31) {
		// 純粋なステータスが80以上の場合 (31 - 36)
		boolResult = pureStatusValue[idxStatus] >= 80;		
	} else if (spDefCondition >= 25) {
		// 純粋なステータスが110以上の場合 (25 - 30)
		boolResult = pureStatusValue[idxStatus] >= 110;
	} else if (spDefCondition >= 19) {
		// 純粋なステータスが125以上の場合 (19 - 24)
		boolResult = pureStatusValue[idxStatus] >= 125;
	} else if (spDefCondition >= 13) {
		// 純粋なステータスが120以上の場合 (13 - 18)
		boolResult = pureStatusValue[idxStatus] >= 120;
	} else if (spDefCondition >= 7) {
		// 純粋なステータスが108以上の場合 (7 - 12)
		boolResult = pureStatusValue[idxStatus] >= 108;
	} else if (spDefCondition >= 1) {
		// 純粋なステータスが90以上の場合 (1 - 6)
		boolResult = pureStatusValue[idxStatus] >= 90;
	}
	// 判定結果
	if (boolResult) {
		// 指定ステータスが条件を満たす場合は残りの値を返す
		return (spDefRemain % spDefBase);
	} else {
		// 条件を満たさない場合
		return -1;
	}
}

/**
 * アイテムに設定されたフラグ付きＳＰ定義ＩＤが、精錬値以上条件に適合するかを検査する.
 */
function CheckSpDefRefineOver(spDefRemain, eqpRefined) {

	var spDefCondition = 0;
	var spDefBase = ITEM_SP_REFINE_OVER_1_OFFSET;

	// 条件を取得
	spDefCondition = Math.floor(spDefRemain / spDefBase);

	// 条件を検査し、満たさない場合は -1 を返す
	if (eqpRefined < spDefCondition) {
		return -1;
	}

	// 条件を満たす場合は、残りのＳＰ定義値を返す
	return (spDefRemain % spDefBase);
}

/**
 * アイテムの超越段階が「超越段階が◯以上のとき」を満たしているか検査する
 * @param {*} spDefRemain フラグ付きアイテムSP（BitInt の場合と Int の場合がある）
 * @param {0, 1, 2, 3, 4} eqpTranscendence 超越段階
 * @returns 
 */
function CheckSpDefTransendenceOver(spDefRemain, eqpTranscendence) {
	// 超越条件が指定されている場合
	baseFlag = toSafeBigInt(ITEM_SP_TRANSCENDENCE_1);
	if (spDefRemain >= baseFlag) {
		// BigInt の場合、小数点以下が自動的に切り捨てられる
		requireTranscendence = parseInt(spDefRemain / baseFlag);
		// 超越条件を満たす場合
		if (eqpTranscendence >= requireTranscendence) {
			return parseInt(spDefRemain % baseFlag);
		}
		// 超越条件を満たさない場合
		return -1;
	}
	// 超越条件が指定されていない場合
	return spDefRemain;	
}

/**
 * アイテムの装備部位が「◯◯に装備しているとき」を満たしているか検査する.
 * 現状ではカードだけチェックしている.
 * 拡張したければ超越段階を参考にして呼び出し元を増やしてください.
 * @param {Number} spDefRemain フラグ付きアイテムSP（BitInt の場合と Int の場合がある）
 * @param {*} location 実際に装備している部位
 * @returns 
 */
function CheckSpDefEquipmentLocation(spDefRemain, location) {
	// アイテムSPで装備部位が指定されている場合
	baseFlag = toSafeBigInt(ITEM_SP_EQUIPMENT_LOCATION_BODY);
	if (spDefRemain >= baseFlag) {
		// BigInt の場合、小数点以下が自動的に切り捨てられる
		requireEquipLocation = parseInt(spDefRemain / baseFlag);
		switch(requireEquipLocation) {
			case 1:	// 鎧
				switch(location) {
					case CARD_REGION_ID_BODY:
					case CARD_REGION_ID_ENCHANT_BODY_1:
					case CARD_REGION_ID_ENCHANT_BODY_2:
					case CARD_REGION_ID_ENCHANT_BODY_3:
						return parseInt(spDefRemain % baseFlag);
				}
				break;
			case 2:	// 肩にかける物
				switch(location) {
					case CARD_REGION_ID_SHOULDER:
					case CARD_REGION_ID_ENCHANT_SHOULDER_1:
					case CARD_REGION_ID_ENCHANT_SHOULDER_2:
					case CARD_REGION_ID_ENCHANT_SHOULDER_3:
						return parseInt(spDefRemain % baseFlag);
				}
				break;
			case 3:	// 靴
				switch(location) {
					case CARD_REGION_ID_SHOES:
					case CARD_REGION_ID_ENCHANT_SHOES_1:
					case CARD_REGION_ID_ENCHANT_SHOES_2:
					case CARD_REGION_ID_ENCHANT_SHOES_3:
						return parseInt(spDefRemain % baseFlag);
				}
				break;
			case 4:	// アクセサリー
				switch(location) {
					case CARD_REGION_ID_ACCESSARY_1:
					case CARD_REGION_ID_ENCHANT_ACCESSARY_1_1:
					case CARD_REGION_ID_ENCHANT_ACCESSARY_1_2:
					case CARD_REGION_ID_ENCHANT_ACCESSARY_1_3:
					case CARD_REGION_ID_ACCESSARY_2:
					case CARD_REGION_ID_ENCHANT_ACCESSARY_2_1:
					case CARD_REGION_ID_ENCHANT_ACCESSARY_2_2:
					case CARD_REGION_ID_ENCHANT_ACCESSARY_2_3:
						return parseInt(spDefRemain % baseFlag);
				}
				break;
			case 5:	// 兜中段
				switch(location) {
					case CARD_REGION_ID_HEAD_MID:
						return parseInt(spDefRemain % baseFlag);
				}
				break;
		}
		// 実際の装備部位が条件を満たさない場合
		return -1;
	}
	// アイテムSPで装備部位が指定されていない場合
	return spDefRemain;	
}

/**
 * 職業の基本条件を設定する
 */
function InitJobInfo(jobId) {
	// 職業IDが引数で渡されなかった時用のコード
	if (typeof jobId === "undefined" || jobId === null) {
		jobId = document.getElementById("OBJID_SELECT_JOB").value;
	}

	// TODO: データ移行過渡処理
	// 移行後の通常処理（追加で行う）
	if (IsEnableMigrationBlockNewProcess()) {
		let jobData = JobMap.getById(jobId);
		g_charaDataManager.GetCharaData(MIG_CHARA_MANAGER_ID_MAIN).SetJob(jobData.getMigIdNum());
	}
}

/**
 * indexOf が使えないブラウザ向けに作成された代替関数
 * @param {*} NS1 検索する値
 * @param {*} NS2 検索対象の配列
 * @returns 見つかった場合は 1 / 見つからなかった場合は 0
 */
function NumSearch(NS1, NS2){
	let end = NS2.length - 1;
	for(let i = 0; i <= end; i++){
		if(NS1 == NS2[i]) return 1;
	}
	return 0;
}

/**
 * indexOf が使えないブラウザ向けに作成された代替関数
 * @param {Object} NS1 検索する値
 * @param {Array} NS2 検索対象の配列
 * @returns 最初に要素が見つかった位置 / 見つからなかった場合は -1
 */
function NumSearch2(NS1, NS2){
	let end = NS2.length - 1;
	for(let i = 0; i <= end; i++){
		if(NS1 == NS2[i]) return i;
	}
	return -1;
}

/**
 * 古びた頭装備の装備数を取得する.
 * @return 装備個数（０～）
 */
function EquipNumSearchFurubitaHead() {

	// いずれかの古びた頭装備があれば、１個
	if (EquipNumSearch(ITEM_ID_FURUBITA_BONECIRCRET)
		|| EquipNumSearch(ITEM_ID_FURUBITA_BALLERINA)
		|| EquipNumSearch(ITEM_ID_FURUBITA_KAZENO_SASAYAKI)
		|| EquipNumSearch(ITEM_ID_FURUBITA_BLAZINGSOUL)
		|| EquipNumSearch(ITEM_ID_FURUBITA_MARYOKUSEKI)
		|| EquipNumSearch(ITEM_ID_FURUBITA_MIDASS)
		|| EquipNumSearch(ITEM_ID_FURUBITA_MINSTRELSONG)
		|| EquipNumSearch(ITEM_ID_FURUBITA_SHADOWCROWN)
		|| EquipNumSearch(ITEM_ID_FURUBITA_DRIVERBAND_KIRO)
		|| EquipNumSearch(ITEM_ID_FURUBITA_DRIVERBAND_AKA)
		|| EquipNumSearch(ITEM_ID_FURUBITA_MITRA)
		|| EquipNumSearch(ITEM_ID_FURUBITA_RUNECIRCRET)
		|| EquipNumSearch(ITEM_ID_FURUBITA_MEISAIUSAGI)
		|| EquipNumSearch(ITEM_ID_FURUBITA_SHUGONOKANNMURI)
		) {
		return 1;
	}

	// 該当なし
	return 0;

}

/**
 * 古びたシリーズセットの装備セット数を取得する.
 * @return 装備セット数（０～）
 */
function EquipNumSearchFurubitaSet() {

	// 戦死者のマントは必須
	if(EquipNumSearch(ITEM_ID_SENSHISHANO_MANT) == 0){
		return 0;
	}

	// いずれかの古びた頭装備があれば、１セット換算
	if (EquipNumSearchFurubitaHead()) {
		return 1;
	}

	// 該当なし
	return 0;
}

function ROUNDDOWN(num){
	if(num >= 0){
		num = Math.floor(num) }else{
			num = Math.floor(-1 * num);
			num = (-1 * num);
		}
	return num;
}

function ROUNDUP(num){
	if(num >= 0){
		num = Math.ceil(num)
	}else{
		num = Math.floor(num);
	}
	return num;
}

const SpeedPotName = ["なし","スピードアップポーション","ハイスピードポーション","バーサークポーション"];
const EnName =["なし","水","地","火","風","毒","聖","闇","念","死"];

// 他の関数実行に先駆けて初期化される必要があるので load だとタイミングが遅い. DOMContentLoaded を指定する必要がある.
document.addEventListener('DOMContentLoaded', () => {
	console.log("DOM Content is loaded.");
	// YAMLデータのロードが完了していたら発火
	waitForDataLoaded().then(() => {
		console.log("All data is loaded.");

		// 計算機設定の読み込み
		if (document.getElementById("OBJID_SAVE_BLOCK_MIG")) {
			CSaveController.LoadSettingFromLocalStorageMIG();
		}

		document.calcForm.A_SpeedPOT.options[0] = new Option(SpeedPotName[0],0);
		document.calcForm.A_SpeedPOT.options[1] = new Option(SpeedPotName[1],1);

		for (var i=0; i<=9; i++) {
			document.calcForm.A_Weapon_zokusei.options[i] = new Option(EnName[i],i);
		}

		CMonsterMapAreaComponentManager.RebuildControls();

		//--------------------------------
		// モンスター手入力設定欄の初期化
		//--------------------------------
		g_objMobConfInput = new CMobConfInputAreaComponentManager(g_dataManagerMobConfInput);
		g_objMobConfInput.BuildUpSelectArea(document.getElementById("OBJID_TD_MOB_CONF_INPUT_NEW"), false);

		//--------------------------------
		// ステートフルデータの初期化
		//--------------------------------
		UpdateStatefullDataOnChangeEquip(EQUIP_REGION_ID_ARMS);
		UpdateStatefullDataOnChangeEquip(EQUIP_REGION_ID_ARMS_LEFT);
		UpdateStatefullDataOnChangeEquip(EQUIP_REGION_ID_HEAD_TOP);
		UpdateStatefullDataOnChangeEquip(EQUIP_REGION_ID_HEAD_MID);
		UpdateStatefullDataOnChangeEquip(EQUIP_REGION_ID_HEAD_UNDER);
		UpdateStatefullDataOnChangeEquip(EQUIP_REGION_ID_SHIELD);
		UpdateStatefullDataOnChangeEquip(EQUIP_REGION_ID_BODY);
		UpdateStatefullDataOnChangeEquip(EQUIP_REGION_ID_SHOULDER);
		UpdateStatefullDataOnChangeEquip(EQUIP_REGION_ID_SHOES);
		UpdateStatefullDataOnChangeEquip(EQUIP_REGION_ID_ACCESSARY_1);
		UpdateStatefullDataOnChangeEquip(EQUIP_REGION_ID_ACCESSARY_2);

		if (document.getElementById("OBJID_SAVE_BLOCK_MIG")) {
			CSaveController.LoadFromLocalStorageMIG();
			// 画面上部セーブ選択セレクトボックスの初期化
			const objSelect = document.getElementById("OBJID_SELECT_SAVE_DATA_MIG");
			HtmlRemoveAllChild(objSelect)
			for (let idx = 0; idx < CSaveController.CHARA_DATA_COUNT; idx++) {
				const optText = CSaveController.getDisplayName(idx);
				HtmlCreateElementOption(idx, optText, objSelect);
			}
			// 確認ダイアログの有効化スイッチを初期化
			if (CSaveController.getSettingProp(CSaveDataConst.propNameConfirmDialogSwitch) == 1) {
				$("#OBJID_SWITCH_CONFIRM_DIALOG").click();
			}
		}
		else {
			LoadSaveDataToCalculator();
		}

		/**
		 * 新形式を前提としたロード処理
		 * 初代の a 形式
		 * 避難所の b 形式
		 * Hub の c 形式
		 * どれも読み込めることを確認
		 */
		// URL引数のチェック
		const query = window.location.search;
		const param = query.replace("?", "");
		const patternRtx = /^rtx[0-9]+:/
		if (param.length > 0 && !patternRtx.test(param)) {
			// ラトリオ独自のロード処理
			CSaveController.loadFromURL(param);
		} else {
			// URLロードがない場合は、ノービスを初期ジョブとして設定
			changeJobSettings("NOVICE");
		}

		// 再計算
		CalcStatusPoint(true);
		calc();

		/**
		 * カスタム表示の状態を復元する
		 * 装備・ステータスに依存するカスタム表示欄があるので再計算後に実施する
		 */
		if (CSaveController.getSettingProp(CSaveDataConst.propNameFloatingInfoAreaSwitch) === 1n) {
			// カスタム表示を開く
			document.getElementById("OBJID_FLOATING_INFO_AREA_EXTRACT_CHECKBOX").click();
			// 中身を復元する
			CFloatingInfoAreaComponentManager.LoadFromLocalStorage();
		}
		/**
		 * アイテム情報の状態を復元する
		 */
		if (CSaveController.getSettingProp(CSaveDataConst.propNameItemInfoSwitch) === 1n) {
			// カスタム表示を開く
			document.getElementById("OBJID_ITEM_INFO_EXTRACT_CHECKBOX").click();
			// 中身を復元する
			CItemInfoManager.LoadFromLocalStorage();
		}
	});
});

function LoadSaveDataToCalculator () {

	var idx = 0;
	var idxUndefined = 0;

	LoadCookieConf();

	LoadCookie3();

	// セーブデータをミスって公開してしまった時の保険か何か？
	for (idx = 1; idx <= 19; idx++) {

		idxUndefined = SaveDataAll[idx].search("undefined");

		if (idxUndefined >= 0) {
			SaveDataAll[idx] = SaveDataAll[idx].substring(0, idxUndefined) + "a999";
		}
	}
}

/**
 * 計算機の初回ロード時、および職業変更時に呼び出される初期化関数
 * @param {*} jobId 
 */
function Init(jobId){
	// 職業IDが引数で渡されなかった時用のコード
	if (typeof jobId === "undefined" || jobId === null) {
		jobId = document.getElementById("OBJID_SELECT_JOB").value;
	}

	var idx = 0;

	n_A_BaseLV = 1;
	n_A_JobLV = 1;

	n_A_STR = 1;
	n_A_AGI = 1;
	n_A_VIT = 1;
	n_A_DEX = 1;
	n_A_INT = 1;
	n_A_LUK = 1;

	SU_STR = n_A_STR;
	SU_AGI = n_A_AGI;
	SU_VIT = n_A_VIT;
	SU_DEX = n_A_DEX;
	SU_INT = n_A_INT;
	SU_LUK = n_A_LUK;

	document.calcForm.A_Weapon_zokusei.value = 0;
	n_A_Weapon_zokusei = 0;
	document.calcForm.A_Weapon_ATKplus.value = 0;
	n_A_Weapon_ATKplus = 0;
	n_A_Weapon2_ATKplus = 0;
	document.calcForm.A_HEAD_DEF_PLUS.value = 0;
	document.calcForm.A_BODY_DEF_PLUS.value = 0;
	document.calcForm.A_SHIELD_DEF_PLUS.value = 0;
	document.calcForm.A_SHOULDER_DEF_PLUS.value = 0;
	document.calcForm.A_SHOES_DEF_PLUS.value = 0;
	n_A_HEAD_DEF_PLUS = 0;
	n_A_BODY_DEF_PLUS = 0;
	n_A_SHIELD_DEF_PLUS = 0;
	n_A_SHOULDER_DEF_PLUS = 0;
	n_A_SHOES_DEF_PLUS = 0;

	n_A_Equip = new Array();
	for(let i = 0; i <= ITEMSET_ID_LIMIT_WITH_ITEM; i++) n_A_Equip[i] = 0;

	n_A_card = new Array();
	for(let i = 0; i <= ITEMSET_ID_LIMIT_WITH_CARD; i++) n_A_card[i] = 0;

	n_A_costume = new Array();
	for(i = 0; i < COSTUME_REGION_ID_COUNT; i++) {
		n_A_costume[i] = 0;
	}

	// 対プレイヤー設定 の初期化
	n_B_TAISEI = Array(MOB_CONF_PLAYER_LIMIT).fill(0);
	// モンスター状態強化 の初期化
	n_B_KYOUKA = Array(MOB_CONF_BUF_LIMIT).fill(0);
	// モンスター状態異常 の初期化
	n_B_IJYOU = Array(MOB_CONF_DEBUF_LIMIT).fill(0);
	// ギルドスキル/ゴスペル/他 の初期化
	n_A_PassSkill4 = Array(BUFF_CONF_GUILD_LIMIT).fill(0);
	// アイテム・食品他 の初期化
	n_A_PassSkill7 = Array(BUFF_CONF_FOOD_LIMIT).fill(0);
	// 演奏・踊り系スキル の初期化
	n_A_PassSkill3 = Array(BUFF_CONF_MUSICAL_LIMIT).fill(0);
	// 職固有自己支援 の初期化
	n_A_PassSkill = Array(BUFF_CONF_SELF_LIMIT).fill(0);
	// その他の支援/設定 の初期化
	n_A_PassSkill8 = Array(BUFF_CONF_OTHER_LIMIT).fill(0);

	// オートスペル設定
	n_A_PassSkill5 = new Array();
	for (var idx = 0 ; idx < AUTO_SPELL_SETTING_COUNT; idx++) {
		n_A_PassSkill5[OBJID_OFFSET_AS_SKILL_ID + idx] = 0;
		n_A_PassSkill5[OBJID_OFFSET_AS_SKILL_LV + idx] = 0;
		n_A_PassSkill5[OBJID_OFFSET_AS_SKILL_PROB + idx] = 0;
	}

	// プレイヤー状態異常設定
	g_confDataDebuff = Array(50).fill(0);

	// 時限効果
	for (idx = 0; idx < g_timeItemConf.length; idx++) {
		g_timeItemConf[idx] = 0;
	}
	for (idx = 0; idx < g_timeItemConfEffective.length; idx++) {
		g_timeItemConfEffective[idx] = true;
	}

	if (GetSlotMode() == 0) {
		//--------------------------------
		// カードスロットの初期化
		//--------------------------------
		BreakSlotOfCardAll();
		BreakSlotOfCostumeAll();
		RebuildSlotAsCardAll();
		RebuildSlotAsCostumeAll(jobId);
		ClearCardSlotAll();
		ClearCostumeSlotAll();
		ClearRndOptSelectAll();
		// ClearRndEnchSlotAll();
		SetCardSlotEnabilityAll();
		SetCostumeSlotEnabilityAll();
		SetStatefullData("DATA_OBJID_SLOT_MODE_BUTTON", 0);
	}
	else {
		//--------------------------------
		// ランダムエンチャントの初期化
		//--------------------------------
		BreakSlotOfRndEnchAll();
		RebuildSlotAsRndEnchAll();
		ClearCardSlotAll();
		ClearCostumeSlotAll();
		ClearRndOptSelectAll();
		// ClearRndEnchSlotAll();
		SetRndOptEnablityAll();
		// SetEnchSlotsEnablity();
	}

	//--------------------------------
	// 装備欄の初期化
	//--------------------------------
	InitEquipDefaultAll();
	ClearEquipAll();

	n_Skill1SW = false;
	n_Skill3SW = false;
	n_Skill4SW = false;
	n_Skill7SW = false;
	n_Skill8SW = false;
	document.calcForm.A1_SKILLSW.checked = 0;

	//--------------------------------
	// 一次職支援設定欄の初期化
	//--------------------------------
	g_confDataIchizi = new Array();
	g_objCharaConfIchizi = new CCharaConfIchizi(g_confDataIchizi);
	g_objCharaConfIchizi.BuildUpSelectArea(document.getElementById("OBJID_TD_CHARA_CONF_ICHIZI"), false);

	//--------------------------------
	// 二次職支援設定欄の初期化
	//--------------------------------
	g_confDataNizi = new Array();
	g_objCharaConfNizi = new CCharaConfNizi(g_confDataNizi);
	g_objCharaConfNizi.BuildUpSelectArea(document.getElementById("OBJID_TD_CHARA_CONF_NIZI"), false);

	//--------------------------------
	// 三次職支援設定欄の初期化
	//--------------------------------
	g_confDataSanzi = new Array();
	g_objCharaConfSanzi = new CCharaConfSanzi(g_confDataSanzi);
	g_objCharaConfSanzi.BuildUpSelectArea(document.getElementById("OBJID_TD_CHARA_CONF_SANZI"), false);

	//--------------------------------
	// 四次職支援設定欄の初期化
	//--------------------------------
	g_confDataYozi = new Array();
	g_objCharaConfYozi = new CCharaConfYozi(g_confDataYozi);
	g_objCharaConfYozi.BuildUpSelectArea(document.getElementById("OBJID_TD_CHARA_CONF_YOZI"), false);

	//--------------------------------
	// デバフ設定欄の初期化
	//--------------------------------
	g_confDataDebuff = new Array();
	g_objCharaConfDebuff = new CCharaConfDebuff(g_confDataDebuff);
	g_objCharaConfDebuff.BuildUpSelectArea(document.getElementById("OBJID_TD_CHARA_CONF_DEBUFF"), false);

	document.calcForm.A3_SKILLSW.checked = 0;
	document.calcForm.A4_SKILLSW.checked = 0;

	// オートスペル設定欄
	objInput = document.getElementById("OBJID_EXTRACT_SETTING_AUTO_SPELL");
	if (objInput) {
		objInput.checked = 0;
	}

	document.calcForm.A7_SKILLSW.checked = 0;
	document.calcForm.A8_SKILLSW.checked = 0;


	//--------------------------------
	// 時限効果欄の初期化
	//--------------------------------
	CTimeItemAreaComponentManager.CloseArea();



	//--------------------------------
	// 攻撃方法欄の初期化
	//--------------------------------
	CAttackMethodAreaComponentManager.RebuildControls();



	//--------------------------------
	// 戦闘クイック調整欄の初期化
	//--------------------------------
	CBattleQuickControlAreaComponentManager.CloseArea();



	//--------------------------------
	// 性能カスタマイズ欄の初期化
	//--------------------------------
	g_confDataCustomStatus = new Array();
	g_objCharaConfCustomStatus = new CCharaConfCustomStatus(g_confDataCustomStatus);
	g_objCharaConfCustomStatus.BuildUpSelectArea(document.getElementById("OBJID_TD_CHARA_CONF_CUSTOM_STATUS"), false);

	g_confDataCustomAtk = new Array();
	g_objCharaConfCustomAtk = new CCharaConfCustomAtk(g_confDataCustomAtk);
	g_objCharaConfCustomAtk.BuildUpSelectArea(document.getElementById("OBJID_TD_CHARA_CONF_CUSTOM_ATK"), false);

	g_confDataCustomDef = new Array();
	g_objCharaConfCustomDef = new CCharaConfCustomDef(g_confDataCustomDef);
	g_objCharaConfCustomDef.BuildUpSelectArea(document.getElementById("OBJID_TD_CHARA_CONF_CUSTOM_DEF"), false);

	g_confDataCustomSkill = new Array();
	g_objCharaConfCustomSkill = new CCharaConfCustomSkill(g_confDataCustomSkill);
	g_objCharaConfCustomSkill.BuildUpSelectArea(document.getElementById("OBJID_TD_CHARA_CONF_CUSTOM_SKILL"), false);

	g_confDataCustomSpecStatus = new Array();
	g_objCharaConfCustomSpecStatus = new CCharaConfCustomSpecStatus(g_confDataCustomSpecStatus);
	g_objCharaConfCustomSpecStatus.BuildUpSelectArea(document.getElementById("OBJID_TD_CHARA_CONF_CUSTOM_SPECSTATUS"), false);





//	document.calcForm.B_IJYOUSW.checked = 0;
	BuildUpMobConfDebufSelectArea(document.getElementById("OBJID_TD_MOB_CONF_DEBUF"), false);
	RefreshMobConfDebufSelectAreaHeader();

//	document.calcForm.B_KYOUKASW.checked = 0;
	BuildUpMobConfBufSelectArea(document.getElementById("OBJID_TD_MOB_CONF_BUF"), false);
	RefreshMobConfBufSelectAreaHeader();

//	document.calcForm.B_TAISEISW.checked = 0;
	BuildUpMobConfPlayerSelectArea(document.getElementById("OBJID_TD_MOB_CONF_PLAYER"), false);
	RefreshMobConfPlayerSelectAreaHeader();
	RefreshMobConfPlayerControlCSS();

//	document.calcForm.B_MAKESW.checked = 0;
/*
	BuildUpMobConfInputSelectArea(document.getElementById("OBJID_TD_MOB_CONF_INPUT"), false);
	RefreshMobConfInputSelectAreaHeader();
	RefreshMobConfInputControlCSS();
*/



	OnClickQuickControlSW();
	Click_PassSkillSW();
	OnClickSkillSWLearned();
	Click_Skill3SW();
	Click_Skill4SW();
	OnClickExtractSettingAutoSpell();

//	Click_Skill6SW();

	Click_Skill7SW();
	Click_Skill8SW();
//	Click_Skill9SW();
//	Click_Skill10SW();

//	Click_IjyouSW();
//	Click_EnemyKyoukaSW();
//	Click_EnemyTaiseiSW();
//	Click_Monster_MakeSW();

	// TODO: 次世代版ではなくなるため
	try {
		Click_CONFIG();
	}
	catch (err) {
	}

//	OnClickBrowserMigrationSwitch();

	CItemInfoManager.RebuildControls();

	BuildUpCastSimSimulateArea(document.getElementById("OBJID_TD_CASTSIM"), false);
}

g_intervalFunctionSimulateCastTime = null;
g_castProgressInterval = 10;

function OnClickSimulateCastTimeStart(castTime, delayTime) {

	// 詠唱イメージ
	var objSelect = null;
	var objInput = null;
	var objProgress = null;
	var countUpFunction = null;

	// 更新間隔設定の取得
	objSelect = document.getElementById("OBJID_SELECT_CASTSIM_INTERVAL");
	g_castProgressInterval = parseInt(objSelect.value);

	objInput = document.getElementById("OBJID_BUTTON_SIMULATE_CAST_TIME");
	objInput.setAttribute("value", "ｷｬﾝｾﾙ");
	objInput.setAttribute("onClick", "OnClickSimulateCastTimeStop(" + castTime + ", " + delayTime + ")");

	objProgress = document.getElementById("OBJID_PROGRESS_SIMULATE_CAST_TIME");
	objProgress.setAttribute("max", castTime * 1000);
	objProgress.setAttribute("value", 0);

	var castValue = 0;
	var maxValue = castTime * 1000;

	countUpFunction = function() {
// 高速化を目指して外だし
//		var objProgress = document.getElementById("OBJID_PROGRESS_SIMULATE_CAST_TIME");
//		var castValue = parseInt(objProgress.getAttribute("value"));
//		var maxValue = parseInt(objProgress.getAttribute("max"));

		castValue += g_castProgressInterval;

		objProgress.setAttribute("value", castValue);

		if (maxValue <= castValue) {
			OnStartCountDelayTime(castTime, delayTime);
		}
	};

	g_intervalFunctionSimulateCastTime = setInterval(countUpFunction, g_castProgressInterval);
}

function OnStartCountDelayTime(castTime, delayTime) {

	var objProgress = null;
	var countDownFunction = null;

	// カウントアップ関数をクリア
	clearInterval(g_intervalFunctionSimulateCastTime);

	// プログレスバーの設定を再設定
	objProgress = document.getElementById("OBJID_PROGRESS_SIMULATE_CAST_TIME");
	objProgress.setAttribute("max", delayTime * 1000);
	objProgress.setAttribute("value", delayTime * 1000);

	// カウントダウン関数を定義
	countDownFunction = function() {
		var objProgress = document.getElementById("OBJID_PROGRESS_SIMULATE_CAST_TIME");
		var castValue = parseInt(objProgress.getAttribute("value"));
		var maxValue = parseInt(objProgress.getAttribute("max"));

		castValue -= g_castProgressInterval;

		objProgress.setAttribute("value", castValue);

		if (castValue <= 0) {
			OnClickSimulateCastTimeStop(castTime, delayTime);
		}
	};

	// カウントダウン関数を登録
	g_intervalFunctionSimulateCastTime = setInterval(countDownFunction, g_castProgressInterval);
}

function OnClickSimulateCastTimeStop(castTime, delayTime) {

	var objInput = null;

	clearInterval(g_intervalFunctionSimulateCastTime);

	objInput = document.getElementById("OBJID_BUTTON_SIMULATE_CAST_TIME");
	objInput.setAttribute("value", "詠唱!!");
	objInput.setAttribute("onClick", "OnClickSimulateCastTimeStart(" + castTime + ", " + delayTime + ")");
}
